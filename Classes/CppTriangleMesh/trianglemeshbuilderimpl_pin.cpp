#include "trianglemeshbuilderimpl.h"

#include <sstream>

std::string ribi::trim::TriangleMeshBuilderImpl::CreateOpenFoamPin() const noexcept
{
  std::stringstream s;
  s
    << "101			\n"
    << "(			\n"
    << "(	0		1.7000E+005	)\n"
    << "(	0.0000005	1.7120E+005	)\n"
    << "(	0.000001	1.7135E+005	)\n"
    << "(	0.0000015	1.7152E+005	)\n"
    << "(	0.000002	1.7172E+005	)\n"
    << "(	0.0000025	1.7193E+005	)\n"
    << "(	0.000003	1.7218E+005	)\n"
    << "(	0.0000035	1.7245E+005	)\n"
    << "(	0.000004	1.7277E+005	)\n"
    << "(	0.0000045	1.7312E+005	)\n"
    << "(	0.000005	1.7351E+005	)\n"
    << "(	0.0000055	1.7395E+005	)\n"
    << "(	0.000006	1.7445E+005	)\n"
    << "(	0.0000065	1.7501E+005	)\n"
    << "(	0.000007	1.7564E+005	)\n"
    << "(	0.0000075	1.7635E+005	)\n"
    << "(	0.000008	1.7715E+005	)\n"
    << "(	0.0000085	1.7804E+005	)\n"
    << "(	0.000009	1.7905E+005	)\n"
    << "(	0.0000095	1.8017E+005	)\n"
    << "(	0.00001		1.8144E+005	)\n"
    << "(	0.0000105	1.8285E+005	)\n"
    << "(	0.000011	1.8443E+005	)\n"
    << "(	0.0000115	1.8621E+005	)\n"
    << "(	0.000012	1.8818E+005	)\n"
    << "(	0.0000125	1.9039E+005	)\n"
    << "(	0.000013	1.9285E+005	)\n"
    << "(	0.0000135	1.9560E+005	)\n"
    << "(	0.000014	1.9864E+005	)\n"
    << "(	0.0000145	2.0202E+005	)\n"
    << "(	0.000015	2.0576E+005	)\n"
    << "(	0.0000155	2.0990E+005	)\n"
    << "(	0.000016	2.1446E+005	)\n"
    << "(	0.0000165	2.1948E+005	)\n"
    << "(	0.000017	2.2498E+005	)\n"
    << "(	0.0000175	2.3100E+005	)\n"
    << "(	0.000018	2.3755E+005	)\n"
    << "(	0.0000185	2.4467E+005	)\n"
    << "(	0.000019	2.5236E+005	)\n"
    << "(	0.0000195	2.6065E+005	)\n"
    << "(	0.00002		2.6953E+005	)\n"
    << "(	0.0000205	2.7901E+005	)\n"
    << "(	0.000021	2.8906E+005	)\n"
    << "(	0.0000215	2.9966E+005	)\n"
    << "(	0.000022	3.1078E+005	)\n"
    << "(	0.0000225	3.2237E+005	)\n"
    << "(	0.000023	3.3437E+005	)\n"
    << "(	0.0000235	3.4671E+005	)\n"
    << "(	0.000024	3.5932E+005	)\n"
    << "(	0.0000245	3.7212E+005	)\n"
    << "(	0.000025	3.8500E+005	)\n"
    << "(	0.0000255	3.9788E+005	)\n"
    << "(	0.000026	4.1068E+005	)\n"
    << "(	0.0000265	4.2329E+005	)\n"
    << "(	0.000027	4.3563E+005	)\n"
    << "(	0.0000275	4.4763E+005	)\n"
    << "(	0.000028	4.5922E+005	)\n"
    << "(	0.0000285	4.7034E+005	)\n"
    << "(	0.000029	4.8094E+005	)\n"
    << "(	0.0000295	4.9099E+005	)\n"
    << "(	0.00003		5.0047E+005	)\n"
    << "(	0.0000305	5.0935E+005	)\n"
    << "(	0.000031	5.1764E+005	)\n"
    << "(	0.0000315	5.2533E+005	)\n"
    << "(	0.000032	5.3245E+005	)\n"
    << "(	0.0000325	5.3900E+005	)\n"
    << "(	0.000033	5.4502E+005	)\n"
    << "(	0.0000335	5.5052E+005	)\n"
    << "(	0.000034	5.5554E+005	)\n"
    << "(	0.0000345	5.6010E+005	)\n"
    << "(	0.000035	5.6424E+005	)\n"
    << "(	0.0000355	5.6798E+005	)\n"
    << "(	0.000036	5.7136E+005	)\n"
    << "(	0.0000365	5.7440E+005	)\n"
    << "(	0.000037	5.7715E+005	)\n"
    << "(	0.0000375	5.7961E+005	)\n"
    << "(	0.000038	5.8182E+005	)\n"
    << "(	0.0000385	5.8379E+005	)\n"
    << "(	0.000039	5.8557E+005	)\n"
    << "(	0.0000395	5.8715E+005	)\n"
    << "(	0.00004		5.8856E+005	)\n"
    << "(	0.0000405	5.8983E+005	)\n"
    << "(	0.000041	5.9095E+005	)\n"
    << "(	0.0000415	5.9196E+005	)\n"
    << "(	0.000042	5.9285E+005	)\n"
    << "(	0.0000425	5.9365E+005	)\n"
    << "(	0.000043	5.9436E+005	)\n"
    << "(	0.0000435	5.9499E+005	)\n"
    << "(	0.000044	5.9555E+005	)\n"
    << "(	0.0000445	5.9605E+005	)\n"
    << "(	0.000045	5.9649E+005	)\n"
    << "(	0.0000455	5.9688E+005	)\n"
    << "(	0.000046	5.9723E+005	)\n"
    << "(	0.0000465	5.9755E+005	)\n"
    << "(	0.000047	5.9782E+005	)\n"
    << "(	0.0000475	5.9807E+005	)\n"
    << "(	0.000048	5.9828E+005	)\n"
    << "(	0.0000485	5.9848E+005	)\n"
    << "(	0.000049	5.9865E+005	)\n"
    << "(	0.0000495	5.9880E+005	)\n"
    << "(	0.00005		6.0000E+005	)\n"
    << ")			\n"
  ;
  return s.str();
}
