

##    SymbolicC++ : An object oriented computer algebra system written in C++
##
##    Copyright (C) 2008 Yorick Hardy and Willi-Hans Steeb
##
##    This program is free software; you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation; either version 2 of the License, or
##    (at your option) any later version.
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License along
##    with this program; if not, write to the Free Software Foundation, Inc.,
##    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


# energy.map

# potential
V := c*x;
# trial ansatz
u := x*exp(-a*x);
# eigenvalue equation
Hu := -hb^2/(2*m)*diff(u,x,x) + V*u;

# integrating for finding expectation value
# not normalized yet
res1 := int(u*Hu,x);

# collect the exponential functions 
res2 := collect(res1,exp);

# substitution of the boundary
res3 := 0 - subs(x=0,res2);

# finding the norm of u to normalize
res4 := int(u*u,x);
res5 := -subs(x=0,res4);

# normalized expectation value
expe := res3/res5;

# finding the minimum with respect to a
minim := diff(expe,a);
res6 := solve(minim=0,a);
a := res6[1];

# approximate ground state energy
appgse = subs(a=0,expe);
