<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>BoostTestExample1</title>
  <meta name="description" content="C++ BoostTestExample1"/>
  <meta name="keywords" content="C++ BoostTestExample1 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostTestExample1.htm">BoostTestExample1</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:01:35 2015
 -->
<p><img src="PicBoost.png" alt="Boost"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppBoostTestExample1.htm">Boost.Test example 1</a>
  is a <a href="CppBoostTest.htm">Boost.Test</a> <a href="CppExample.htm">example</a>.
</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppBoostTestExample1.zip">Download the Qt Creator project 'CppBoostTestExample1' (zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppBoostTestExample1/CppBoostTestExample1.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostTestExample1/CppBoostTestExample1.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppBoostTestExample1/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostTestExample1/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppDefine.htm">#define</a> BOOST_TEST_DYN_LINK<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/test/included/unit_test.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bind.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> must_be_equal(<b><a href="CppInt.htm">int</a></b> i, <b><a href="CppInt.htm">int</a></b> j)<br/>
{<br/>
&nbsp;&nbsp;BOOST_CHECK(i <a href="CppOperatorEqual.htm">==</a> j);<br/>
}<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> MyClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test()<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;BOOST_CHECK(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;}<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> my_init_function()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppBoost.htm">boost</a>::unit_test::framework::master_test_suite;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> MyClass::Test as a test <b><a href="CppCase.htm">case</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;master_test_suite().add(BOOST_TEST_CASE(&amp;MyClass::Test));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <a href="CppInt.htm">integer</a>s being equal to themselves<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;master_test_suite().add(BOOST_TEST_CASE(<a href="CppBoostBind.htm">boost::bind</a>(&amp;must_be_equal, 1, 1)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;master_test_suite().add(BOOST_TEST_CASE(<a href="CppBoostBind.htm">boost::bind</a>(&amp;must_be_equal, 2, 2)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;master_test_suite().add(BOOST_TEST_CASE(<a href="CppBoostBind.htm">boost::bind</a>(&amp;must_be_equal, 3, 3)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;master_test_suite().add(BOOST_TEST_CASE(<a href="CppBoostBind.htm">boost::bind</a>(&amp;must_be_equal, 3, 4))); <a href="CppComment.htm">//</a>Error added on purpose<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b>* <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> errors <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::unit_test::unit_test_main( &amp;my_init_function, <a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a> );<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (errors ? "Not all tests succeeded" : "All tests succeeded!") <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output:<br/>
<br/>
Starting <a href="CppOperatorDivide.htm">/</a>home/richel/GitHubs/richelbilderbeek/develop/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>/Test/build-Cpp<a href="CppBoost.htm">Boost</a>TestExample1-Desktop-<a href="CppDebug.htm">Debug</a>/Cpp<a href="CppBoost.htm">Boost</a>TestExample1...<br/>
Running 5 test <b><a href="CppCase.htm">case</a></b>s...<br/>
../Cpp<a href="CppBoost.htm">Boost</a>TestExample1/<a href="CppMain.htm">main</a><a href="CppImplementationFile.htm">.cpp</a>(13): error in "<a href="CppBoostBind.htm">boost::bind</a>(&amp;must_be_equal, 3, 4)": check i <a href="CppOperatorEqual.htm">==</a> j failed<br/>
Not all tests succeeded<br/>
<br/>
*** 1 failure detected in test suite "Master Test Suite"<br/>
/home/richel/GitHubs/richelbilderbeek/develop/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>/Test/build-Cpp<a href="CppBoost.htm">Boost</a>TestExample1-Desktop-<a href="CppDebug.htm">Debug</a>/Cpp<a href="CppBoost.htm">Boost</a>TestExample1 exited with code 0<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
