<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestPylos</title>
  <meta name="description" content="C++ TestPylos"/>
  <meta name="keywords" content="C++ TestPylos "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestPylos.htm">TestPylos</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Sun Aug 17 15:31:14 2014
 -->
<p><a href="ToolTestPylos.htm">TestPylos</a> is a <a href="Tools.htm">tool</a> to test the 
<a href="CppPylos.htm">Pylos</a> (also called 'Pyraos') and 
<a href="CppPylosWidget.htm">PylosWidget</a> <a href="CppClass.htm">classes</a>.</p>
<p>&nbsp;</p>
<p><a href="ToolTestPylos.htm">TestPylos</a> was the start of my 
<a href="GamePylos.htm">Pylos</a> <a href="Games.htm">game</a>.</p>
<p>&nbsp;</p>
<p><a href="ToolTestPylos.htm">TestPylos</a> is programmed in <a href="Cpp.htm">C++</a> 
using the <a href="CppIde.htm">IDE</a> <a href="CppQtCreator.htm">Qt Creator</a>. 
It uses the  <a href="CppBoost.htm">Boost</a>, <a href="CppQt.htm">Qt</a>
and <a href="CppStl.htm">STL</a> <a href="CppLibrary.htm">libraries</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestPylos_1_0.png">View a screenshot of 'TestPylos' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestPylosConsoleExe.zip">Download the 'TestPylos' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestPylosDesktopExe.zip">Download the 'TestPylos' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestPylosWebsiteExe.zip">Download the 'TestPylos' Windows executable (latest version)(zip)</a></li>
  <li><a href="ToolTestPylosSource_1_2.zip">Download the 'TestPylos' source code (version 1.1)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Older downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestPylos_0_3.png">View a screenshot of 'TestPylos' (version 0.3)(png)</a></li>
  <li><a href="ToolTestPylos_0_2.png">View a screenshot of 'TestPylos' (version 0.2)(png)</a></li>
  <li><a href="ToolTestPylos_0_1.png">View a screenshot of 'TestPylos' (version 0.1)(png)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestPylos/ToolTestPylosDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/ToolTestPylosDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPylos.htm">CppPylos</a>/<a href="CppPylos.htm">CppPylos</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTextCanvas.htm">CppTextCanvas</a>/<a href="CppTextCanvas.htm">CppTextCanvas</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPylos.htm">CppQtPylos</a>/<a href="CppQtPylos.htm">CppQtPylos</a>.pri)<br/>
<br/>
include(<a href="ToolTestPylos.htm">ToolTestPylos</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/ToolTestPylosConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/ToolTestPylosConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/<a href="ToolTestPylos.htm">testpylos</a>menudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/<a href="ToolTestPylos.htm">testpylos</a>menudialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/Licence.txt<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/ToolTestPylosDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/ToolTestPylosDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>Console.pri)<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.ui<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/ToolTestPylosWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/ToolTestPylosWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>/<a href="ToolTestPylos.htm">ToolTestPylos</a>Console.pri)<br/>
<a href="CppQmakeSources.htm">SOURCES</a> +=<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> +=<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>coordinat.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>currentmovestate.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>game.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>move.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>TODO<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> allow a Player to pass turn when he/she has no marble<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> add <a href="Tools.htm">tool</a>tips to <a href="CppWidget.htm">widget</a><br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> add investigation of winners<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosgametestsdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosgametestsdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPYLOSGAMETESTSDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPYLOSGAMETESTSDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>DialogTests shows some of the more elaborate tests that<br/>
<a href="CppComment.htm">///</a>are performed on the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">class</a></b><br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPYLOSGAMETESTSDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosgametestsdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosgametestsdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPYLOSMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPYLOSMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_board_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_game_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_show_game_tests_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_random_play_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPYLOSMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>gametestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestPylos.htm">testpylos</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestPylos.htm">testpylos</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_test_board_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_test_game_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_show_game_tests_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>GameTestsDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog().GetAbout());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::on_button_random_play_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosrandomplaydialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosrandomplaydialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPYLOSRANDOMPLAYDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPYLOSRANDOMPLAYDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_n_games_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPYLOSRANDOMPLAYDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylosrandomplaydialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylosrandomplaydialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>game.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestPylos.htm">testpylos</a>randomplaydialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog::on_button_start_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Board&gt; board <a href="CppOperatorAssign.htm">=</a> (ui-&gt;radio_advanced-&gt;isChecked()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;? Board::CreateAdvancedBoard()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: Board::CreateBasicBoard() );<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> won1 <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> won2 <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;ui-&gt;bar_progress-&gt;setValue(0);<br/>
&nbsp;&nbsp;ui-&gt;bar_won_player1-&gt;setValue(0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> max <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ui-&gt;edit_n_games-&gt;text().toStdString());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>max; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Winner winner <a href="CppOperatorAssign.htm">=</a> Game::PlayRandomGame(board);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (winner <a href="CppOperatorEqual.htm">==</a> Winner::player1) <a href="CppOperatorIncrement.htm">++</a>won1; <b><a href="CppElse.htm">else</a></b> <a href="CppOperatorIncrement.htm">++</a>won2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;bar_progress-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;bar_won_player1-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(won1) <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) ) );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;bar_progress-&gt;setValue(max);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>RandomPlayDialog::on_edit_n_games_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;ui-&gt;bar_progress-&gt;setMaximum(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylostestboarddialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylostestboarddialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPYLOSTESTBOARDDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPYLOSTESTBOARDDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>move.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppPylos.htm">pylos</a>board<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/On<a href="CppTime.htm">Time</a>r is called when the <b><a href="CppAuto.htm">auto</a></b>-play/demo mode clicks randomly<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>r();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/When something changes, the log must be updated<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> UpdateLog();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_play_visual_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_advanced_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_basic_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_bw_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_rb_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_set_player1_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_set_player2_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_slider_tilt_sliderMoved(<b><a href="CppInt.htm">int</a></b> position);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPYLOSTESTBOARDDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylostestboarddialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylostestboarddialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/math/constants/constants.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBitmap.htm">QBitmap</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>move.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>mustremovestate.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>positionstate.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppPylos.htm">pylos</a>board<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestPylos.htm">testpylos</a>testboarddialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> PYLOSGAME_H<br/>
#error <a href="CppPylos.htm">Pylos</a>::Game must not be used by a <a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>TestBoard<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog),<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget),<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>(<b><a href="CppThis.htm">this</a></b>))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_<a href="CppPylos.htm">pylos</a>_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Connect the <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r,&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::On<a href="CppTime.htm">Time</a>r<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When there's a winner, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget::HasWinner,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When one of the other selectors changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget::Toggle,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When the selector changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget::SelectorChanged,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When the active player changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>BoardWidget::PlayerChanged,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::UpdateLog);<br/>
<br/>
&nbsp;&nbsp;UpdateLog();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_button_play_visual_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppTime.htm">time</a>r-&gt;isActive())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disable <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> Winner::none)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_advanced-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_basic-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::On<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Click player<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((rand() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2) { ui-&gt;radio_set_player1-&gt;click(); } <b><a href="CppElse.htm">else</a></b> { ui-&gt;radio_set_player2-&gt;click(); }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> r <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppGeometry.htm">geometry</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> r.left() <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> r.width());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> r.top()&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> r.height());<br/>
&nbsp;&nbsp;<a href="CppQPoint.htm">QPoint</a> pos(x,y);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt; e;<br/>
&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseMove,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;mouseMoveEvent(e.get());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseButtonPress,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::LeftButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::LeftButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseButtonPress,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::RightButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::RightButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;mousePressEvent(e.get());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> Winner::none)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_set_player1_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;CanSetPlayer(Player::player1))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetPlayer(Player::player1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_set_player2-&gt;setChecked(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_set_player2_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;CanSetPlayer(Player::player2))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetPlayer(Player::player2);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_set_player1-&gt;setChecked(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_advanced_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;StartAdvanced();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_basic_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;StartBasic();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_bw_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetColorSchemeBlackWhite();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_radio_rb_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetColorSchemeRedBlue();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::UpdateLog()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;text_log-&gt;clear();<br/>
<br/>
&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQString.htm">QString</a>("Selector coordinat: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.htm">QString</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetSelector().ToStr().c_str()));<br/>
<br/>
&nbsp;&nbsp;ui-&gt;bar1-&gt;setValue(m_<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;Count(Position<a href="CppState.htm">State</a>::player1));<br/>
&nbsp;&nbsp;ui-&gt;bar2-&gt;setValue(m_<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;Count(Position<a href="CppState.htm">State</a>::player2));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Other selectors' coordinats: ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat&gt;&amp; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetOtherSelectors();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.empty()) { s<a href="CppOperatorPlusAssign.htm">+=</a>"none"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() &gt; 0) { s<a href="CppOperatorPlusAssign.htm">+=</a> v[0].ToStr(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorEqual.htm">==</a> 2) { s<a href="CppOperatorPlusAssign.htm">+=</a> " and " <a href="CppOperatorPlus.htm">+</a> v[1].ToStr(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Must remove: " <a href="CppOperatorPlus.htm">+</a> ToStr(m_<a href="CppWidget.htm">widget</a>-&gt;GetMustRemove());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Winner: " <a href="CppOperatorPlus.htm">+</a> ToStr(m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Move&gt; v <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetAllPossibleMoves(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_set_player1-&gt;isChecked()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? Player::player1 : Player::player2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "#moves: " <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sz) ;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ": " <a href="CppOperatorPlus.htm">+</a> v[i].ToStr();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestBoardDialog::on_slider_tilt_sliderMoved(<b><a href="CppInt.htm">int</a></b> position)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pi <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::math::constants::pi&lt;<b><a href="CppDouble.htm">double</a></b>&gt;();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radians <a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(position) * 2.0 * pi) <a href="CppOperatorDivide.htm">/</a> 360.0;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;SetTilt(radians);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Tilt: " <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(radians)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " radians (" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(position)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " degrees)";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;slider_tilt-&gt;set<a href="Tools.htm">Tool</a>Tip(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylostestgamedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylostestgamedialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPYLOSTESTGAMEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPYLOSTESTGAMEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/On<a href="CppTime.htm">Time</a>r is called when the <b><a href="CppAuto.htm">auto</a></b>-play/demo mode clicks randomly<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>r();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/When something changes, the log must be updated<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> UpdateLog();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_play_visual_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_advanced_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_basic_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_bw_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_radio_rb_clicked();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppPylos.htm">pylos</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPYLOSTESTGAMEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/qttestpylostestgamedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/qttestpylostestgamedialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBitmap.htm">QBitmap</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>game.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>move.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppPylos.htm">pylos</a>positionstate.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppPylos.htm">pylos</a>board<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppPylos.htm">pylos</a>game<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestPylos.htm">testpylos</a>testgamedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog),<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>),<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>(<b><a href="CppThis.htm">this</a></b>))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_<a href="CppPylos.htm">pylos</a>_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Connect the <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r,&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::On<a href="CppTime.htm">Time</a>r);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When there's a winner, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>::HasWinner,<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When one of the other selectors changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>::Toggle,<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When the selector changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>::SelectorChanged,<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::UpdateLog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When the active player changes, only the log needs to be informed<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>.get(),&amp;<a href="CppQt.htm">Qt</a><a href="CppPylos.htm">Pylos</a>Game<a href="CppWidget.htm">Widget</a>::DoneMove, <b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::UpdateLog);<br/>
<br/>
&nbsp;&nbsp;UpdateLog();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::on_button_play_visual_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppTime.htm">time</a>r-&gt;isActive())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disable <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppPylos.htm">pylos</a>::Winner::none)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_advanced-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;radio_basic-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::On<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> r <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppGeometry.htm">geometry</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> r.left() <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> r.width());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> r.top()&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> r.height());<br/>
&nbsp;&nbsp;<a href="CppQPoint.htm">QPoint</a> pos(x,y);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt; e;<br/>
&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseMove,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;mouseMoveEvent(e.get());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseButtonPress,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::LeftButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::LeftButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQEvent.htm">QEvent</a>::MouseButtonPress,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::RightButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::RightButton,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::NoModifier));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;mousePressEvent(e.get());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppPylos.htm">pylos</a>::Winner::none)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::on_radio_advanced_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;StartAdvanced();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::on_radio_basic_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;StartBasic();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::on_radio_bw_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetColorSchemeBlackWhite();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::on_radio_rb_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetColorSchemeRedBlue();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppPylos.htm">pylos</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestPylos.htm">TestPylos</a>TestGameDialog::UpdateLog()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;text_log-&gt;clear();<br/>
<br/>
&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQString.htm">QString</a>("Selector coordinat: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.htm">QString</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetSelector().ToStr().c_str()));<br/>
<br/>
&nbsp;&nbsp;ui-&gt;bar1-&gt;setValue(m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="CppPylos.htm">Pylos</a>()-&gt;GetBoard()-&gt;Count(Position<a href="CppState.htm">State</a>::player1));<br/>
&nbsp;&nbsp;ui-&gt;bar2-&gt;setValue(m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="CppPylos.htm">Pylos</a>()-&gt;GetBoard()-&gt;Count(Position<a href="CppState.htm">State</a>::player2));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Other selectors' coordinats: ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat&gt;&amp; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetOtherSelectors();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.empty()) { s<a href="CppOperatorPlusAssign.htm">+=</a>"none"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() &gt; 0) { s<a href="CppOperatorPlusAssign.htm">+=</a> v[0].ToStr(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorEqual.htm">==</a> 2) { s<a href="CppOperatorPlusAssign.htm">+=</a> " and " <a href="CppOperatorPlus.htm">+</a> v[1].ToStr(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Must remove: " <a href="CppOperatorPlus.htm">+</a> ToStr(m_<a href="CppWidget.htm">widget</a>-&gt;GetMustRemove());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Winner: " <a href="CppOperatorPlus.htm">+</a> ToStr(m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Move&gt; v <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="CppPylos.htm">Pylos</a>()-&gt;GetAllPossibleMoves();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "#moves: " <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sz) ;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ": " <a href="CppOperatorPlus.htm">+</a> v[i].ToStr();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText("Move history:");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Move&gt; v <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="CppPylos.htm">Pylos</a>()-&gt;GetMoveHistory();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ". " <a href="CppOperatorPlus.htm">+</a> v[i].ToStr();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;text_log-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/testpylosmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/testpylosmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> TESTPYLOSMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TESTPYLOSMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestPylos.htm">TestPylos</a>MenuDialog <b><a href="CppFinal.htm">final</a></b> : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTPYLOSMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/testpylosmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/testpylosmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestPylos.htm">TestPylos</a>, <a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestPylos.htm">testpylos</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ToolTestPylos.htm">TestPylos</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to test the <a href="CppPylos.htm">Pylos</a> board <b><a href="CppClass.htm">classes</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 29th of April 2012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtDialWidget.htm">QtDialWidget</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtDialWidget.htm">QtDialWidget</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestPylos.htm">TestPylos</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "2.1";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-19: <a href="CppVersion.htm">version</a> 0.1: initial <a href="CppVersion.htm">version</a>: cannot move marbles, cannot <b><a href="CppSwitch.htm">switch</a></b> to advanced game, winner can be requested clumsily (by clicking next to the <a href="CppPylos.htm">Pylos</a> <a href="CppWidget.htm">widget</a>)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-21: <a href="CppVersion.htm">version</a> 0.2: major architectural rewrite, <a href="CppPylosWidget.htm">PylosWidget</a> now sends custom <b><a href="CppQtSignals.htm">signals</a></b>, due to which <a href="ToolTestPylos.htm">TestPylos</a> can show more state",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-21: <a href="CppVersion.htm">version</a> 0.3: user can <b><a href="CppSwitch.htm">switch</a></b> between basic and advanced play, user can now move marbles to a higher level",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-22: <a href="CppVersion.htm">version</a> 1.0: initial release <a href="CppVersion.htm">version</a>, allow <a href="CppPylosWidget.htm">PylosWidget</a> resizing, allow visual random play, play many random <b><a href="CppVirtual.htm">virtual</a></b> games at startup, keep track of move history",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-22: <a href="CppVersion.htm">version</a> 1.1: modified <a href="CppPylosWidget.htm">PylosWidget</a> to not display selector when somewon has won, added extra test",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-09-22: <a href="CppVersion.htm">version</a> 1.2: <b><a href="CppIf.htm">if</a></b> a marble is selected <b><a href="CppFor.htm">for</a></b> movement to a higher layer, the left mouse button must be pressed. When a marble is selected <b><a href="CppFor.htm">for</a></b> movement, no marble will be placed by clicking the left mouse button"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-04-29: <a href="CppVersion.htm">version</a> 2.0: major architectural change. Seperated <a href="CppPylos.htm">Pylos</a>Game from <a href="CppPylos.htm">Pylos</a>Board",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-11-05: <a href="CppVersion.htm">version</a> 2.1: conformized <b><a href="CppFor.htm">for</a></b> <a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Console"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestPylos.htm">TestPylos</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPylos/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPylos/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
<br/>
echo "Removing user information"<br/>
rm *.user<br/>
<br/>
echo "Removing possible temp file"<br/>
rm copy.txt<br/>
rm tmp.txt<br/>
<br/>
<br/>
echo "Creating of all main folders"<br/>
<br/>
mkdir temp_zip<br/>
mkdir temp_zip/Classes<br/>
mkdir temp_zip/Tools<br/>
<br/>
echo "Creating of all subfolders"<br/>
<br/>
mkdir temp_zip/Classes/CppAbout<br/>
mkdir temp_zip/Classes/CppPylos<br/>
mkdir temp_zip/Classes/CppQtAboutDialog<br/>
mkdir temp_zip/Classes/CppQtPylos<br/>
mkdir temp_zip/Classes/CppTrace<br/>
mkdir temp_zip/Tools/ToolTestPylos<br/>
<br/>
echo "Copying files"<br/>
<br/>
cp ../../Classes/CppAbout/Licence.txt temp_zip/Classes/CppAbout/Licence.txt<br/>
cp ../../Classes/CppAbout/about.cpp temp_zip/Classes/CppAbout/about.cpp<br/>
cp ../../Classes/CppAbout/about.h temp_zip/Classes/CppAbout/about.h<br/>
cp ../../Classes/CppPylos/Licence.txt temp_zip/Classes/CppPylos/Licence.txt<br/>
cp ../../Classes/CppPylos/pylosboard.cpp temp_zip/Classes/CppPylos/pylosboard.cpp<br/>
cp ../../Classes/CppPylos/pylosboard.h temp_zip/Classes/CppPylos/pylosboard.h<br/>
cp ../../Classes/CppPylos/pyloscoordinat.cpp temp_zip/Classes/CppPylos/pyloscoordinat.cpp<br/>
cp ../../Classes/CppPylos/pyloscoordinat.h temp_zip/Classes/CppPylos/pyloscoordinat.h<br/>
cp ../../Classes/CppPylos/pyloscurrentmovestate.cpp temp_zip/Classes/CppPylos/pyloscurrentmovestate.cpp<br/>
cp ../../Classes/CppPylos/pyloscurrentmovestate.h temp_zip/Classes/CppPylos/pyloscurrentmovestate.h<br/>
cp ../../Classes/CppPylos/pylosfwd.h temp_zip/Classes/CppPylos/pylosfwd.h<br/>
cp ../../Classes/CppPylos/pylosgame.cpp temp_zip/Classes/CppPylos/pylosgame.cpp<br/>
cp ../../Classes/CppPylos/pylosgame.h temp_zip/Classes/CppPylos/pylosgame.h<br/>
cp ../../Classes/CppPylos/pylosmove.cpp temp_zip/Classes/CppPylos/pylosmove.cpp<br/>
cp ../../Classes/CppPylos/pylosmove.h temp_zip/Classes/CppPylos/pylosmove.h<br/>
cp ../../Classes/CppPylos/pylosmustremovestate.cpp temp_zip/Classes/CppPylos/pylosmustremovestate.cpp<br/>
cp ../../Classes/CppPylos/pylosmustremovestate.h temp_zip/Classes/CppPylos/pylosmustremovestate.h<br/>
cp ../../Classes/CppPylos/pylosplayer.cpp temp_zip/Classes/CppPylos/pylosplayer.cpp<br/>
cp ../../Classes/CppPylos/pylosplayer.h temp_zip/Classes/CppPylos/pylosplayer.h<br/>
cp ../../Classes/CppPylos/pylospositionstate.cpp temp_zip/Classes/CppPylos/pylospositionstate.cpp<br/>
cp ../../Classes/CppPylos/pylospositionstate.h temp_zip/Classes/CppPylos/pylospositionstate.h<br/>
cp ../../Classes/CppPylos/pyloswinner.cpp temp_zip/Classes/CppPylos/pyloswinner.cpp<br/>
cp ../../Classes/CppPylos/pyloswinner.h temp_zip/Classes/CppPylos/pyloswinner.h<br/>
cp ../../Classes/CppQtAboutDialog/Licence.txt temp_zip/Classes/CppQtAboutDialog/Licence.txt<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.cpp temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.cpp<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.h temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.ui temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.ui<br/>
cp ../../Classes/CppQtPylos/Licence.txt temp_zip/Classes/CppQtPylos/Licence.txt<br/>
cp ../../Classes/CppQtPylos/qtpylosboardwidget.cpp temp_zip/Classes/CppQtPylos/qtpylosboardwidget.cpp<br/>
cp ../../Classes/CppQtPylos/qtpylosboardwidget.h temp_zip/Classes/CppQtPylos/qtpylosboardwidget.h<br/>
cp ../../Classes/CppQtPylos/qtpylosgamewidget.cpp temp_zip/Classes/CppQtPylos/qtpylosgamewidget.cpp<br/>
cp ../../Classes/CppQtPylos/qtpylosgamewidget.h temp_zip/Classes/CppQtPylos/qtpylosgamewidget.h<br/>
cp ../../Classes/CppQtPylos/qtpylossprites.cpp temp_zip/Classes/CppQtPylos/qtpylossprites.cpp<br/>
cp ../../Classes/CppQtPylos/qtpylossprites.h temp_zip/Classes/CppQtPylos/qtpylossprites.h<br/>
cp ../../Classes/CppQtPylos/qtpyloswidget.cpp temp_zip/Classes/CppQtPylos/qtpyloswidget.cpp<br/>
cp ../../Classes/CppQtPylos/qtpyloswidget.h temp_zip/Classes/CppQtPylos/qtpyloswidget.h<br/>
cp ../../Classes/CppTrace/Licence.txt temp_zip/Classes/CppTrace/Licence.txt<br/>
cp ../../Classes/CppTrace/trace.h temp_zip/Classes/CppTrace/trace.h<br/>
cp ../../Tools/ToolTestPylos/Licence.txt temp_zip/Tools/ToolTestPylos/Licence.txt<br/>
cp ../../Tools/ToolTestPylos/R.png temp_zip/Tools/ToolTestPylos/R.png<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylos.pro temp_zip/Tools/ToolTestPylos/ToolTestPylos.pro<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylos.qrc temp_zip/Tools/ToolTestPylos/ToolTestPylos.qrc<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylosCanMove.png temp_zip/Tools/ToolTestPylos/ToolTestPylosCanMove.png<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylosDoubleRemoveTest.png temp_zip/Tools/ToolTestPylos/ToolTestPylosDoubleRemoveTest.png<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylosMoveMustRemove.png temp_zip/Tools/ToolTestPylos/ToolTestPylosMoveMustRemove.png<br/>
cp ../../Tools/ToolTestPylos/ToolTestPylosMustRemove.png temp_zip/Tools/ToolTestPylos/ToolTestPylosMustRemove.png<br/>
cp ../../Tools/ToolTestPylos/qtmain.cpp temp_zip/Tools/ToolTestPylos/qtmain.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylosgametestsdialog.cpp temp_zip/Tools/ToolTestPylos/qttestpylosgametestsdialog.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylosgametestsdialog.h temp_zip/Tools/ToolTestPylos/qttestpylosgametestsdialog.h<br/>
cp ../../Tools/ToolTestPylos/qttestpylosgametestsdialog.ui temp_zip/Tools/ToolTestPylos/qttestpylosgametestsdialog.ui<br/>
cp ../../Tools/ToolTestPylos/qttestpylosmenudialog.cpp temp_zip/Tools/ToolTestPylos/qttestpylosmenudialog.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylosmenudialog.h temp_zip/Tools/ToolTestPylos/qttestpylosmenudialog.h<br/>
cp ../../Tools/ToolTestPylos/qttestpylosmenudialog.ui temp_zip/Tools/ToolTestPylos/qttestpylosmenudialog.ui<br/>
cp ../../Tools/ToolTestPylos/qttestpylosrandomplaydialog.cpp temp_zip/Tools/ToolTestPylos/qttestpylosrandomplaydialog.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylosrandomplaydialog.h temp_zip/Tools/ToolTestPylos/qttestpylosrandomplaydialog.h<br/>
cp ../../Tools/ToolTestPylos/qttestpylosrandomplaydialog.ui temp_zip/Tools/ToolTestPylos/qttestpylosrandomplaydialog.ui<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestboarddialog.cpp temp_zip/Tools/ToolTestPylos/qttestpylostestboarddialog.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestboarddialog.h temp_zip/Tools/ToolTestPylos/qttestpylostestboarddialog.h<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestboarddialog.ui temp_zip/Tools/ToolTestPylos/qttestpylostestboarddialog.ui<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestgamedialog.cpp temp_zip/Tools/ToolTestPylos/qttestpylostestgamedialog.cpp<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestgamedialog.h temp_zip/Tools/ToolTestPylos/qttestpylostestgamedialog.h<br/>
cp ../../Tools/ToolTestPylos/qttestpylostestgamedialog.ui temp_zip/Tools/ToolTestPylos/qttestpylostestgamedialog.ui<br/>
cp ../../Tools/ToolTestPylos/testpylosmenudialog.cpp temp_zip/Tools/ToolTestPylos/testpylosmenudialog.cpp<br/>
cp ../../Tools/ToolTestPylos/testpylosmenudialog.h temp_zip/Tools/ToolTestPylos/testpylosmenudialog.h<br/>
<br/>
FILENAME="ToolTestPylosSource"<br/>
ZIP_FILENAME=$FILENAME".zip"<br/>
<br/>
echo "Compressing files"<br/>
<br/>
cd temp_zip<br/>
zip -r $FILENAME Classes<br/>
zip -r $FILENAME Tools<br/>
cd ..<br/>
cp "temp_zip/"$ZIP_FILENAME $ZIP_FILENAME<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Emptying subfolders"<br/>
<br/>
rm temp_zip/Classes/CppAbout/*.*<br/>
rm temp_zip/Classes/CppPylos/*.*<br/>
rm temp_zip/Classes/CppQtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppQtPylos/*.*<br/>
rm temp_zip/Classes/CppTrace/*.*<br/>
rm temp_zip/Tools/ToolTestPylos/*.*<br/>
<br/>
echo "Removing subfolders"<br/>
<br/>
rmdir temp_zip/Classes/CppAbout<br/>
rmdir temp_zip/Classes/CppPylos<br/>
rmdir temp_zip/Classes/CppQtAboutDialog<br/>
rmdir temp_zip/Classes/CppQtPylos<br/>
rmdir temp_zip/Classes/CppTrace<br/>
rmdir temp_zip/Tools/ToolTestPylos<br/>
<br/>
echo "Removing main folders"<br/>
<br/>
rmdir temp_zip/Classes<br/>
rmdir temp_zip/Tools<br/>
<br/>
echo "Removing temporary folder"<br/>
<br/>
rm temp_zip/*.*<br/>
rmdir temp_zip<br/>
<br/>
echo "Done"<br/>
<br/>
# CreateQtProjectZipFile, version 1.2<br/>
# Copyright (C) 2012 Richel Bilderbeek<br/>
# Programmed on the 25th February 2012<br/>
# by Richel Bilderbeek<br/>
# <br/>
# CreateQtProjectZipFile can be downloaded from http://www.richelbilderbeek.nl/ToolCreateQtProjectZipFile.htm<br/>
# Licenced under GPL 3.0<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
