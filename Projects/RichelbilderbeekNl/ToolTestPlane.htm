<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestPlane</title>
  <meta name="description" content="C++ TestPlane"/>
  <meta name="keywords" content="C++ TestPlane "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestPlane.htm">TestPlane</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:44:46 2014
 -->
<p>
  <a href="ToolTestPlane.htm">TestPlane</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppPlane.htm">Plane</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestPlane_1_0.png">View a screenshot of 'TestPlane' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestPlaneConsoleExe.zip">Download the 'TestPlane' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestPlaneDesktopExe.zip">Download the 'TestPlane' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestPlaneWebsiteExe.zip">Download the 'TestPlane' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestPlane/ToolTestPlaneConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneConsole.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppApfloat.htm">Apfloat</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/FParser.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppContainer.htm">CppContainer</a>/<a href="CppContainer.htm">CppContainer</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestPlane/ToolTestPlaneDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneDesktop.pro" border = "1"><tr><td><code>
#<a href="CppQwt.htm">Qwt</a> does not go well with <a href="CppWeffcpp.htm">-Weffc++</a><br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>NoWeffcpp.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppApfloat.htm">Apfloat</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/FParser.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppQwt.htm">Qwt</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppContainer.htm">CppContainer</a>/<a href="CppContainer.htm">CppContainer</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>Desktop.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtSurfacePlotWidget.htm">CppQtSurfacePlotWidget</a>/<a href="CppQtSurfacePlotWidget.htm">CppQtSurfacePlotWidget</a>.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
<br/>
#<a href="CppGprof.htm">gprof</a><br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a>_DEBUG += -pg<br/>
QMAKE_LFLAGS_DEBUG += -pg<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/ToolTestPlaneConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/testplanemenudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/testplanemenudialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/Licence.txt<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/ToolTestPlaneDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplanemenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneconstructplanedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyqwtdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplanezoomer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplaneplot.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplanedata.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyribidialog.cpp<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplanemenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneconstructplanedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyqwtdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyribidialog.ui<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplanemenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneconstructplanedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyqwtdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplanezoomer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplaneplot.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qwttestplanedata.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/qttestplaneinvestigateaccuracyribidialog.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/ToolTestPlaneWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>/<a href="ToolTestPlane.htm">ToolTestPlane</a>Console.pri)<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/main.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "testplanemenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b>* <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; args { <a href="CppRibi.htm">ribi</a>::MenuDialog::<a href="CppConvert.htm">Convert</a>Arguments(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>) };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog().Execute(args);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qttestplanemenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneconstructplanedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneconstructplanedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPLANEMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPLANEMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Plane;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnAnyChange() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPLANEMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneconstructplanedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneconstructplanedialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qttestplane<a href="CppConstructor.htm">construct</a>planedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppApfloat.htm">apfloat</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestplane<a href="CppConstructor.htm">construct</a>planedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_precision,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (QSpinBox::*)(<b><a href="CppInt.htm">int</a></b>)&gt;(&amp;QSpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange);<br/>
<br/>
&nbsp;&nbsp;OnAnyChange();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::~<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::OnAnyChange() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdSetprecision.htm">std::setprecision</a>(ui-&gt;box_precision-&gt;value());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p1(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z1-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 1: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p1) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p2(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z2-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 2: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p2) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p3(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z3-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 3: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p3) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; plane(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Plane(p1,p2,p3)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (X): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;To<a href="CppFunction.htm">Function</a>X() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (X): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdException.htm">std::exception</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (Y): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a>plane-&gt;To<a href="CppFunction.htm">Function</a>Y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (Y): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdException.htm">std::exception</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (Z): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a>plane-&gt;To<a href="CppFunction.htm">Function</a>Z() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (Z): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdException.htm">std::exception</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_x-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_y-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> z <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_z-&gt;value();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> x_on_plane <a href="CppOperatorAssign.htm">=</a> plane-&gt;CalcX(y,z);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "X(Y,Z) <a href="CppOperatorAssign.htm">=</a> X(" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> y <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> z <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ") <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x_on_plane <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "X(Y,Z) <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> y_on_plane <a href="CppOperatorAssign.htm">=</a> plane-&gt;CalcY(x,z);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Y(X,Z) <a href="CppOperatorAssign.htm">=</a> Y(" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> z <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ") <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> y_on_plane <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Y(X,Z) <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> z_on_plane <a href="CppOperatorAssign.htm">=</a> plane-&gt;CalcZ(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Z(X,Y) <a href="CppOperatorAssign.htm">=</a> Z(" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> y <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ") <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> z_on_plane <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Z(X,Y) <a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Plane: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*plane) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Plane: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;text-&gt;setPlainText(s.str().c_str());<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog d;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneinvestigateaccuracyqwtdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneinvestigateaccuracyqwtdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPLANEINVESTIGATEACCURACYDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPLANEINVESTIGATEACCURACYDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Plane;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnAnyChange();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; m_plot_x;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; m_plot_y;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; m_plot_z;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; CreatePlane() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPLANEINVESTIGATEACCURACYDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneinvestigateaccuracyqwtdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneinvestigateaccuracyqwtdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttestplaneinvestigateaccuracyqwtdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplaneplot.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestplaneinvestigateaccuracyqwtdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_x(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_y(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_z()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppDouble.htm">double</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; Coordinat3D;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p1(0.1,0.0,0.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p2(0.0,0.2,0.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p3(0.0,0.0,0.3);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; plane(<b><a href="CppNew.htm">new</a></b> Plane(p1,p2,p3));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(0.0,x,y); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_x <a href="CppOperatorAssign.htm">=</a> p;<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,0.0,y); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_y <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,y,0.0); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot_z <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_plot_x.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_plot_y.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_plot_z.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange);<br/>
<br/>
&nbsp;&nbsp;OnAnyChange();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::~<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Plane&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::CreatePlane() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p1(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z1-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p2(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z2-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p3(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z3-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; plane(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Plane(p1,p2,p3)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> plane;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::OnAnyChange()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppDouble.htm">double</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; Coordinat3D;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Plane&gt; plane(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CreatePlane()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
&nbsp;&nbsp;m_plot_x-&gt;SetData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(0.0,x,y); },-1.0,1.0,-1.0,1.0<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_plot_y-&gt;SetData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,0.0,y); },-1.0,1.0,-1.0,1.0<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_plot_z-&gt;SetData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,y,0.0); },-1.0,1.0,-1.0,1.0<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog d;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneinvestigateaccuracyribidialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneinvestigateaccuracyribidialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPLANEINVESTIGATEACCURAYRIBIDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPLANEINVESTIGATEACCURAYRIBIDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> Plane;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnAnyChange();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>_x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>_y;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>_z;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; CreatePlane() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Rescale calculates a value between old_min and old_max its relative place and transforms<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppThis.htm">this</a></b> relative position to a new_min and new_max<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/For example: <b><a href="CppFor.htm">for</a></b> the old range [1,5], the value 2 is at 25<a href="CppOperatorModulus.htm">%</a> of <b><a href="CppThis.htm">this</a></b> range. Transforming <b><a href="CppThis.htm">this</a></b><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/to the <b><a href="CppNew.htm">new</a></b> range range [0,100] results in a 25<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppDouble.htm">double</a></b> Rescale(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> value,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> oldMin,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> oldMax,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <b><a href="CppNew.htm">new</a></b>Min,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <b><a href="CppNew.htm">new</a></b>Max);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPLANEINVESTIGATEACCURAYRIBIDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplaneinvestigateaccuracyribidialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplaneinvestigateaccuracyribidialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttestplaneinvestigateaccuracy<a href="CppRibi.htm">ribi</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "fparser.hh"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtsurfaceplot<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestplaneinvestigateaccuracy<a href="CppRibi.htm">ribi</a>dialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_x(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_y(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_z(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_x-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>_x.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_y-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>_y.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_plane_z-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>_z.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_minx-&gt;setText(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(-1.0).c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_miny-&gt;setText(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(-1.0).c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_maxx-&gt;setText(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;( 1.0).c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_maxy-&gt;setText(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;( 1.0).c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;edit_minx,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQLineEdit.htm">QLineEdit</a>::*)(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp;)&gt;(&amp;<a href="CppQLineEdit.htm">QLineEdit</a>::textChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;edit_miny,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQLineEdit.htm">QLineEdit</a>::*)(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp;)&gt;(&amp;<a href="CppQLineEdit.htm">QLineEdit</a>::textChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;edit_maxx,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQLineEdit.htm">QLineEdit</a>::*)(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp;)&gt;(&amp;<a href="CppQLineEdit.htm">QLineEdit</a>::textChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;edit_maxy,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQLineEdit.htm">QLineEdit</a>::*)(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp;)&gt;(&amp;<a href="CppQLineEdit.htm">QLineEdit</a>::textChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z1,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z2,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_z3,<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppVoid.htm">void</a></b> (Q<a href="CppDouble.htm">Double</a>SpinBox::*)(<b><a href="CppDouble.htm">double</a></b>)&gt;(&amp;Q<a href="CppDouble.htm">Double</a>SpinBox::valueChanged),<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange);<br/>
<br/>
&nbsp;&nbsp;OnAnyChange();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::~<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Plane&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::CreatePlane() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p1(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y1-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z1-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p2(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y2-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z2-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D p3(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y3-&gt;value(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_z3-&gt;value()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; plane(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Plane(p1,p2,p3)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> plane;<br/>
}<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
 <b><a href="CppSwitch.htm">switch</a></b> (event-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Escape: close(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::OnAnyChange()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b> { <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_minx-&gt;text().toStdString()); }<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of x_min is not a valid <b><a href="CppDouble.htm">double</a></b>"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b> { <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_miny-&gt;text().toStdString()); }<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of y_min is not a valid <b><a href="CppDouble.htm">double</a></b>"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b> { <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_maxx-&gt;text().toStdString()); }<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of x_max is not a valid <b><a href="CppDouble.htm">double</a></b>"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b> { <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_maxy-&gt;text().toStdString()); }<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of y_max is not a valid <b><a href="CppDouble.htm">double</a></b>"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x_min <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_minx-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y_min <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_miny-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x_max <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_maxx-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y_max <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(ui-&gt;edit_maxy-&gt;text().toStdString());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x_min <a href="CppOperatorGreaterEqual.htm">&gt;=</a> x_max)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of x_min must be smaller than x_max"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y_min <a href="CppOperatorGreaterEqual.htm">&gt;=</a> y_max)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Value of y_min must be smaller than y_max"); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppDouble.htm">double</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; Coordinat3D;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; plane(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CreatePlane()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(plane);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> My<a href="CppFunction.htm">Function</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>::<a href="CppFunction.htm">Function</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y)&gt; <a href="CppConvert.htm">Convert</a><a href="CppFunction.htm">Function</a>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;My<a href="CppFunction.htm">Function</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane&amp; plane,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppConvert.htm">Convert</a><a href="CppFunction.htm">Function</a>&amp; f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) : m_f(f), m_plane(plane) {}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> <b><a href="CppOperatorFunctionCall.htm">operator()</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> co_<b><a href="CppDouble.htm">double</a></b> <a href="CppOperatorAssign.htm">=</a> m_f(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D co_<a href="CppApfloat.htm">apfloat</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;0&gt;(co_<b><a href="CppDouble.htm">double</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;1&gt;(co_<b><a href="CppDouble.htm">double</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;2&gt;(co_<b><a href="CppDouble.htm">double</a></b>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> error_<a href="CppApfloat.htm">apfloat</a> <a href="CppOperatorAssign.htm">=</a> m_plane.CalcError(co_<a href="CppApfloat.htm">apfloat</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Geometry().<a href="CppToDouble.htm">ToDouble</a>Safe(error_<a href="CppApfloat.htm">apfloat</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> m_plane.CalcError(m_f(x,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppConvert.htm">Convert</a><a href="CppFunction.htm">Function</a> m_f;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane&amp; m_plane;<br/>
&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_x-&gt;Plot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;My<a href="CppFunction.htm">Function</a>(*plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(0.0,x,y); }),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;x_min, x_max,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_min, y_max<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_y-&gt;Plot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;My<a href="CppFunction.htm">Function</a>(*plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,0.0,y); }),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;x_min, x_max,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_min, y_max<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>_z-&gt;Plot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;My<a href="CppFunction.htm">Function</a>(*plane,[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) { <b><a href="CppReturn.htm">return</a></b> Coordinat3D(x,y,0.0); }),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;x_min, x_max,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_min, y_max<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("<a href="CppFunction.htm">Function</a> plotted successfully");<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;OnAnyChange();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplanemenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplanemenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTPLANEMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTPLANEMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_investigate_accuracy_qwt_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_investigate_accuracy_<a href="CppRibi.htm">ribi</a>_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTPLANEMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qttestplanemenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qttestplanemenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttestplanemenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt.h&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtsurfaceplot<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestplane<a href="CppConstructor.htm">construct</a>planedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestplaneinvestigateaccuracyqwtdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestplaneinvestigateaccuracy<a href="CppRibi.htm">ribi</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "testplanemenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestplanemenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::~<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::on_button_start_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog d;<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(TestPlaneMenuDialog().GetAbout());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQt.htm">Qt</a>SurfacePlot<a href="CppWidget.htm">Widget</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Warp's <a href="CppFunctionParser.htm">FunctionParser</a> <a href="CppVersion.htm">version</a>: 4.4.3");<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>(<a href="CppStdString.htm">std::string</a>("<a href="CppQwt.htm">Qwt</a> <a href="CppVersion.htm">version</a>: ") <a href="CppOperatorPlus.htm">+</a> QWT_VERSION_STR);<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(a);<br/>
<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneMenuDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> TestPlaneMenuDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlane<a href="CppConstructor.htm">Construct</a>PlaneDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::on_button_investigate_accuracy_qwt_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracy<a href="CppQwt.htm">Qwt</a>Dialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>TestPlaneMenuDialog::on_button_investigate_accuracy_<a href="CppRibi.htm">ribi</a>_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestPlaneInvestigateAccuracyRibiDialog d;<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplanedata.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplanedata.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QWTTESTPLANEDATA_H<br/>
<a href="CppDefine.htm">#define</a> QWTTESTPLANEDATA_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qwt_<a href="CppMatrix.htm">matrix</a>_raster_data.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Plane;<br/>
<br/>
<a href="CppComment.htm">///</a>The spectrogram data<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneData: <b><a href="CppPublic.htm">public</a></b> <a href="CppQwt.htm">Qwt</a>RasterData<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppDouble.htm">double</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; Coordinat3D;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>f <a href="CppConvert.htm">converts</a> the x and y of the plot to the X,Y and Z coordinat of the X/Y/Z cut of the plane<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlaneData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minx <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>1.0, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxx <a href="CppOperatorAssign.htm">=</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> miny <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>1.0, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxy <a href="CppOperatorAssign.htm">=</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> value(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt; m_f;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt; m_plane;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QWTTESTPLANEDATA_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplanedata.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplanedata.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplanedata.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlaneData::<a href="CppQwt.htm">Qwt</a>TestPlaneData(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minx, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxx,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> miny, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxy<br/>
&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;: m_f(f),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plane(plane)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_plane);<br/>
<br/>
&nbsp;&nbsp;setInterval(<a href="CppQt.htm">Qt</a>::XAxis,<a href="CppQwt.htm">Qwt</a>Interval(minx,maxx));<br/>
&nbsp;&nbsp;setInterval(<a href="CppQt.htm">Qt</a>::YAxis,<a href="CppQwt.htm">Qwt</a>Interval(miny,maxy));<br/>
&nbsp;&nbsp;setInterval(<a href="CppQt.htm">Qt</a>::ZAxis,<a href="CppQwt.htm">Qwt</a>Interval(0.0,1.0)); <a href="CppComment.htm">//</a>Yes (1.0) or no (0.0) in plane<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlaneData::value(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_plane);<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> co_<b><a href="CppDouble.htm">double</a></b> <a href="CppOperatorAssign.htm">=</a> m_f(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Plane::Coordinat3D co_<a href="CppApfloat.htm">apfloat</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;0&gt;(co_<b><a href="CppDouble.htm">double</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;1&gt;(co_<b><a href="CppDouble.htm">double</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApfloat.htm">apfloat</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;2&gt;(co_<b><a href="CppDouble.htm">double</a></b>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> error_<a href="CppApfloat.htm">apfloat</a> <a href="CppOperatorAssign.htm">=</a> m_plane-&gt;CalcError(co_<a href="CppApfloat.htm">apfloat</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Geometry().<a href="CppToDouble.htm">ToDouble</a>Safe(error_<a href="CppApfloat.htm">apfloat</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> m_plane-&gt;CalcDistanceFromPlane(m_f(x,y));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdException.htm">std::exception</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> c <a href="CppOperatorAssign.htm">=</a> 0.842;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> v1 <a href="CppOperatorAssign.htm">=</a> x * x <a href="CppOperatorPlus.htm">+</a> ( y <a href="CppOperatorMinus.htm">-</a> c ) * ( y <a href="CppOperatorPlus.htm">+</a> c );<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> v2 <a href="CppOperatorAssign.htm">=</a> x * ( y <a href="CppOperatorPlus.htm">+</a> c ) <a href="CppOperatorPlus.htm">+</a> x * ( y <a href="CppOperatorPlus.htm">+</a> c );<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1.0 <a href="CppOperatorDivide.htm">/</a> ( v1 * v1 <a href="CppOperatorPlus.htm">+</a> v2 * v2 );<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplaneplot.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplaneplot.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QWTTESTPLANEPLOT_H<br/>
<a href="CppDefine.htm">#define</a> QWTTESTPLANEPLOT_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>LinearColorMap;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>PlotSpectrogram;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneData;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneZoomer;<br/>
<b><a href="CppStruct.htm">struct</a></b> Plane;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot: <b><a href="CppPublic.htm">public</a></b> <a href="CppQwt.htm">Qwt</a>Plot<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppDouble.htm">double</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; Coordinat3D;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlanePlot(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * parent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlanePlot(<b><a href="CppConst.htm">const</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlanePlot&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQwt.htm">Qwt</a>TestPlanePlot&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetData(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> miny, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxy,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minz, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxz<br/>
&nbsp;&nbsp;);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>PlotSpectrogram * <b><a href="CppConst.htm">const</a></b> m_spectrogram;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer&gt; m_zoomer;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQwt.htm">Qwt</a>LinearColorMap * CreateColorMap() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QWTTESTPLANEPLOT_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplaneplot.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplaneplot.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_spectrogram.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_scale_<a href="CppWidget.htm">widget</a>.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_panner.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_layout.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_color_map.h&gt;<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplaneplot.h"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplanezoomer.h"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplanedata.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlanePlot::<a href="CppQwt.htm">Qwt</a>TestPlanePlot(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent<br/>
) : <a href="CppQwt.htm">Qwt</a>Plot(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_spectrogram(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotSpectrogram)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>'0' Enables multi<a href="CppThread.htm">thread</a>ed rendering, use '1' <b><a href="CppFor.htm">for</a></b> singe<a href="CppThread.htm">thread</a>ed<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Note that the program crashes when <b><a href="CppUsing.htm">using</a></b> multi<a href="CppThread.htm">thread</a>ing/'0'<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setRender<a href="CppThread.htm">Thread</a>Count(1);<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setCachePolicy(<a href="CppQwt.htm">Qwt</a>PlotRasterItem::<a href="CppPaint.htm">Paint</a>Cache);<br/>
<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setDisplayMode(<a href="CppQwt.htm">Qwt</a>PlotSpectrogram::ContourMode,<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setDisplayMode( <a href="CppQwt.htm">Qwt</a>PlotSpectrogram::ImageMode,<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setDefaultContourPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQt.htm">Qt</a>::black, 0));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plane,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1.0,1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1.0,1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_spectrogram-&gt;attach(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;enableAxis(<a href="CppQwt.htm">Qwt</a>Plot::yRight );<br/>
<br/>
&nbsp;&nbsp;plotLayout()-&gt;setAlign<a href="CppCanvas.htm">Canvas</a>ToScales(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>replot();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> LeftButton <b><a href="CppFor.htm">for</a></b> the zooming<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> MidButton <b><a href="CppFor.htm">for</a></b> the panning<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> RightButton: zoom out by 1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Ctrl+RighButton: zoom out to full size<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer * <b><a href="CppConst.htm">const</a></b> zoomer <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneZoomer(canvas());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;zoomer-&gt;setMousePattern(<a href="CppQwt.htm">Qwt</a>EventPattern::MouseSelect2,<a href="CppQt.htm">Qt</a>::RightButton, <a href="CppQt.htm">Qt</a>::ControlModifier );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;zoomer-&gt;setMousePattern(<a href="CppQwt.htm">Qwt</a>EventPattern::MouseSelect3,<a href="CppQt.htm">Qt</a>::RightButton);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a> c(<a href="CppQt.htm">Qt</a>::white);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;zoomer-&gt;setRubberBandPen(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;zoomer-&gt;setTrackerPen(c);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>PlotPanner *panner <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotPanner(canvas());<br/>
&nbsp;&nbsp;panner-&gt;setAxisEnabled(<a href="CppQwt.htm">Qwt</a>Plot::yRight, <b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;panner-&gt;setMouseButton(<a href="CppQt.htm">Qt</a>::MidButton);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Avoid jumping when labels with more/less digits<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> appear/disappear when scrolling vertically<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>Metrics fm(axis<a href="CppWidget.htm">Widget</a>(<a href="CppQwt.htm">Qwt</a>Plot::yLeft)-&gt;font());<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>ScaleDraw *sd <a href="CppOperatorAssign.htm">=</a> axisScaleDraw(<a href="CppQwt.htm">Qwt</a>Plot::yLeft);<br/>
&nbsp;&nbsp;sd-&gt;setMinimumExtent( fm.width("100.00") );<br/>
<br/>
<br/>
}<br/>
<br/>
<a href="CppQwt.htm">Qwt</a>LinearColorMap * <a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlanePlot::CreateColorMap() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>LinearColorMap * <b><a href="CppConst.htm">const</a></b> color_map <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>LinearColorMap(<a href="CppQt.htm">Qt</a>::red,<a href="CppQt.htm">Qt</a>::magenta);<br/>
&nbsp;&nbsp;color_map-&gt;addColorStop(0.0001,<a href="CppQt.htm">Qt</a>::yellow);<br/>
&nbsp;&nbsp;color_map-&gt;addColorStop(0.0010,<a href="CppQt.htm">Qt</a>::green);<br/>
&nbsp;&nbsp;color_map-&gt;addColorStop(0.0100,<a href="CppQt.htm">Qt</a>::cyan);<br/>
&nbsp;&nbsp;color_map-&gt;addColorStop(0.1000,<a href="CppQt.htm">Qt</a>::blue);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> color_map;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlanePlot::SetData(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Plane&gt;&amp; plane,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;Coordinat3D(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt;&amp; f,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minx, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxx,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> miny, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxy<br/>
&nbsp;&nbsp;)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_spectrogram will <b><a href="CppDelete.htm">delete</a></b> data<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlaneData * <b><a href="CppConst.htm">const</a></b> data <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneData(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;plane,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;minx,maxx,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;miny,maxy<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(data);<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setData(data);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQList.htm">QList</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; contour_levels <a href="CppOperatorAssign.htm">=</a> { 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001, 0.0000001 };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_spectrogram-&gt;setContourLevels(contour_levels );<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_spectrogram-&gt;data());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQwt.htm">Qwt</a>Interval zInterval(0.0,1.0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> A color bar on the right axis<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Scale<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> rightAxis <a href="CppOperatorAssign.htm">=</a> axis<a href="CppWidget.htm">Widget</a>(<a href="CppQwt.htm">Qwt</a>Plot::yRight );<br/>
&nbsp;&nbsp;rightAxis-&gt;setColorBarEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;rightAxis-&gt;setColorMap(zInterval,CreateColorMap());<br/>
&nbsp;&nbsp;m_spectrogram-&gt;setColorMap(CreateColorMap());<br/>
<br/>
&nbsp;&nbsp;setAxisScale(<a href="CppQwt.htm">Qwt</a>Plot::yRight,0.0,1.0); <a href="CppComment.htm">//</a>Yes or no in plane<br/>
&nbsp;&nbsp;rightAxis-&gt;repaint();<br/>
<br/>
&nbsp;&nbsp;replot();<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplanezoomer.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplanezoomer.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QWTTESTPLANEZOOMER_H<br/>
<a href="CppDefine.htm">#define</a> QWTTESTPLANEZOOMER_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_zoomer.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>TestPlaneZoomer: <b><a href="CppPublic.htm">public</a></b> <a href="CppQwt.htm">Qwt</a>PlotZoomer<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer(<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> canvas);<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Text trackerTextF(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a> &amp;pos) <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QWTTESTPLANEZOOMER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/qwttestplanezoomer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/qwttestplanezoomer.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qwttestplanezoomer.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot_canvas.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer::<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer(<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> canvas)<br/>
&nbsp;&nbsp;: <a href="CppQwt.htm">Qwt</a>PlotZoomer(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppCanvas.htm">Canvas</a> *&gt;(canvas))<br/>
{<br/>
&nbsp;&nbsp;setTrackerMode(AlwaysOn);<br/>
}<br/>
<br/>
<a href="CppQwt.htm">Qwt</a>Text <a href="CppRibi.htm">ribi</a>::<a href="CppQwt.htm">Qwt</a>TestPlaneZoomer::trackerTextF(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp; pos) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a> bg(0,0,0,200);<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Text text <a href="CppOperatorAssign.htm">=</a> <a href="CppQwt.htm">Qwt</a>PlotZoomer::trackerTextF(pos);<br/>
&nbsp;&nbsp;text.setBackgroundBrush(<a href="CppQBrush.htm">QBrush</a>(bg));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> text;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/testplanemenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/testplanemenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
TestPlane, tests the Plane <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2014-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPlane.htm">ToolTestPlane</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> TOOLTESTPLANEMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TOOLTESTPLANEMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>GUI independent TestPlane menu dialog<br/>
<b><a href="CppStruct.htm">struct</a></b> TestPlaneMenuDialog <b><a href="CppFinal.htm">final</a></b> : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;TestPlaneMenuDialog();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TOOLTESTPLANEMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/testplanemenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/testplanemenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
TestPlane, tests the Plane <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2014-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestPlane.htm">ToolTestPlane</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "testplanemenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppContainer.htm">container</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRibi.htm">ribi</a>_<a href="CppRegex.htm">regex</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::TestPlaneMenuDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; args) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppApfloat.htm">apfloat</a> <a href="CppApfloat.htm">Apfloat</a>;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<a href="CppApfloat.htm">Apfloat</a>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; <a href="CppPoint.htm">Point</a>3D;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(args.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> silent{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdCount.htm">std::count</a>(args.begin(),args.end(),"-s") <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppStdCount.htm">std::count</a>(args.begin(),args.end(),"<a href="CppOperatorDecrement.htm">--</a>silent"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;silent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 10 <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 11)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppConstructor.htm">Construct</a> plane from three <a href="CppPointer.htm">point</a>s" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D p1(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[1]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[2]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[3])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 1: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p1) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D p2(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[4]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[5]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[6])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 2: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p2) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D p3(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[7]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[8]),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(args[9])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppPoint.htm">Point</a> 3: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Geometry().ToStr(p3) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Plane&gt; plane(<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::Plane(p1,p2,p3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (X): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;To<a href="CppFunction.htm">Function</a>X() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (X): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsX()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (Y): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a>plane-&gt;To<a href="CppFunction.htm">Function</a>Y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (Y): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsY()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppFunction.htm">Function</a> (Z): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n' <a href="CppComment.htm">//</a>plane-&gt;To<a href="CppFunction.htm">Function</a>Z() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Coefficients (Z): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> A: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[0] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> B: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> C: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " <a href="CppOperatorMinus.htm">-</a> D: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> plane-&gt;GetCoefficientsZ()[3] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdLogic_error.htm">std::logic_error</a>&amp; e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppException.htm">Exception</a>: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e.what() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!silent) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s.str() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"TestPlane",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"tests the Plane <b><a href="CppClass.htm">class</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 7th of August 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolTestPlane.htm">ToolTestPlane</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppApfloat.htm">apfloat</a> <a href="CppVersion.htm">version</a>: 2.4.1");<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppContainer.htm">Container</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppContainer.htm">Container</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppFileIo.htm">FileIo</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Geometry <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Geometry().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Plane <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Plane::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppRibi.htm">ribi</a>::<a href="CppRegex.htm">Regex</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRegex.htm">Regex</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::ProgramTestPlane<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.7";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-03-07: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-13: <a href="CppVersion.htm">version</a> 1.1: allow setting a high precision in desktop <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-13: <a href="CppVersion.htm">version</a> 1.2: use of <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b> instead of ToStr",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-16: <a href="CppVersion.htm">version</a> 1.3: use of Q<a href="CppDouble.htm">Double</a>SpinBox instead of QSlider in desktop <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-07: <a href="CppVersion.htm">version</a> 1.4: investigate Plane::IsInPlane in desktop <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-10: <a href="CppVersion.htm">version</a> 1.5: use of <a href="CppApfloat.htm">apfloat</a> in Plane",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-15: <a href="CppVersion.htm">version</a> 1.6: multiple <a href="CppBug.htm">bug</a>fixes",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-07: <a href="CppVersion.htm">version</a> 1.7: added silent flag to console <a href="CppVersion.htm">version</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::TestPlaneMenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("<a href="CppConstructor.htm">Construct</a>ion"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;TestPlaneMenuDialog();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Simple plane"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;TestPlaneMenuDialog().Execute(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"TestPlane",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1.0","1.0","10.0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1.0","2.0","13.0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"2.0","1.0","12.0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppOperatorDecrement.htm">--</a>silent"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/ToolTestPlaneProfile.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneProfile.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
echo "Removing user file"<br/>
rm *.pro.user<br/>
<br/>
echo "Creating profile executable"<br/>
qmake -config debug ToolTestPlaneDesktop.pro<br/>
make clean<br/>
make<br/>
<br/>
echo "Removing makefile"<br/>
rm Makefile<br/>
<br/>
echo "Removing object files"<br/>
rm *.o<br/>
<br/>
echo "Start the application"<br/>
./ToolTestPlaneDesktop<br/>
<br/>
echo "Analyse the gprof results"<br/>
gprof ToolTestPlaneDesktop &gt; gprof.txt<br/>
<br/>
echo "Remove temporary gprof file"<br/>
rm gmon.out<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestPlane/ToolTestPlaneProfileWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestPlane/ToolTestPlaneProfileWindows.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
echo "Removing user file"<br/>
rm *.pro.user<br/>
<br/>
echo "Creating profile executable"<br/>
qmake -config debug ToolTestPlaneDesktop.pro<br/>
make clean<br/>
make<br/>
<br/>
echo "Removing makefile"<br/>
rm Makefile<br/>
<br/>
echo "Removing object files"<br/>
rm *.o<br/>
<br/>
echo "Start the application"<br/>
cd debug<br/>
./ToolTestPlaneDesktop.exe<br/>
<br/>
echo "Analyse the gprof results"<br/>
gprof ToolTestPlaneDesktop.exe &gt; gprof.txt<br/>
<br/>
echo "Remove temporary gprof file"<br/>
rm gmon.out<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
