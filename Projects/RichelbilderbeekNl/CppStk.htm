<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>STK</title>
  <meta name="description" content="C++ STK"/>
  <meta name="keywords" content="C++ STK The Systhesis Toolkit audio sound music library freeware"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppStk.htm">STK</a></h1>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>
  The <a href="CppStk.htm">STK</a> (abbreviation for 'Systhesis ToolKit') is a free 
  <a href="Cpp.htm">C++</a> <a href="CppAudio.htm">audio</a> <a href="CppLibrary.htm">library</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicLubuntu.png" alt="Lubuntu"/><img src="PicUbuntu.png" alt="Ubuntu"/> 
  Installing the <a href="CppStk.htm">STK</a>
</h2>
<p>&nbsp;</p>
<p>
  Under <a href="CppUbuntu.htm">Ubuntu</a> and <a href="CppLubuntu.htm">Lubuntu</a>, 
  the <a href="CppStk.htm">STK</a> can be installed from Ubuntu's Software Center:
</p>
<p>&nbsp;</p>
<!-- The code of -->
<table summary="Install STK from command line interface" border="1"><tbody><tr><td><code>
sudo apt-get install libstk0-dev<br/>
</code></td></tr></tbody></table>
<!-- End of the code-->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicQtCreator.png" alt="Qt Creator"/>
  Adding <a href="CppStk.htm">STK</a> to the <a href="CppQtProjectFile.htm">project file</a>
</h2>
<p>&nbsp;</p>
<p>
  In <a href="CppQtCreator.htm">Qt Creator</a>, to be able to use the <a href="CppStk.htm">STK</a>,
  add the following lines to your <a href="CppQtProjectFile.htm">project file</a>:
</p>
<p>&nbsp;</p>
<!-- The code of -->
<table summary="STK in Qt Creator project file" border="1"><tbody><tr><td><code>
INCLUDEPATH += /usr/include/stk<br/>
LIBS += -L/usr/lib -lstk -lrtaudio<br/>
</code></td></tr></tbody></table>
<!-- End of the code-->
<p>&nbsp;</p>
<p>
  Thanks to Michael Jenkinson for his '-lrtaudio' suggestion in the <a href="CppQtProjectFile.htm">project file</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicQtCreator.png" alt="Qt Creator"/>
  <a href="CppStk.htm">STK</a> examples
</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppStkExample1.htm">STK example 1: beep</a></li>
  <li><a href="CppStkExample2.htm">STK example 2: random beeps</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Critique on <a href="CppStk.htm">STK</a></h2>
<p>&nbsp;</p>
<p>The <a href="CppStk.htm">STK</a> is the only <a href="CppAudio.htm">audio</a> <a href="CppLibrary.htm">library</a> I got to produce beeps from source code.</p>
<p>&nbsp;</p>
<p>It hurts me that I have much critique on the coding style of the <a href="CppStk.htm">STK</a>:</p>
<ol>
  <li>The <a href="CppStk.htm">STK</a> is not <a href="CppConstCorrect.htm">const correct</a>. One should use <a href="CppConst.htm">const</a> whenever possible/feasible [1][2][3][4][5][6]. One should be <a href="CppConstCorrect.htm">const correct</a> [7][8][9][10].</li>
  <li>The <a href="CppStk.htm">STK</a> uses the <a href="CppKeyword.htm">keyword</a> <a href="CppRegister.htm">register</a>. In this case, one should not use <a href="CppRegister.htm">register</a> [11].</li>
  <li>The <a href="CppStk.htm">STK</a> uses C-style <a href="CppCast.htm">casts</a>. One should use C++ style <a href="CppCast.htm">casts</a> [12][13].</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="https://ccrma.stanford.edu/software/stk/index.html">STK homepage</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4 7.9.3: 'Use const extensively and consistently'.</li>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition).ISBN: 0-321-33487-6. Item 3: 'Use const whenever possible'.</li>
  <li><a href="CppJarrodHollingworth.htm">Jarrod Hollingworth</a>, <a href="CppBobSwart.htm">Bob Swart</a>, <a href="CppMarkCashman.htm">Mark Cashman</a>, <a href="CppPaulGustavson.htm">Paul Gustavson</a>. Sams C++ Builder 6 Developer's Guide. ISBN: 0-672-32480-6. Chapter 3: 'Understand and use const in your code'.</li>
  <li><a href="CppJesseLiberty.htm">Jesse Liberty</a>. Sams teach yourself C++ in 24 hours. ISBN: 0-672-32224-2. Hour 8, chapter 'Const member functions': 'Use const whenever possible.'.</li>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 2: 'Prefer consts, enums and inlines to #defines'.</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Item 15: 'Use const proactively'.</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++ style. 2005. ISBN: 0-201-76042-8. Item 1 guideline: 'Be const correct'.</li>
  <li><a href="CppMarshallCline.htm">Marshall Cline</a>, <a href="CppGregLomow.htm">Greg Lomow</a> and <a href="CppMikeGirou.htm">Mike Girou</a>. C++ FAQs. ISBN: 0-201-3098301. FAQ 14.05: 'Is const correctness tedious?' (Answer: no).</li>
  <li><a href="http://www.parashift.com/c++-faq-lite/const-correctness.html#faq-18.1">The C++ FAQ Lite</a>. Item 18.1: What is 'const correctness' (Answer: 'A good thing')?</li>
  <li><a href="CppBruceEckel.htm">Bruce Eckel</a>. Thinking in C++, second edition, volume 1. 2000. ISBN: 0-13-979809-9. Item 8: 'Constants', paragraph 'Summary': 'const-correctness can be a lifesaver for projects'.</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++ style. 2005. ISBN: 0-201-76042-8. Item 28 guideline: 'Never write register [...]'.</li>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4 6.5.5: 'When explicit type conversion is necessary, prefer the more specific cast operators to the C-style cast'.</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Item 95: 'Don't use C-style casts'.</li>

</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
