<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>SoaSim</title>
  <meta name="description" content="C++ SoaSim"/>
  <meta name="keywords" content="C++ SoaSim "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolSoaSim.htm">SoaSim</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:44:12 2014
 -->
<p><a href="ToolSoaSim.htm">SoaSim</a> is a simulation program to
see the spread of a sexually transmitted disease in a small population.</p>
<p>&nbsp;</p>
<p>The program is called <a href="ToolSoaSim.htm">SoaSim</a> as 'SOA' is the Dutch
abbreviation of 'Sexually Transitted Disease'.</p>
<p>&nbsp;</p>
<p>I have used the simulation for a practical. You can also download the assignment
I've made for this practical.</p>
<p>&nbsp;</p>
<p><a href="ToolSoaSim.htm">SoaSim</a> is
programmed in <a href="Cpp.htm">C++</a> using the IDE <a href="CppBuilder.htm">C++
Builder</a> 6.0. It uses the <a href="CppStl.htm">STL</a>, <a href="CppVcl.htm">VCL</a>
and <a href="CppBoost.htm">Boost</a> library.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolSoaSim_1_0.png">View a screenshot of 'SoaSim' (png)</a></li>
  <li><a href="ToolSoaSimExe.zip">Download the 'SoaSim' Windows executable (zip)</a></li>
  <li><a href="ToolSoaSimSource.zip">Download the 'SoaSim' source code (zip)</a></li>
  <li><a href="ToolSoaSimAssignment.doc">Download the 'SoaSim' assignment (doc)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/ProjectSoaSim.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/ProjectSoaSim.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
USEFORM("UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Main<a href="CppImplementationFile.htm">.cpp</a>", Form<a href="ToolSoaSim.htm">SoaSim</a>Main);<br/>
USEFORM("UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Control<a href="CppImplementationFile.htm">.cpp</a>", Form<a href="ToolSoaSim.htm">SoaSim</a>Control);<br/>
USEFORM("UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Chart<a href="CppImplementationFile.htm">.cpp</a>", Form<a href="ToolSoaSim.htm">SoaSim</a>Chart);<br/>
USEFORM("UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a><a href="CppImplementationFile.htm">.cpp</a>", Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person);<br/>
USEFORM("UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a><a href="CppImplementationFile.htm">.cpp</a>", Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, <b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;<a href="CppInitialize.htm">Initialize</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Title <a href="CppOperatorAssign.htm">=</a> "<a href="ToolSoaSim.htm">SoaSim</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;CreateForm(__classid(TForm<a href="ToolSoaSim.htm">SoaSim</a>Control), &amp;Form<a href="ToolSoaSim.htm">SoaSim</a>Control);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Run();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppThrow.htm">throw</a></b> <a href="CppException.htm">Exception</a>("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimAbout.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimAbout.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>H<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;jpeg.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a> : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelTop;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRichEdit *RichEdit1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelTopRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label5;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label6;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label7;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label8;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label9;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label10;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a> *Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimAbout.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimAbout.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a> *Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>::TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimAdd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimAdd.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>H<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Control;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPageControl *PageControl1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TTabSheet *TabSheet1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TTabSheet *TabSheet2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TComboBox *ComboBoxStandardType;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TComboBox *ComboBoxStandardInfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *Button<a href="CppAdd.htm">Add</a>Standard;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TComboBox *ComboBoxCustomInfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label5;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLabel *Label6;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TEdit *EditPagreeSafe;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TEdit *EditPproposeSafe;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TEdit *EditPagreeUnsafe;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *Button<a href="CppAdd.htm">Add</a>Custom;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Button<a href="CppAdd.htm">Add</a>StandardClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Button<a href="CppAdd.htm">Add</a>CustomClick(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;TForm<a href="ToolSoaSim.htm">SoaSim</a>Control * mForm<a href="ToolSoaSim.htm">SoaSim</a>Control;<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person *Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimAdd.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimAdd.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Control.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Main.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person *Form<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person::TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner),<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Control(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;TForm<a href="ToolSoaSim.htm">SoaSim</a>Control*&gt;(Owner))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mForm<a href="ToolSoaSim.htm">SoaSim</a>Control<a href="CppOperatorNotEqual.htm">!=</a>0);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person::Button<a href="CppAdd.htm">Add</a>StandardClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected <a href="CppOperatorAssign.htm">=</a> (ComboBoxStandardInfected-&gt;ItemIndex <a href="CppOperatorEqual.htm">==</a> 0 ? <b><a href="CppTrue.htm">true</a></b> : <b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ComboBoxStandardType-&gt;ItemIndex)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: mForm<a href="ToolSoaSim.htm">SoaSim</a>Control-&gt;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;<a href="CppAdd.htm">Add</a>BadBoy(isInfected); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: mForm<a href="ToolSoaSim.htm">SoaSim</a>Control-&gt;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;<a href="CppAdd.htm">Add</a>PartyAnimal(isInfected); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: mForm<a href="ToolSoaSim.htm">SoaSim</a>Control-&gt;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;<a href="CppAdd.htm">Add</a>WiseGuy(isInfected); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person::Button<a href="CppAdd.htm">Add</a>CustomClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected <a href="CppOperatorAssign.htm">=</a> (ComboBoxCustomInfected-&gt;ItemIndex <a href="CppOperatorEqual.htm">==</a> 0 ? <b><a href="CppTrue.htm">true</a></b> : <b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pProposeSafe <a href="CppOperatorAssign.htm">=</a> EditPproposeSafe-&gt;Text.<a href="CppToDouble.htm">ToDouble</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeSafe&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> EditPagreeSafe-&gt;Text.<a href="CppToDouble.htm">ToDouble</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeUnsafe <a href="CppOperatorAssign.htm">=</a> EditPagreeUnsafe-&gt;Text.<a href="CppToDouble.htm">ToDouble</a>();<br/>
<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Control-&gt;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;<a href="CppAdd.htm">Add</a>CustomPerson(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pProposeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pAgreeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pAgreeUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;isInfected);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimChart.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimChart.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>ChartH<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>ChartH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Chart.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Series.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;TeEngine.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;TeeProcs.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TChart *Chart1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TFastLineSeries *Series1;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart *Form<a href="ToolSoaSim.htm">SoaSim</a>Chart;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimChart.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimChart.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Chart.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart *Form<a href="ToolSoaSim.htm">SoaSim</a>Chart;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart::TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
&nbsp;&nbsp;Width <a href="CppOperatorAssign.htm">=</a> 374;<br/>
&nbsp;&nbsp;Height <a href="CppOperatorAssign.htm">=</a> 299;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimControl.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimControl.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>ControlH<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>ControlH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main;<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart;<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Control : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *Panel1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>rMeasure;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *ButtonClearAll;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TCheckBox *CheckBox<a href="CppAdd.htm">Add</a>Person;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TCheckBox *CheckBoxShowChart;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *Button<a href="CppAbout.htm">About</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormShow(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppTime.htm">Time</a>rMeasure<a href="CppTime.htm">Time</a>r(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall CheckBox<a href="CppAdd.htm">Add</a>PersonClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall CheckBoxShowChartClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall ButtonClearAllClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Button<a href="CppAbout.htm">About</a>Click(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart * mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart;<br/>
&nbsp;&nbsp;TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person * mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person;<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
&nbsp;&nbsp;TForm<a href="ToolSoaSim.htm">SoaSim</a>Main * mForm<a href="ToolSoaSim.htm">SoaSim</a>Main;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="ToolSoaSim.htm">SoaSim</a>Control *Form<a href="ToolSoaSim.htm">SoaSim</a>Control;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimControl.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimControl.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Control.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Main.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Chart.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="ToolSoaSim.htm">SoaSim</a>Control *Form<a href="ToolSoaSim.htm">SoaSim</a>Control;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::TForm<a href="ToolSoaSim.htm">SoaSim</a>Control(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner),<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main(0),<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart(0),<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person(0)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdSrand.htm">std::srand</a>( <a href="CppStdClock.htm">std::clock</a>() );<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::FormShow(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mForm<a href="ToolSoaSim.htm">SoaSim</a>Main <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;Window<a href="CppState.htm">State</a> <a href="CppOperatorAssign.htm">=</a> wsMaximized;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Chart(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart-&gt;Visible <a href="CppOperatorAssign.htm">=</a> CheckBoxShowChart-&gt;Checked;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person-&gt;Visible <a href="CppOperatorAssign.htm">=</a> CheckBox<a href="CppAdd.htm">Add</a>Person-&gt;Checked;<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::<a href="CppTime.htm">Time</a>rMeasure<a href="CppTime.htm">Time</a>r(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mForm<a href="ToolSoaSim.htm">SoaSim</a>Main <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalOr.htm">||</a> mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart <a href="CppOperatorEqual.htm">==</a> 0) <b><a href="CppReturn.htm">return</a></b>;<br/>
<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart-&gt;Chart1-&gt;Series[0]-&gt;<a href="CppAdd.htm">Add</a>Y( mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;GetPercentageInfected() );<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::CheckBox<a href="CppAdd.htm">Add</a>PersonClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAdd.htm">Add</a>Person-&gt;Visible <a href="CppOperatorAssign.htm">=</a> CheckBox<a href="CppAdd.htm">Add</a>Person-&gt;Checked;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::CheckBoxShowChartClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart-&gt;Visible <a href="CppOperatorAssign.htm">=</a> CheckBoxShowChart-&gt;Checked;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::ButtonClearAllClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Chart-&gt;Chart1-&gt;Series[0]-&gt;Clear();<br/>
&nbsp;&nbsp;mForm<a href="ToolSoaSim.htm">SoaSim</a>Main-&gt;ClearPersons();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Control::Button<a href="CppAbout.htm">About</a>Click(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>&gt; f(<b><a href="CppNew.htm">new</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a><a href="CppAbout.htm">About</a>(0));<br/>
&nbsp;&nbsp;f-&gt;ShowModal();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimMain.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimMain.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>MainH<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="ToolSoaSim.htm">SoaSim</a>MainH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppListH.htm">list</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> Person;<br/>
<a href="CppInclude.htm">#include</a> "UnitInteraction.h"<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> Interaction;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageSafeSex;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageUnsafeSex;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageProposeSafe;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageProposeUnsafe;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageNo;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageYes;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBuffer;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePersonRed;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePersonGreen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePersonBlue;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageShadow;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBackground;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBlaRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBlaLeft;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>rMove;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>rInteraction;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePersonCustom;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormResize(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppTime.htm">Time</a>rMove<a href="CppTime.htm">Time</a>r(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppTime.htm">Time</a>rInteraction<a href="CppTime.htm">Time</a>r(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt; mPersons;<br/>
&nbsp;&nbsp;<a href="CppStdList.htm">std::list</a>&lt; Interaction &gt; mInteractions;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DrawScreen();<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Main(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetPercentageInfected() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ClearPersons();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>BadBoy(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>PartyAnimal(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>WiseGuy(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>CustomPerson(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pProposeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected);<br/>
<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="ToolSoaSim.htm">SoaSim</a>Main *Form<a href="ToolSoaSim.htm">SoaSim</a>Main;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppDrawGlobe.htm">DrawGlobe</a>(<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> rMax,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> gMax,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> bMax);<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppPaint.htm">Paint</a>Vcl(<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue&nbsp;&nbsp;);<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>();<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dX, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dY);<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitFormSoaSimMain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitFormSoaSimMain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitPerson.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="ToolSoaSim.htm">SoaSim</a>Main.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="ToolSoaSim.htm">SoaSim</a>Main *Form<a href="ToolSoaSim.htm">SoaSim</a>Main;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::TForm<a href="ToolSoaSim.htm">SoaSim</a>Main(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppDrawGlobe.htm">DrawGlobe</a>(ImagePersonRed&nbsp;&nbsp; , 255,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0);<br/>
&nbsp;&nbsp;<a href="CppDrawGlobe.htm">DrawGlobe</a>(ImagePersonGreen ,&nbsp;&nbsp; 0, 255,&nbsp;&nbsp; 0);<br/>
&nbsp;&nbsp;<a href="CppDrawGlobe.htm">DrawGlobe</a>(ImagePersonBlue&nbsp;&nbsp;,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0, 255);<br/>
&nbsp;&nbsp;<a href="CppDrawGlobe.htm">DrawGlobe</a>(ImagePersonCustom, 255, 255, 255);<br/>
&nbsp;&nbsp;<a href="CppDrawGlobe.htm">DrawGlobe</a>(ImageShadow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;64,&nbsp;&nbsp;64,&nbsp;&nbsp;64);<br/>
&nbsp;&nbsp;ImagePersonRed-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImagePersonGreen-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImagePersonBlue-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImagePersonCustom-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImageShadow-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
&nbsp;&nbsp;ImageBlaLeft-&gt;Picture-&gt;Bitmap-&gt;TransparentColor <a href="CppOperatorAssign.htm">=</a> clLime;<br/>
&nbsp;&nbsp;ImageProposeUnsafe-&gt;Picture-&gt;Bitmap-&gt;TransparentColor <a href="CppOperatorAssign.htm">=</a> clLime;<br/>
&nbsp;&nbsp;ImageProposeSafe-&gt;Picture-&gt;Bitmap-&gt;TransparentColor <a href="CppOperatorAssign.htm">=</a> clLime;<br/>
&nbsp;&nbsp;ImageSafeSex-&gt;Picture-&gt;Bitmap-&gt;TransparentColor <a href="CppOperatorAssign.htm">=</a> clLime;<br/>
&nbsp;&nbsp;ImageUnsafeSex-&gt;Picture-&gt;Bitmap-&gt;TransparentColor <a href="CppOperatorAssign.htm">=</a> clLime;<br/>
&nbsp;&nbsp;ImageBlaLeft-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImageProposeUnsafe-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;ImageProposeSafe-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>ImageSafeSex-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>ImageUnsafeSex-&gt;Transparent <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;OnResize(0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create persons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nPersons <a href="CppOperatorAssign.htm">=</a> 20;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>First add an infected Bad Boy<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAdd.htm">Add</a>BadBoy(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPersons.front()-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>nPersons-1; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 3)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <a href="CppAdd.htm">Add</a>BadBoy(<b><a href="CppFalse.htm">false</a></b>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: <a href="CppAdd.htm">Add</a>PartyAnimal(<b><a href="CppFalse.htm">false</a></b>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: <a href="CppAdd.htm">Add</a>WiseGuy(<b><a href="CppFalse.htm">false</a></b>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::FormResize(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;ImageBuffer-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClientWidth;<br/>
&nbsp;&nbsp;ImageBuffer-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> ClientHeight;<br/>
&nbsp;&nbsp;ImageBackground-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClientWidth;<br/>
&nbsp;&nbsp;ImageBackground-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> ClientHeight;<br/>
&nbsp;&nbsp;<a href="CppPaint.htm">Paint</a>Vcl(ImageBackground,255,255,255);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::DrawScreen()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw background on buffer<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,ImageBackground-&gt;Picture-&gt;Graphic);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw infected solitary persons on buffer<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> mPersons.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mPersons.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i)-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i)-&gt;x <a href="CppOperatorPlus.htm">+</a> 4, (*i)-&gt;y <a href="CppOperatorPlus.htm">+</a> 4, ImageShadow-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw infected couples<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> mInteractions.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mInteractions.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the couple<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i).mA-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x <a href="CppOperatorPlus.htm">+</a> 4, (*i).mA-&gt;y <a href="CppOperatorPlus.htm">+</a> 4, ImageShadow-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i).mB-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mB-&gt;x <a href="CppOperatorPlus.htm">+</a> 4, (*i).mB-&gt;y <a href="CppOperatorPlus.htm">+</a> 4, ImageShadow-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw solitary persons on buffer<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> mPersons.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mPersons.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i)-&gt;x, (*i)-&gt;y, (*i)-&gt;image-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw couples<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> mInteractions.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mInteractions.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the couple<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x, (*i).mA-&gt;y, (*i).mA-&gt;image-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mB-&gt;x, (*i).mB-&gt;y, (*i).mB-&gt;image-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw their interaction<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> ((*i).mInteraction)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aTalksBlistens:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x+32, (*i).mA-&gt;y-32, ImageBlaLeft-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::bTalksAlistens:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mB-&gt;x-32, (*i).mB-&gt;y-32, ImageBlaRight-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aProposeSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x+32, (*i).mA-&gt;y-32, ImageProposeSafe-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::bAgreesUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::bAgreesSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mB-&gt;x-32, (*i).mB-&gt;y-32, ImageYes-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aAndBhaveSafeSex:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x, (*i).mA-&gt;y, ImageSafeSex-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::bDisagreesSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::bDisagreesUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mB-&gt;x-32, (*i).mB-&gt;y-32, ImageNo-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aProposeUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x+32, (*i).mA-&gt;y-32, ImageProposeUnsafe-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aAndBhaveUnsafeSex:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw( (*i).mA-&gt;x, (*i).mA-&gt;y, ImageUnsafeSex-&gt;Picture-&gt;Graphic );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Interaction::aAndBleave:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw buffer to screen<br/>
&nbsp;&nbsp;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,ImageBuffer-&gt;Picture-&gt;Graphic);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppTime.htm">Time</a>rMove<a href="CppTime.htm">Time</a>r(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> personWidth&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ImagePersonRed-&gt;Picture-&gt;Graphic-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> personHeight <a href="CppOperatorAssign.htm">=</a> ImagePersonRed-&gt;Picture-&gt;Graphic-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> speed <a href="CppOperatorAssign.htm">=</a> 5.0;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move everybody<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> mPersons.end();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mPersons.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(*i)-&gt;direction <a href="CppOperatorPlusAssign.htm">+=</a> (<a href="CppGetRandomUniform.htm">GetRandomUniform</a>() * <a href="CppM_PI.htm">M_PI</a> * 2.0 * 0.05) <a href="CppOperatorMinus.htm">-</a> (0.025 * <a href="CppM_PI.htm">M_PI</a> * 2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(*i)-&gt;x <a href="CppOperatorPlusAssign.htm">+=</a> <a href="CppStdSin.htm">std::sin</a>( (*i)-&gt;direction ) * speed;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(*i)-&gt;y <a href="CppOperatorMinusAssign.htm">-=</a> <a href="CppStdCos.htm">std::cos</a>( (*i)-&gt;direction ) * speed;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Keep in screen<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i)-&gt;x <a href="CppOperatorPlus.htm">+</a> personWidth &gt; ClientWidth)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;x <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> personWidth;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;direction <a href="CppOperatorPlusAssign.htm">+=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> ((*i)-&gt;x &lt; 32)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;x <a href="CppOperatorAssign.htm">=</a> 32;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;direction <a href="CppOperatorMinusAssign.htm">-=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i)-&gt;y <a href="CppOperatorPlus.htm">+</a> personHeight &gt; ClientHeight)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;y <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> personHeight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;direction <a href="CppOperatorPlusAssign.htm">+=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> ((*i)-&gt;y &lt; 32)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;y <a href="CppOperatorAssign.htm">=</a> 32;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (*i)-&gt;direction <a href="CppOperatorMinusAssign.htm">-=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;DrawScreen();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppTime.htm">Time</a>rInteraction<a href="CppTime.htm">Time</a>r(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Detect <b><a href="CppNew.htm">new</a></b> couples<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> personWidth&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ImagePersonRed-&gt;Picture-&gt;Graphic-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> <b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(<b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> personA <a href="CppOperatorAssign.htm">=</a> mPersons.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personA<a href="CppOperatorNotEqual.htm">!=</a>mPersons.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>personA)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::<a href="CppIterator.htm">iterator</a> personB <a href="CppOperatorAssign.htm">=</a> personA;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> ( <a href="CppOperatorIncrement.htm">++</a>personB;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personB<a href="CppOperatorNotEqual.htm">!=</a>mPersons.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>personB)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppGetDistance.htm">GetDistance</a>( (*personA)-&gt;x <a href="CppOperatorMinus.htm">-</a> (*personB)-&gt;x, (*personA)-&gt;y <a href="CppOperatorMinus.htm">-</a> (*personB)-&gt;y )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(personWidth) )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>An interaction!<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteractions.push_back(Interaction( *personA, *personB ));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove <b><a href="CppThis.htm">this</a></b> couple from the list<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPersons.erase(personA);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPersons.erase(personB);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>The lists are messed up, so <b><a href="CppTry.htm">try</a></b> again<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppDo.htm">do</a></b>Retry <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove couples that ended their interaction<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mInteractions.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>mInteractions.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i).mInteraction <a href="CppOperatorEqual.htm">==</a> Interaction::aAndBleave)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*i).mA-&gt;direction <a href="CppOperatorMinusAssign.htm">-=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*i).mB-&gt;direction <a href="CppOperatorPlusAssign.htm">+=</a> <a href="CppM_PI.htm">M_PI</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Swap them <b><a href="CppFor.htm">for</a></b> fun...<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPersons.push_back( (*i).mB );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPersons.push_back( (*i).mA );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> <b><a href="CppNew.htm">new</a></b>I <a href="CppOperatorAssign.htm">=</a> i;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a><b><a href="CppNew.htm">new</a></b>I;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteractions.erase(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b>I;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do their interactions<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> mInteractions.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>mInteractions.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((*i).mInteraction <a href="CppOperatorNotEqual.htm">!=</a> Interaction::aAndBleave);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*i).DoInteraction();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppDouble.htm">double</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::GetPercentageInfected() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> nInfected <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> nUninfected <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Count infected solitary persons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::const_iterator j <a href="CppOperatorAssign.htm">=</a> mPersons.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person &gt; &gt;::const_iterator i <a href="CppOperatorAssign.htm">=</a> mPersons.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i)-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) <a href="CppOperatorIncrement.htm">++</a>nInfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <a href="CppOperatorIncrement.htm">++</a>nUninfected;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Count infected couples<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::const_iterator j <a href="CppOperatorAssign.htm">=</a> mInteractions.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdList.htm">std::list</a>&lt;Interaction&gt;::const_iterator i <a href="CppOperatorAssign.htm">=</a> mInteractions.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorNotEqual.htm">!=</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the couple<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i).mA-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>nInfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>nUninfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*i).mB-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>nInfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>nUninfected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum <a href="CppOperatorAssign.htm">=</a> nInfected <a href="CppOperatorPlus.htm">+</a> nUninfected;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sum<a href="CppOperatorEqual.htm">==</a>0) <b><a href="CppReturn.htm">return</a></b> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 100.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(nInfected) <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppAdd.htm">Add</a>BadBoy(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientWidth&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientHeight <a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;mPersons.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Person(x,y, 0.0, 0.1, 1.0, ImagePersonRed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;mPersons.back()-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> isInfected;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppAdd.htm">Add</a>PartyAnimal(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientWidth&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientHeight <a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;mPersons.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Person(x,y, 0.5, 1.0, 1.0, ImagePersonGreen)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;mPersons.back()-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> isInfected;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppAdd.htm">Add</a>WiseGuy(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientWidth&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientHeight <a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;mPersons.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Person(x,y, 1.0, 1.0, 0.1, ImagePersonBlue)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;mPersons.back()-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> isInfected;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::<a href="CppAdd.htm">Add</a>CustomPerson(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pProposeSafe,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeSafe,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeUnsafe,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isInfected)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientWidth&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (ClientHeight <a href="CppOperatorMinus.htm">-</a> 32);<br/>
&nbsp;&nbsp;mPersons.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Person(x,y, pProposeSafe, pAgreeSafe, pAgreeUnsafe, ImagePersonCustom)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;mPersons.back()-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> isInfected;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TForm<a href="ToolSoaSim.htm">SoaSim</a>Main::ClearPersons()<br/>
{<br/>
&nbsp;&nbsp;mPersons.clear();<br/>
&nbsp;&nbsp;mInteractions.clear();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mPersons.empty() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mInteractions.empty() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From htpp:<a href="CppComment.htm">//</a>www.richelbilderbeek.nl/Cpp<a href="CppGetRandomUniform.htm">GetRandomUniform</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>())/<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppDrawGlobe.htm">DrawGlobe</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppDrawGlobe.htm">DrawGlobe</a>(<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> rMax,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> gMax,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> bMax)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midX <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(width ) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midY <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(height) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxDist <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(midX,midY);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>height; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> line<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> yD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>width; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> xD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dist <a href="CppOperatorAssign.htm">=</a> <a href="CppStdSqrt.htm">std::sqrt</a>( ((xD <a href="CppOperatorMinus.htm">-</a> midX) * (xD <a href="CppOperatorMinus.htm">-</a> midX)) <a href="CppOperatorPlus.htm">+</a> ((yD <a href="CppOperatorMinus.htm">-</a> midY) * (yD <a href="CppOperatorMinus.htm">-</a> midY)) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (dist <a href="CppOperatorLessEqual.htm">&lt;=</a> maxDist)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> relDist <a href="CppOperatorAssign.htm">=</a> dist <a href="CppOperatorDivide.htm">/</a> maxDist;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> r <a href="CppOperatorAssign.htm">=</a> relDist * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(rMax);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> g <a href="CppOperatorAssign.htm">=</a> relDist * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(gMax);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> b <a href="CppOperatorAssign.htm">=</a> relDist * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(bMax);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( r <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( r &lt; 256);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( g <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( g &lt; 256);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( b <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( b &lt; 256);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+2] <a href="CppOperatorAssign.htm">=</a> (r <a href="CppOperatorEqual.htm">==</a> 0 ? 1 : r); <a href="CppComment.htm">//</a>Never use a zero <b><a href="CppFor.htm">for</a></b> red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+1] <a href="CppOperatorAssign.htm">=</a> (g <a href="CppOperatorEqual.htm">==</a> 0 ? 1 : g); <a href="CppComment.htm">//</a>Never use a zero <b><a href="CppFor.htm">for</a></b> green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+0] <a href="CppOperatorAssign.htm">=</a> (b <a href="CppOperatorEqual.htm">==</a> 0 ? 1 : b); <a href="CppComment.htm">//</a>Never use a zero <b><a href="CppFor.htm">for</a></b> blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+2] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+1] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*3+0] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppPaint.htm">Paint</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppPaint.htm">Paint</a>Vcl(<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue&nbsp;&nbsp;)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap <a href="CppOperatorNotEqual.htm">!=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0; y <a href="CppOperatorNotEqual.htm">!=</a> maxy; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> myLine<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0; x <a href="CppOperatorNotEqual.htm">!=</a> maxx; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+2] <a href="CppOperatorAssign.htm">=</a> red&nbsp;&nbsp;; <a href="CppComment.htm">//</a>Red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+1] <a href="CppOperatorAssign.htm">=</a> green; <a href="CppComment.htm">//</a>Green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+0] <a href="CppOperatorAssign.htm">=</a> blue ; <a href="CppComment.htm">//</a>Blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetDistance.htm">GetDistance</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dX, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dY)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (<a href="CppStdSqrt.htm">std::sqrt</a>( (dX * dX) <a href="CppOperatorPlus.htm">+</a> (dY * dY) ) );<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitInteraction.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitInteraction.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitInteractionH<br/>
<a href="CppDefine.htm">#define</a> UnitInteractionH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> Person;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppStruct.htm">struct</a></b> Interaction<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnum.htm">enum</a></b> Interaction<a href="CppState.htm">State</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aTalksBlistens,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bTalksAlistens,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aProposeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bAgreesSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aAndBhaveSafeSex,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bDisagreesSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aProposeUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bAgreesUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aAndBhaveUnsafeSex,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bDisagreesUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;aAndBleave<br/>
&nbsp;&nbsp;} mInteraction;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; mA;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; mB;<br/>
<br/>
&nbsp;&nbsp;Interaction(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; a, <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; b);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoInteraction();<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>();<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitInteraction.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitInteraction.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "UnitPerson.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitInteraction.h"<br/>
<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
Interaction::Interaction(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; a, <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Person&gt; b)<br/>
&nbsp;&nbsp;: mA(a), mB(b), mInteraction(aTalksBlistens)<br/>
{<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> Interaction::DoInteraction()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(mInteraction)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aTalksBlistens:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Conversation<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 2 <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> bTalksAlistens; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Propose sex<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 2 <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mA-&gt;ProposeSafe() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> aProposeSafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> aProposeUnsafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> bTalksAlistens:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Conversation<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 2 <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> aTalksBlistens; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aProposeSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mB-&gt;AgreeSafe() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> bAgreesSafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> bDisagreesSafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> bAgreesSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBhaveSafeSex;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aAndBhaveSafeSex:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBleave;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> bDisagreesSafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBleave;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aProposeUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mB-&gt;AgreeUnsafe() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> bAgreesUnsafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ mInteraction <a href="CppOperatorAssign.htm">=</a> bDisagreesUnsafe; <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> bAgreesUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBhaveUnsafeSex;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aAndBhaveUnsafeSex:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBleave;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>If one is infected, <a href="CppMake.htm">make</a> them both infected<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mA-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b> <a href="CppOperatorLogicalOr.htm">||</a> mB-&gt;isInfected <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mA-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mB-&gt;isInfected <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> bDisagreesUnsafe:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mInteraction <a href="CppOperatorAssign.htm">=</a> aAndBleave;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> aAndBleave:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !"This couple should have been taken out of the interaction vector");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From htpp:<a href="CppComment.htm">//</a>www.richelbilderbeek.nl/Cpp<a href="CppGetRandomUniform.htm">GetRandomUniform</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>())/<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitPerson.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitPerson.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitPersonH<br/>
<a href="CppDefine.htm">#define</a> UnitPersonH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Extctrls<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppTImage.htm">TImage</a>;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppStruct.htm">struct</a></b> Person<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> x;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> y;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> direction;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> isInfected;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pProposeSafe;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeSafe;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pAgreeUnsafe;<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image;<br/>
&nbsp;&nbsp;Person(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>X,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>Y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PproposeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PagreeSafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PagreeUnsafe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppAny.htm">any</a>Image<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> ProposeSafe() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> AgreeSafe() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> AgreeUnsafe() <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>();<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolSoaSim/UnitPerson.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolSoaSim/UnitPerson.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">SoaSim</a>, a simulator of sexually transmitted diseases<br/>
&nbsp;&nbsp;Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitPerson.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
Person::Person(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>X,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>Y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PproposeSafe,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PagreeSafe,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>PagreeUnsafe,<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppAny.htm">any</a>Image<br/>
&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;: x(<a href="CppAny.htm">any</a>X), y(<a href="CppAny.htm">any</a>Y),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pProposeSafe(<a href="CppAny.htm">any</a>PproposeSafe),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pAgreeSafe(<a href="CppAny.htm">any</a>PagreeSafe),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pAgreeUnsafe(<a href="CppAny.htm">any</a>PagreeUnsafe),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image(<a href="CppAny.htm">any</a>Image),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;isInfected(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;direction( <a href="CppM_PI.htm">M_PI</a> * 2.0 * <a href="CppGetRandomUniform.htm">GetRandomUniform</a>() )<br/>
{<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppBool.htm">bool</a></b> Person::ProposeSafe() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppGetRandomUniform.htm">GetRandomUniform</a>() &lt; pProposeSafe) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppBool.htm">bool</a></b> Person::AgreeSafe() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppGetRandomUniform.htm">GetRandomUniform</a>() &lt; pAgreeSafe) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppBool.htm">bool</a></b> Person::AgreeUnsafe() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppGetRandomUniform.htm">GetRandomUniform</a>() &lt; pAgreeUnsafe) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From htpp:<a href="CppComment.htm">//</a>www.richelbilderbeek.nl/Cpp<a href="CppGetRandomUniform.htm">GetRandomUniform</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>())/<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
