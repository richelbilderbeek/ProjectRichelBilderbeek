<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>return type</title>
  <meta name="description" content="C++ return type"/>
  <meta name="keywords" content="C++ return type code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppReturnType.htm">return type</a></h1>
<p>&nbsp;</p>
<p>The <a href="CppReturnType.htm">return type</a> of a <a href="CppFunction.htm">function</a>
denotes the <a href="CppDataType.htm">data type</a> it <a href="CppReturn.htm">returns</a>.</p>
<p>&nbsp;</p>
<p>For example, the <a href="CppFunction.htm">function</a> below, <a href="CppToInt.htm">ToInt</a>, 
<a href="CppReturn.htm">returns</a> an <a href="CppInt.htm">int</a>, so its 
<a href="CppReturnType.htm">return type</a> is <a href="CppInt.htm">int</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/<a href="CppToInt.htm">ToInt</a> <a href="CppConvert.htm">converts</a> a <a href="CppString.htm">std::string</a> to an <a href="CppInt.htm">integer</a><br/>
<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppToInt.htm">ToInt</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppToInt.htm">ToInt</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppAtoi.htm">std::atoi</a>(s.c_str());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Don't return <a href="CppPointer.htm">pointers</a> or <a href="CppReference.htm">references</a> to <a href="CppLocal.htm">local</a> <a href="CppVariable.htm">variables</a> [1]
  </li>
  <li>
    For large <a href="CppReturnType.htm">return type</a>, use a <a href="CppMoveConstructor.htm">move constructor</a> [2]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 12.7. Advice. page 341: '[4] Don't return pointers or references to local variables'</li>
  <li><!--  2 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 18.5. Advice. page 547: '[4] For large results, use a move constructor'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
