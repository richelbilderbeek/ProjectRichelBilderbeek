<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::rand</title>
  <meta name="description" content="C++ std::rand"/>
  <meta name="keywords" content="C++ std::rand std rand"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppStdRand.htm">std::rand</a></h1>
<p>&nbsp;</p>
<p>
  <a href="CppStdRand.htm">std::rand</a> draws a random positive <a href="CppInt.htm">integer</a> 
  from zero to <a href="CppRAND_MAX.htm">RAND_MAX</a>.
  <a href="CppRAND_MAX.htm">RAND_MAX</a> is a <a href="CppDefine.htm">#define</a>d 
  in <a href="CppCstdlibH.htm">cstdlib.h</a>.
</p>
<p>&nbsp;</p>
<p><a href="CppStdRand.htm">std::rand</a> is <a href="CppDefinition.htm">defined</a> in the <a href="CppHeaderFile.htm">header file</a> <a href="CppCstdlibH.htm">cstdlib.h</a>.</p>
<p>&nbsp;</p>
<p><a href="Cpp_lrand.htm">std::_lrand</a> is like <a href="CppStdRand.htm">std::rand</a>, except it <a href="CppReturn.htm">return</a>s random numbers in a larger range. Check out the <a href="CppBoost.htm">Boost C++ library</a> for other random number generators.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Examples</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppStdRandExample1.htm">std::rand example 1: drawing 10 random numbers</a></li>
  <li><a href="CppStdRandExample1.htm">std::rand example 2: std::rand draws same numbers after same seed</a></li>
  <li><a href="CppGetRandomUniform.htm">GetRandomUniform</a>: get a broken random number from zero to one </li>
  <li><a href="CppGetRandomNormal.htm">GetRandomNormal</a>: Get a random number from a normal distribution</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Prefer a random number class for a partical distribution over direct use of <a href="CppStdRand.htm">std::rand</a> [1]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Note when using multithreading</h2>
<p>&nbsp;</p>
<p>
  As <a href="CppSrand.htm">std::srand</a> and <a href="CppStdRand.htm">std::rand</a> use a 
  <a href="CppGlobal.htm">global</a>/<a href="CppStatic.htm">static</a> 
  <a href="CppVariable.htm">variable</a> and therefore is not suitable for multithreading. 
  The <a href="CppBoost.htm">Boost C++ library</a> has other random number 
  generators that do support multithreading.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.cplusplus.com/reference/clibrary/cstdlib/rand">Cplusplus.com page about std::rand</a></li> 
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. 40.8[15]: 'Prefer a random number class for a partical distribution over direct use of rand()'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

