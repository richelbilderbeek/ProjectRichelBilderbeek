<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>IsRegularFile</title>
  <meta name="description" content="C++ IsRegularFile"/>
  <meta name="keywords" content="C++ IsRegularFile "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIsRegularFile.htm">IsRegularFile</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.636 at Sun Apr 27 13:03:47 2014
 -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppIsRegularFile.htm">IsRegularFile</a> is a <a href="CppFileIo.htm">file I/O</a>  <a href="CppCodeSnippets.htm">code snippet</a> to determine if a filename is a regular file.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppIsRegularFile.zip">Download the Qt Creator project 'CppIsRegularFile' (zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppIsRegularFile/CppIsRegularFile.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppIsRegularFile/CppIsRegularFile.pro" border = "1"><tr><td><code>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeConfig.htm">CONFIG</a> += qt console<br/>
<a href="CppQmakeConfig.htm">CONFIG</a> -= app_bundle<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWerror.htm">-Werror</a><br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;#message(Native Windows dynamic link to Boost)<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
<br/>
&nbsp;&nbsp;debug {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += ../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_filesystem-mgw48-mt-d-1_54.a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += ../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_system-mgw48-mt-d-1_54.a<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;release {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += ../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_filesystem-mgw48-mt-1_54.a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += ../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_system-mgw48-mt-1_54.a<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CppIsRegularFile.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppIsRegularFile/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppIsRegularFile/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdioH.htm">cstdio</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/filesystem.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDir.htm">QDir</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a>Determines <b><a href="CppIf.htm">if</a></b> a filename is a regular file<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoostFilesystem.htm">boost::filesystem</a>::is_regular_file(filename);<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Determines <b><a href="CppIf.htm">if</a></b> a filename is a regular file<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> !<a href="CppQDir.htm">QDir</a>(filename.c_str()).exists() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppQFile.htm">QFile</a>::exists(filename.c_str());<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Determines <b><a href="CppIf.htm">if</a></b> a filename is a regular file<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsRegularFile.htm">IsRegularFile</a>Stl(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdFstream.htm">std::fstream</a> f;<br/>
&nbsp;&nbsp;f.open(filename.c_str(),<a href="CppStd.htm">std</a>::ios::in);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> f.is_open();<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppComment.htm">/*</a> <a href="CppArgc.htm">argc</a> <a href="CppComment.htm">*/</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem(<a href="CppArgc.htm">argv</a>[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>(<a href="CppArgc.htm">argv</a>[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl(<a href="CppArgc.htm">argv</a>[0]));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem("../Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>("../Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl("../Cpp<a href="CppIsRegularFile.htm">IsRegularFile</a>"));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>("tmp.txt");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a regular file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFstream.htm">std::fstream</a> f;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.open("tmp.txt",<a href="CppStd.htm">std</a>::ios::out);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "TEMP TEXT";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl("tmp.txt"));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>("tmp.txt");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>("tmp.txt"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl("tmp.txt"));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a folder<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSystem.htm">std::system</a>("mkdir tmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem("tmp"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>("tmp"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl("tmp"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSystem.htm">std::system</a>("rmdir tmp");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppBoost.htm">Boost</a>Filesystem(":/images/R.png")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppBoost.htm">Boost</a> cannot detect <a href="CppQt.htm">Qt</a> resources");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( <a href="CppIsRegularFile.htm">IsRegularFile</a><a href="CppQt.htm">Qt</a>(":/images/R.png")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a> can detect <a href="CppQt.htm">Qt</a> resources");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsRegularFile.htm">IsRegularFile</a>Stl(":/images/R.png")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The <a href="CppStl.htm">STL</a> cannot detect <a href="CppQt.htm">Qt</a> resources");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
