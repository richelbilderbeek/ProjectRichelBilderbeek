<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::bind2nd</title>
  <meta name="description" content="C++ std::bind2nd"/>
  <meta name="keywords" content="C++ std::bind2nd std bind2nd binder code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBind2nd.htm">std::bind2nd</a></h1>
<p>&nbsp;</p>
<p><a href="CppBind2nd.htm">std::bind2nd</a> is a <a href="CppBinder.htm">binder</a> 
to call a binary function with the value bound
as second argument. If the first argument needs to be bound, use 
<a href="CppBind1st.htm">std::bind1st</a> instead.</p>
<p>&nbsp;</p>
<p>The distinction between <a href="CppBind1st.htm">std::bind1st</a> and 
<a href="CppBind2nd.htm">std::bind2nd</a> gets clear in division:</p>
<ul>
  <li>
    If on all elements, an element called x, you want to perform 'x / 2.0', use
    <a href="CppBind2nd.htm">std::bind2nd</a> on the 2.0. This is demonstrated in the 
    function <a href="CppHalve.htm">Halve</a>, which is shown below in the example
  </li>
  <li>
    If on all elements, an element called x, you want to perform '1.0 / x', use
    <a href="CppBind1st.htm">std::bind1st</a> one the 1.0. This is demonstrated
    in the function <a href="CppReciprocal.htm">Reciprocal</a>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppNumericH.htm">numeric</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppHalve.htm">Halve</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppHalve.htm">Halve</a> (<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),v.end(),v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind2nd.htm">std::bind2nd</a>(<a href="CppDivides.htm">std::divides</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(),2.0));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
