<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtRoundedEditRectItem</title>
  <meta name="description" content="C++ QtRoundedEditRectItem"/>
  <meta name="keywords" content="C++ QtRoundedEditRectItem "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 09:57:30 2015
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppQGraphicsItem.htm">QGraphicsItem</a> <a href="CppClass.htm">class</a> that displays a rounded rectangle with editable text.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/CppQtRoundedEditRectItem.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/CppQtRoundedEditRectItem.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>padding.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_test.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>padding.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/Licence.txt<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>dialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitem.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDEDITRECTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDEDITRECTITEM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>padding.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>A <a href="CppQt.htm">Qt</a>RoundedRectTextItem displaying multiple lines of text<br/>
<a href="CppComment.htm">///</a>For a single line of text, use <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a><br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQ_OBJECT.htm">Q_OBJECT</a> <a href="CppComment.htm">//</a>Cannot <a href="CppMake.htm">make</a> <b><a href="CppThis.htm">this</a></b> a <a href="CppQObject.htm">QObject</a>???<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> Base;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding Padding;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text <a href="CppOperatorAssign.htm">=</a> { "..." },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Padding&amp; padding <a href="CppOperatorAssign.htm">=</a> Padding(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>("monospace",9),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the font by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; GetFont() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Padding&amp; GetPadding() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_padding; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the text on the item<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; GetText() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetTextPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_text_pen; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the font by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFont(<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding between text and <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetPadding(<b><a href="CppConst.htm">const</a></b> Padding&amp; padding) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the text displayed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetText(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetTextPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called when the user wants to edit the text<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_item_requests_edit;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_base_changed;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_font_changed;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_padding_changed;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_text_changed;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_text_pen_changed;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The font by which the text is drawn<br/>
&nbsp;&nbsp;<a href="CppQFont.htm">QFont</a> m_font;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding between text and <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;Padding m_padding;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The text displayed<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; m_text;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding around text, so the text will be centered<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> Padding m_text_padding;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the text is drawn<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_text_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the unpadded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> a single line,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where the center lies at the origin<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>---<a href="CppOperatorDecrement.htm">--</a>+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>-|ABCDE|---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>---<a href="CppOperatorDecrement.htm">--</a>+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQRect.htm">QRect</a>F GetTextRectAtOrigin(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the unpadded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> the whole text,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where the center lies at the origin<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Note: even <b><a href="CppThis.htm">this</a></b> <a href="CppRectangle.htm">rectangle</a> is enlarged by a pixel in both dimensions, so the text will be drawn in full<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>---<a href="CppOperatorDecrement.htm">--</a>+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |ABCDE|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>-|ABCDE|---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |ABCDE|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>---<a href="CppOperatorDecrement.htm">--</a>+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQRect.htm">QRect</a>F GetTextRectAtOrigin(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text, <b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the padded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> a single line<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where the center lies at the origin<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp; <a href="CppOperatorDecrement.htm">--</a>-| ABCDE |---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQRect.htm">QRect</a>F GetPaddedTextRectAtOrigin(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the padded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> a single line<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where the center lies at the correct location<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| ABCDE |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp; <a href="CppOperatorDecrement.htm">--</a>-|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>-------+<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Line 0/3<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQRect.htm">QRect</a>F GetPaddedTextRectAtLine(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> line, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_lines) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called whenever a <a href="CppBaseClass.htm">base class</a> item is changed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnBaseChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&amp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDEDITRECTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitem.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>Metrics&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppContainer.htm">container</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Padding <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::m_text_padding(3.0,0.0,0.0,3.0);<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Padding&amp; padding,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font,<br/>
&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_base_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_font_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_padding_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_pen_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_font(font),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_padding(padding),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text( {""} ), <a href="CppComment.htm">//</a>Empty <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;, as m_text must be set by SetText<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text_pen{}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_contour_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_focus_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_pos_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_radius_x_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_radius_y_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_width_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_height_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a white background<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setBrush(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>(255,255,255)));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetFont(font);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusX(4.0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusY(4.0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetPadding(Padding(1.0,1.0,1.0,1.0));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetText(text);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::~<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>OK<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetFont() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_font;<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRectAtOrigin(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetTextRectAtOrigin(s,font).adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.bottom);<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRectAtLine(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> line,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_lines<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> r <a href="CppOperatorAssign.htm">=</a> GetPaddedTextRectAtOrigin(s,font);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> line_width <a href="CppOperatorAssign.htm">=</a> r.width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> line_height <a href="CppOperatorAssign.htm">=</a> r.height();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> total_width <a href="CppOperatorAssign.htm">=</a> line_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> total_height <a href="CppOperatorAssign.htm">=</a> line_height * n_lines;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> total_x1 <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>0.5 * total_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> total_y1 <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>0.5 * total_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> x1 <a href="CppOperatorAssign.htm">=</a> total_x1;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> y1 <a href="CppOperatorAssign.htm">=</a> total_y1 <a href="CppOperatorPlus.htm">+</a> (line * line_height);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(x1,y1,line_width,line_height);<br/>
<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetText() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_text;<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRectAtOrigin(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>MetricsF(font).height();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>MetricsF(font).width(s.c_str());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(h &gt; 0.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "An empty text can have width 0");<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,2.0,0.0) works fine <b><a href="CppFor.htm">for</a></b> 50<a href="CppOperatorModulus.htm">%</a> of the fonts supplied by <a href="CppWine.htm">Wine</a> under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,3.0,0.0) works fine <b><a href="CppFor.htm">for</a></b> 80<a href="CppOperatorModulus.htm">%</a> of the fonts supplied by <a href="CppWine.htm">Wine</a> under native Lubuntu<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * w, 0.0,w,h).adjusted(0.0,0.0,3.0,0.0);<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,2.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> 90<a href="CppOperatorModulus.htm">%</a> of the fonts under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,3.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> 99<a href="CppOperatorModulus.htm">%</a> of the fonts under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,4.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> all the fonts I've tried under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * w,0.0,w,h).adjusted(0.0,0.0,2.0,-1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F result <a href="CppOperatorAssign.htm">=</a> <a href="CppQRect.htm">QRect</a>F(-0.5 * w,-0.5 * h,w,h).adjusted(0.0,0.0,2.0,0.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(result.width() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(result.height() &gt; 0.0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> result;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRectAtOrigin(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQRect.htm">QRect</a>F&gt; v;<br/>
&nbsp;&nbsp;<a href="CppStdTransform.htm">std::transform</a>(text.begin(),text.end(),<a href="CppStdBack_inserter.htm">std::back_inserter</a>(v),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[font](<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRectAtOrigin(s,font);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> width_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax_element.htm">std::max_element</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; rhs)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.width() &lt; rhs.width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> width_iter <a href="CppOperatorEqual.htm">==</a> v.end() ? 1.0 : width_iter-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(v.begin(),v.end(),0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppDouble.htm">double</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; r)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.height() &gt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> r.height() <a href="CppOperatorPlus.htm">+</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(width&nbsp;&nbsp;&gt; 0.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(height &gt; 0.0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * width,-0.5 * height, width, height).adjusted(-0.0,-0.0,0.0,0.0);<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.1";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-19: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-09: <a href="CppVersion.htm">version</a> 1.1: increased use of <a href="CppTdd.htm">Tdd</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (event-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_F2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_item_requests_edit(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::OnBaseChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_signal_base_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draws the rounded <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::paint(painter,option,<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the text lines at the right spot<br/>
&nbsp;&nbsp;painter-&gt;setFont(m_font);<br/>
&nbsp;&nbsp;painter-&gt;setPen(m_text_pen);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_text.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> For <b><a href="CppThis.htm">this</a></b> line, work down from<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> (1) a padded text <a href="CppRectangle.htm">rectangle</a> at the right location<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> (2) an (ordinary) text <a href="CppRectangle.htm">rectangle</a> (where the text will be drawn), at the right location<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s <a href="CppOperatorAssign.htm">=</a> m_text[i];<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> (1) a padded text <a href="CppRectangle.htm">rectangle</a> at the right location<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F padded_rect <a href="CppOperatorAssign.htm">=</a> GetPaddedTextRectAtLine(s,m_font,i,sz);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> (2) an (ordinary) text <a href="CppRectangle.htm">rectangle</a> (where the text will be drawn), at the right location<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F text_rect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;padded_rect.adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawText(text_rect,s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetFont(<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_font <a href="CppOperatorNotEqual.htm">!=</a> font)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_font <a href="CppOperatorAssign.htm">=</a> font;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_request_scene_update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_font_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetPadding(<b><a href="CppConst.htm">const</a></b> Padding&amp; padding) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (padding <a href="CppOperatorNotEqual.htm">!=</a> m_padding)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_padding <a href="CppOperatorAssign.htm">=</a> padding;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Adapt the size<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F text_rect <a href="CppOperatorAssign.htm">=</a> GetTextRectAtOrigin(m_text,m_font);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.width() <a href="CppOperatorPlus.htm">+</a> m_padding.left <a href="CppOperatorPlus.htm">+</a> m_padding.right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerHeight(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.height() <a href="CppOperatorPlus.htm">+</a> m_padding.top <a href="CppOperatorPlus.htm">+</a> m_padding.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_request_scene_update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_padding_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetText(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text <a href="CppOperatorNotEqual.htm">!=</a> m_text)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Text will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppContainer.htm">Container</a>().Concatenate(m_text)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppContainer.htm">Container</a>().Concatenate(text)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> text;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Adapt the size<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F text_rect <a href="CppOperatorAssign.htm">=</a> GetTextRectAtOrigin(m_text,m_font);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.width() <a href="CppOperatorPlus.htm">+</a> m_padding.left <a href="CppOperatorPlus.htm">+</a> m_padding.right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerHeight(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.height() <a href="CppOperatorPlus.htm">+</a> m_padding.top <a href="CppOperatorPlus.htm">+</a> m_padding.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Text will remain '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppContainer.htm">Container</a>().ToStr(m_text)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetTextPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_text_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_pen_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitem_test.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitem_test.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> item;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Text must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_text <a href="CppOperatorAssign.htm">=</a> item.GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppAuto.htm">auto</a></b> new_text <a href="CppOperatorAssign.htm">=</a> old_text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_text[0] <a href="CppOperatorPlusAssign.htm">+=</a> " (modified)";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText(new_text);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item.GetText() <a href="CppOperatorEqual.htm">==</a> new_text);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting two increasing-length single-line texts should increase the inner width"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"A"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_width{item.GetInnerWidth()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"AB"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(old_width &lt; item.GetInnerWidth());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting two decreasing-length single-line texts should decrease the inner width"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"AB"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_width{item.GetInnerWidth()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"A"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(old_width &gt; item.GetInnerWidth());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting two increasing-length single-line texts should keep the inner height the same"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"A"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_height{item.GetInnerHeight()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item.SetText( {"AB"} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(old_height <a href="CppOperatorEqual.htm">==</a> item.GetInnerHeight());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("A text <a href="CppRectangle.htm">rectangle</a> of a single-line text must have its center at origin"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> center <a href="CppOperatorAssign.htm">=</a> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRectAtOrigin("ABCDEFG",<a href="CppQFont.htm">QFont</a>()).center();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("A text <a href="CppRectangle.htm">rectangle</a> of a multi-line text must have its center at origin"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> center <a href="CppOperatorAssign.htm">=</a> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRectAtOrigin(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ "ABCDEFG", "ABCDEFG", "ABCDEFG" },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFont.htm">QFont</a>()).center();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("A padded text <a href="CppRectangle.htm">rectangle</a> of a multi-line text, line 1/3 must have its center above origin"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> center <a href="CppOperatorAssign.htm">=</a> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRectAtLine("ABCDEFG",<a href="CppQFont.htm">QFont</a>(),0,3).center();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(center.x());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(center.y());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() &lt;&nbsp;&nbsp; 0.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("A padded text <a href="CppRectangle.htm">rectangle</a> of a multi-line text, line 3/3 must have its center above origin"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> center <a href="CppOperatorAssign.htm">=</a> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRectAtLine("ABCDEFG",<a href="CppQFont.htm">QFont</a>(),2,3).center();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(center.x());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(center.y());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(center.y() &gt;&nbsp;&nbsp; 0.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("A padded text <a href="CppRectangle.htm">rectangle</a> must at least be as wide as a text <a href="CppRectangle.htm">rectangle</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetTextRectAtOrigin("X",<a href="CppQFont.htm">QFont</a>()).width() &gt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetPaddedTextRectAtOrigin("X",<a href="CppQFont.htm">QFont</a>()).width() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> GetTextRectAtOrigin("X",<a href="CppQFont.htm">QFont</a>()).width());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!"Refactor");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitemdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDEDITRECTITEMDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDEDITRECTITEMDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>; <a href="CppComment.htm">//</a><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> its <a href="CppBaseClass.htm">base class</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>; <a href="CppComment.htm">//</a>The item<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog; <a href="CppComment.htm">//</a>its <a href="CppBaseClass.htm">base class</a> display<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt; GetItem() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_item; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> GetMinimumHeight(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&amp; <a href="CppComment.htm">/*</a> item <a href="CppComment.htm">*/</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> 276 <a href="CppOperatorPlus.htm">+</a> 300; }<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> GetMinimumHeight(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ) <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> 276 <a href="CppOperatorPlus.htm">+</a> 300; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Read the X value directly from GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Read the Y value directly from GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the X value directly to GUI<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetUiX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the Y value directly to GUI<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetUiY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_font_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_text_textChanged();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_text_pen_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_padding_left_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_padding_top_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_padding_right_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_padding_bottom_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Dialog <b><a href="CppFor.htm">for</a></b> its <a href="CppBaseClass.htm">base class</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&gt; m_dialog;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> to work on<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt; m_item;<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnBaseChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnFontChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnPaddingChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnTextChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnTextPenChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDEDITRECTITEMDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string/trim_all.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFontDialog.htm">QFontDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQString.htm">QString</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppContainer.htm">container</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog{<a href="CppBoostMake_shared.htm">boost::make_shared</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&gt;()},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item{}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;layout()-&gt;addWidget(m_dialog.get());<br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;DisableSetSize();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::~<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog-&gt;GetUiX();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog-&gt;GetUiY();<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.3";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-22: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-21: <a href="CppVersion.htm">version</a> 1.1: added CheckMe <a href="CppMemberFunction.htm">member function</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-31: <a href="CppVersion.htm">version</a> 1.2: fixed <a href="CppBug.htm">bug</a> in SetText"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-04: <a href="CppVersion.htm">version</a> 1.3: removed CheckMe <a href="CppMemberFunction.htm">member function</a> in favor of <a href="CppTdd.htm">Tdd</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_button_font_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQFont.htm">QFont</a> font <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetFont();<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> ok <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a> new_font <a href="CppOperatorAssign.htm">=</a> <a href="CppQFontDialog.htm">QFontDialog</a>::getFont(&amp;ok, font, <b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ok) { m_item-&gt;SetFont(new_font); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_text_textChanged()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> s <a href="CppOperatorAssign.htm">=</a> ui-&gt;text-&gt;toPlainText().toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> text <a href="CppOperatorAssign.htm">=</a> <a href="CppContainer.htm">Container</a>().<a href="CppSeperateString.htm">SeperateString</a>(s,'\n');<br/>
&nbsp;&nbsp;m_item-&gt;SetText(text);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_button_text_pen_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a> pen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a>(qRgb(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 256,<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 256,<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 256)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;1.0 <a href="CppOperatorPlus.htm">+</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 100) <a href="CppOperatorDivide.htm">/</a> 10.0)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;SetTextPen(pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnBaseChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b><br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
qtitem<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item.get() <a href="CppOperatorEqual.htm">==</a> qtitem);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; base(m_item);<br/>
&nbsp;&nbsp;m_dialog-&gt;SetItem(m_item);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnFontChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;label_font-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetFont().toString()<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnPaddingChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_padding_bottom-&gt;setValue(qtitem-&gt;GetPadding().bottom);<br/>
&nbsp;&nbsp;ui-&gt;box_padding_left-&gt;setValue(qtitem-&gt;GetPadding().left);<br/>
&nbsp;&nbsp;ui-&gt;box_padding_right-&gt;setValue(qtitem-&gt;GetPadding().right);<br/>
&nbsp;&nbsp;ui-&gt;box_padding_top-&gt;setValue(qtitem-&gt;GetPadding().top);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s{<a href="CppContainer.htm">Container</a>().Concatenate(qtitem-&gt;GetText(),"\n")};<br/>
&nbsp;&nbsp;ui-&gt;text-&gt;setPlainText(s.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextPenChanged(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Text pen: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> qtitem-&gt;GetTextPen().widthF();<br/>
&nbsp;&nbsp;ui-&gt;label_text_pen-&gt;setText(s.str().c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item <a href="CppOperatorEqual.htm">==</a> item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Setting item '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*item) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; base_after <a href="CppOperatorAssign.htm">=</a> item;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> font_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetFont();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> padding_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetPadding();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> text_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetText();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> text_pen_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetTextPen();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> base_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> font_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> padding_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> text_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> text_pen_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; base_before <a href="CppOperatorAssign.htm">=</a> m_item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> font_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetFont();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> padding_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPadding();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> text_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> text_pen_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetTextPen();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;base_changed <a href="CppOperatorAssign.htm">=</a> base_before <a href="CppOperatorNotEqual.htm">!=</a> base_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;font_changed <a href="CppOperatorAssign.htm">=</a> font_before <a href="CppOperatorNotEqual.htm">!=</a> font_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;padding_changed <a href="CppOperatorAssign.htm">=</a> padding_before <a href="CppOperatorNotEqual.htm">!=</a> padding_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text_changed <a href="CppOperatorAssign.htm">=</a> text_before <a href="CppOperatorNotEqual.htm">!=</a> text_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text_pen_changed <a href="CppOperatorAssign.htm">=</a> text_pen_before <a href="CppOperatorNotEqual.htm">!=</a> text_pen_after;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (base_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Base will change from "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*base_before)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*base_after)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (font_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Font will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> font_before.toString().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> font_after.toString().toStdString() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (padding_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Padding will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> padding_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> padding_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Text will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppContainer.htm">Container</a>().ToStr(text_before)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppContainer.htm">Container</a>().ToStr(text_after) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text_pen_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Text pen will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> text_pen_before.widthF()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> text_pen_after.widthF() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disconnect m_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_base_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_font_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnFontChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_padding_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnPaddingChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_text_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_text_pen_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Replace m_item by the <b><a href="CppNew.htm">new</a></b> one<br/>
&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> item;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetFont() <a href="CppOperatorEqual.htm">==</a> font_after);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetPadding() <a href="CppOperatorEqual.htm">==</a> padding_after);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetText() <a href="CppOperatorEqual.htm">==</a> text_after);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetTextPen() <a href="CppOperatorEqual.htm">==</a> text_pen_after);<br/>
<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_base_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnBaseChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_font_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnFontChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_padding_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnPaddingChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_text_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_text_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::OnTextPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppEmit.htm">Emit</a> everything that has changed<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (base_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_base_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (font_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_font_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (padding_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_padding_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_text_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text_pen_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_text_pen_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( item <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;m_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*item <a href="CppOperatorEqual.htm">==</a> *m_item);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::SetUiX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_dialog-&gt;SetUiX(x);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::SetUiY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_dialog-&gt;SetUiY(y);<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_padding_top-&gt;value() <a href="CppOperatorEqual.htm">==</a> m_item-&gt;GetPadding().top);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_padding_right-&gt;value() <a href="CppOperatorEqual.htm">==</a> m_item-&gt;GetPadding().right);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_padding_bottom-&gt;value() <a href="CppOperatorEqual.htm">==</a> m_item-&gt;GetPadding().bottom);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_padding_left-&gt;value() <a href="CppOperatorEqual.htm">==</a> m_item-&gt;GetPadding().left);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetText() <a href="CppOperatorEqual.htm">==</a> <a href="CppContainer.htm">Container</a>().<a href="CppSeperateString.htm">SeperateString</a>(ui-&gt;text-&gt;toPlainText().toStdString(),'\n'));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_box_padding_left_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppAuto.htm">auto</a></b> padding <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPadding();<br/>
&nbsp;&nbsp;padding.left <a href="CppOperatorAssign.htm">=</a> arg1;<br/>
&nbsp;&nbsp;m_item-&gt;SetPadding(padding);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_box_padding_top_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppAuto.htm">auto</a></b> padding <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPadding();<br/>
&nbsp;&nbsp;padding.top <a href="CppOperatorAssign.htm">=</a> arg1;<br/>
&nbsp;&nbsp;m_item-&gt;SetPadding(padding);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_box_padding_right_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppAuto.htm">auto</a></b> padding <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPadding();<br/>
&nbsp;&nbsp;padding.right <a href="CppOperatorAssign.htm">=</a> arg1;<br/>
&nbsp;&nbsp;m_item-&gt;SetPadding(padding);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog::on_box_padding_bottom_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppAuto.htm">auto</a></b> padding <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPadding();<br/>
&nbsp;&nbsp;padding.bottom <a href="CppOperatorAssign.htm">=</a> arg1;<br/>
&nbsp;&nbsp;m_item-&gt;SetPadding(padding);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitempadding.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitempadding.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDEDITRECTITEMPADDING_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDEDITRECTITEMPADDING_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_top <a href="CppOperatorAssign.htm">=</a> 0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_right <a href="CppOperatorAssign.htm">=</a> 0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_bottom <a href="CppOperatorAssign.htm">=</a> 0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_left <a href="CppOperatorAssign.htm">=</a> 0.0<br/>
&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: bottom(<a href="CppAny.htm">any</a>_bottom), left(<a href="CppAny.htm">any</a>_left), right(<a href="CppAny.htm">any</a>_right), top(<a href="CppAny.htm">any</a>_top) {}<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> bottom;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> left;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> right;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> top;<br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding &amp;p) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDEDITRECTITEMPADDING_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitempadding.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitempadding.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>padding.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorEqual.htm">operator==</a></b>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; lhs,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; rhs<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.bottom <a href="CppOperatorEqual.htm">==</a> rhs.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.left <a href="CppOperatorEqual.htm">==</a> rhs.left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.right <a href="CppOperatorEqual.htm">==</a> rhs.right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.top <a href="CppOperatorEqual.htm">==</a> rhs.top<br/>
&nbsp;&nbsp;;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; lhs,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding&amp; rhs<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> !(lhs <a href="CppOperatorEqual.htm">==</a> rhs);<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Padding &amp;p) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '(' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.left <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.top <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ')'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '-'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '(' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.right <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.bottom <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ')'<br/>
&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
