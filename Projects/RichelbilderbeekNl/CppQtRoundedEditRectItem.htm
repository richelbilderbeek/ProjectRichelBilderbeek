<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtRoundedEditRectItem</title>
  <meta name="description" content="C++ QtRoundedEditRectItem"/>
  <meta name="keywords" content="C++ QtRoundedEditRectItem "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.647 at Fri Jun  6 17:13:54 2014
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppQGraphicsItem.htm">QGraphicsItem</a> <a href="CppClass.htm">class</a> that displays a rounded rectangle with editable text.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/CppQtRoundedEditRectItem.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/CppQtRoundedEditRectItem.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitem.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDEDITRECTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDEDITRECTITEM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<br/>
<a href="CppComment.htm">///</a>A <a href="CppQt.htm">Qt</a>RoundedRectTextItem displaying multiple lines of text<br/>
<a href="CppComment.htm">///</a>For a single line of text, use <a href="CppQtRoundedTextRectItem.htm">QtRoundedTextRectItem</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> Padding<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Padding(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_top <a href="CppOperatorAssign.htm">=</a> 0.0, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_right <a href="CppOperatorAssign.htm">=</a> 0.0, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_bottom <a href="CppOperatorAssign.htm">=</a> 0.0, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppAny.htm">any</a>_left <a href="CppOperatorAssign.htm">=</a> 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: bottom(<a href="CppAny.htm">any</a>_bottom), left(<a href="CppAny.htm">any</a>_left), right(<a href="CppAny.htm">any</a>_right), top(<a href="CppAny.htm">any</a>_top) {}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> bottom;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> left;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> right;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> top;<br/>
&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text <a href="CppOperatorAssign.htm">=</a> { "..." },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Padding&amp; padding <a href="CppOperatorAssign.htm">=</a> Padding(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>("monospace",9),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the font by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; GetFont() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_font; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the text on the item<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; GetText() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_text; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the font by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFont(<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding between text and <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetPadding(<b><a href="CppConst.htm">const</a></b> Padding&amp; padding);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the text displayed<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> SetText(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which the text is drawn<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetTextPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called when the user wants to edit the text<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*)&gt; m_signal_item_requests_edit;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The font by which the text is drawn<br/>
&nbsp;&nbsp;<a href="CppQFont.htm">QFont</a> m_font;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding between text and <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;Padding m_padding;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The text displayed<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; m_text;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the padding around text, so the text will be centered<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> Padding m_text_padding;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the text is drawn<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_text_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the unpadded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> a single line<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Note: even <b><a href="CppThis.htm">this</a></b> <a href="CppRectangle.htm">rectangle</a> is enlarged by a pixel in both dimensions, so the text will be drawn in full<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F GetTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the unpadded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> the whole text<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Note: even <b><a href="CppThis.htm">this</a></b> <a href="CppRectangle.htm">rectangle</a> is enlarged by a pixel in both dimensions, so the text will be drawn in full<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F GetTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the padded text <a href="CppRectangle.htm">rectangle</a> <b><a href="CppFor.htm">for</a></b> a single line<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F GetPaddedTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDEDITRECTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedEditRectItem/qtroundededitrectitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedEditRectItem/qtroundededitrectitem.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>, editable rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBrush.htm">QBrush</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;QInputDialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Padding <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::m_text_padding(3.0,0.0,0.0,3.0);<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Padding&amp; padding,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font,<br/>
&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_requests_edit{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_font(font),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_padding(padding),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text( {""} ), <a href="CppComment.htm">//</a>Empty <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;, as m_text must be set by SetText<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text_pen{}<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a white background<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setBrush(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>(255,255,255)));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetFont(font);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusX(4.0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusY(4.0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetText(text);<br/>
<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetPaddedTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetTextRect(s).adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.bottom);<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>MetricsF(m_font).height();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> <a href="CppQFont.htm">QFont</a>MetricsF(m_font).width(s.c_str());<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,2.0,0.0) works fine <b><a href="CppFor.htm">for</a></b> 50<a href="CppOperatorModulus.htm">%</a> of the fonts supplied by <a href="CppWine.htm">Wine</a> under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,3.0,0.0) works fine <b><a href="CppFor.htm">for</a></b> 80<a href="CppOperatorModulus.htm">%</a> of the fonts supplied by <a href="CppWine.htm">Wine</a> under native Lubuntu<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * w, 0.0,w,h).adjusted(0.0,0.0,3.0,0.0);<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,2.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> 90<a href="CppOperatorModulus.htm">%</a> of the fonts under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,3.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> 99<a href="CppOperatorModulus.htm">%</a> of the fonts under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>adjusted(0.0,0.0,4.0,-1.0) works fine <b><a href="CppFor.htm">for</a></b> all the fonts I've tried under native Lubuntu<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * w,0.0,w,h).adjusted(0.0,0.0,2.0,-1.0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * w,0.0,w,h).adjusted(0.0,0.0,2.0,0.0);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::GetTextRect(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQRect.htm">QRect</a>F&gt; v;<br/>
&nbsp;&nbsp;<a href="CppStdTransform.htm">std::transform</a>(text.begin(),text.end(),<a href="CppStdBack_inserter.htm">std::back_inserter</a>(v),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppThis.htm">this</a></b>-&gt;GetPaddedTextRect(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> width_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax_element.htm">std::max_element</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; rhs)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.width() &lt; rhs.width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> width_iter <a href="CppOperatorEqual.htm">==</a> v.end() ? 1.0 : width_iter-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(v.begin(),v.end(),0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppDouble.htm">double</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp; r)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> r.height() <a href="CppOperatorPlus.htm">+</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(-0.5 * width,-0.5 * height, width, height).adjusted(-0.0,-0.0,0.0,0.0);<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-19: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (event-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_F2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_requests_edit(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::paint(painter,option,<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;painter-&gt;setFont(m_font);<br/>
&nbsp;&nbsp;painter-&gt;setPen(m_text_pen);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_text.size());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> line_height <a href="CppOperatorAssign.htm">=</a> rect().height() <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sz);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s <a href="CppOperatorAssign.htm">=</a> m_text[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the padded text <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F padded_rect <a href="CppOperatorAssign.htm">=</a> GetPaddedTextRect(s);<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;padded_rect.translate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rect().top() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;m_text_padding.top <a href="CppOperatorPlus.htm">+</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) * (0.0 <a href="CppOperatorPlus.htm">+</a> padded_rect.height()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F r(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;padded_rect.adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_text_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_text_padding.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.left() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().left());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.left() &lt; <b><a href="CppThis.htm">this</a></b>-&gt;rect().right());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.top()&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().top());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.top()&nbsp;&nbsp;&lt; <b><a href="CppThis.htm">this</a></b>-&gt;rect().bottom());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>painter-&gt;setBrush(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>(255,0,0)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>painter-&gt;drawRect(r);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw text to the unpadded text <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawText(r,s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetFont(<b><a href="CppConst.htm">const</a></b> <a href="CppQFont.htm">QFont</a>&amp; font)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_font <a href="CppOperatorNotEqual.htm">!=</a> font)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_font <a href="CppOperatorAssign.htm">=</a> font;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_request_scene_update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetPadding(<b><a href="CppConst.htm">const</a></b> Padding&amp; padding)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( padding.bottom <a href="CppOperatorNotEqual.htm">!=</a> m_padding.bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> padding.left&nbsp;&nbsp; <a href="CppOperatorNotEqual.htm">!=</a> m_padding.left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> padding.right&nbsp;&nbsp;<a href="CppOperatorNotEqual.htm">!=</a> m_padding.right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> padding.top&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorNotEqual.htm">!=</a> m_padding.top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_padding <a href="CppOperatorAssign.htm">=</a> padding;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F text_rect <a href="CppOperatorAssign.htm">=</a> GetTextRect(m_text);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRoundedRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_padding.bottom),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_request_scene_update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetText(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; text)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text <a href="CppOperatorNotEqual.htm">!=</a> m_text)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F text_rect <a href="CppOperatorAssign.htm">=</a> GetTextRect(m_text);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRoundedRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_rect.adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_padding.left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>m_padding.top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_padding.right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_padding.bottom),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_request_scene_update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::SetTextPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_text_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
