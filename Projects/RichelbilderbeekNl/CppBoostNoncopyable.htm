<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>boost::noncopyable</title>
  <meta name="description" content="C++ boost::noncopyable"/>
  <meta name="keywords" content="C++ boost::noncopyable boost noncopyable non copy copyable Boost code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppNoncopyable.htm">boost::noncopyable</a></h1>
<p>&nbsp;</p>
<p><a href="CppNoncopyable.htm">boost::noncopyable</a> is a <a href="CppBoost.htm">Boost</a> <a href="CppBaseClass.htm">base class</a>. If any <a href="CppClass.htm">class</a> <a href="CppDerivedClass.htm">derives</a> from <a href="CppNoncopyable.htm">boost::noncopyable</a>, this <a href="CppClass.htm">class</a> cannot be copied anymore.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/noncopyable.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Test : <b><a href="CppPublic.htm">public</a></b> <a href="CppNoncopyable.htm">boost::noncopyable</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;Test t1;<br/>
&nbsp;&nbsp;Test t2;<br/>
&nbsp;&nbsp;t2 <a href="CppOperatorAssign.htm">=</a> t1; <a href="CppComment.htm">//</a>Not allowed by <a href="CppNoncopyable.htm">boost::noncopyable</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Testing <a href="CppNoncopyable.htm">boost::noncopyable</a></h2>
<p>&nbsp;</p>
<p>The code below shows a <a href="Cpp98.htm">C++98</a> and <a href="Cpp11.htm">C++11</a> <a href="CppDefinition.htm">definition</a>
of <a href="CppNoncopyable.htm">boost::noncopyable</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppNoncopyable.zip">Download the Qt Creator project 'CppNoncopyable' (zip)</li></a>
</ul>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppStruct.htm">struct</a></b> NoncopyableCpp98<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NoncopyableCpp98()&nbsp;&nbsp;{}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;~NoncopyableCpp98() {}<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NoncopyableCpp98(<b><a href="CppConst.htm">const</a></b> NoncopyableCpp98&amp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> NoncopyableCpp98&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> NoncopyableCpp98&amp;);<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> NoncopyableCpp0x<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NoncopyableCpp0x()&nbsp;&nbsp;{}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;~NoncopyableCpp0x() {}<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NoncopyableCpp0x(<b><a href="CppConst.htm">const</a></b> NoncopyableCpp0x&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> NoncopyableCpp0x&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> NoncopyableCpp0x&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> TestCpp98 : <b><a href="CppPublic.htm">public</a></b> NoncopyableCpp98<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> TestCpp0x : <b><a href="CppPublic.htm">public</a></b> NoncopyableCpp0x<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x;<br/>
};<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppNoncopyable.htm">noncopyable</a>.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Test<a href="CppBoost.htm">Boost</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppNoncopyable.htm">boost::noncopyable</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>TestCpp98 t1; TestCpp98 t2; t2 <a href="CppOperatorAssign.htm">=</a> t1; <a href="CppComment.htm">//</a>Not allowed by NoncopyableCpp98<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>TestCpp0x t1; TestCpp0x t2; t2 <a href="CppOperatorAssign.htm">=</a> t1; <a href="CppComment.htm">//</a>Not allowed by NoncopyableCpp0x<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test<a href="CppBoost.htm">Boost</a> t1; Test<a href="CppBoost.htm">Boost</a> t2; t2 <a href="CppOperatorAssign.htm">=</a> t1; <a href="CppComment.htm">//</a>Not allowed by <a href="CppNoncopyable.htm">boost::noncopyable</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
