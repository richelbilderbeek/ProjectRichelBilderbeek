<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>thread</title>
  <meta name="description" content="C++ thread"/>
  <meta name="keywords" content="C++ C++0x thread threading multithreading multi-threading multithreaded multi-threaded concurrent concurrency parallel code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppThread.htm">thread</a></h1>
<p>&nbsp;</p>
<p>A <a href="CppThread.htm">thread</a> is the smallest unit of processing that can be scheduled by an <a href="CppOs.htm">operating system</a>' [1].</p>
<p>&nbsp;</p>
<p><a href="CppThread.htm">std::thread</a> is the <a href="Cpp11.htm">C++11</a> <a href="CppThread.htm">thread</a> <a href="CppClass.htm">class</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3><a href="CppThread.htm">thread</a> (general) design</h3>
<p>&nbsp;</p>
<p>As a personal note, I will put my <a href="CppThread.htm">thread</a> design questions here. Feel free to <a href="Contact.htm">contact me</a> 
if you can provide answers with <a href="CppReferences.htm">references</a>.</p>
<ul>
  <li>To make a class thread-safe, is it enough to add a mutex at the start of each method?</li>
  <li>In a thread-safe-to-be class, which return types can a methods have? Can it be a pointer, const pointer, shared_ptr, weak_ptr, reference, std::vector, std::vector reference, etc? And what about std::atomic?</li>
  <li>In a thread-safe-to-be class, which methods (depending on arguments, return type, work done inside of the method) can be without mutexes?</li>
  <li>When adding a mutex to a class method, I tend to suggest always to use std::recursive_mutex, instead of the std::mutex, because std::recursive_mutex is as safe as a std::mutex, but more flexible. When is std::mutex to be preferred?</li>
  <li>When adding a mutex to a class method, I tend to refrain from using timed mutex, as I feel these are sloppy. When would using timed mutexes be recommended?</li>
  <li>When benchmarking a class for thread-safety, is it enough to create simply create multiple threads reading and writing to all methods of the class? That, if this works, the class can be called thread-safe?</li>
  <li>When having benchmarking a class for thread-safety in the way above, when to use tools like helgrind?</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.corensic.com/Learn/Resources/ConcurrencyTutorialPartOne.aspx">Corensic.com tutorial about concurrency</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="http://en.wikipedia.org/wiki/Thread_(computer_science)">Wikipedia page about threads</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

