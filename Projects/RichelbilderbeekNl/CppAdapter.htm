<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>adapter</title>
  <meta name="description" content="C++ Adapter"/>
  <meta name="keywords" content="C++ Adapter code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAdapter.htm">Adapter</a></h1>
<p>&nbsp;</p>
<p>An <a href="CppAdapter.htm">adapter</a> is a type of <a href="CppFunctor.htm">functor</a> that allows a method or a pointer to a function to be used as an argument to <a href="CppAlgorithm.htm">algorithms</a> [1].</p>
<p>&nbsp;</p>
<p>Most <a href="CppAdapter.htm">adapters</a> can be found in the <a href="CppHeaderFile.htm">header file</a> <a href="CppFunctionalH.htm">functional</a>.</p>
<p>&nbsp;</p>
<p>There are four types of <a href="CppAdapter.htm">adapters</a> [1]:</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppBinder.htm">Binder</a>: allows a two-argument function object to be used as a single-argument function by binding one argument to a value</li>
  <li>Member function adapter: allows a member function to be used as an argument to <a href="CppAlgorithm.htm">algorithms</a></li>
  <li>Pointer to function adapter: allows a pointer-to-function to be used as an argument to <a href="CppAlgorithm.htm">algorithms</a></li>
  <li><a href="CppNegater.htm">Negater</a>: allows to express the opposite of a <a href="CppPredicate.htm">predicate</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdapter.htm">STL and Boost adapters</a></h2>
<p>&nbsp;</p>
<p>One can distinguish <a href="CppStl.htm">STL</a> and <a href="CppBoost.htm">Boost</a> adapters by their <a href="CppNamespace.htm">namespace</a>: All <a href="CppStl.htm">STL</a> objects are in <a href="CppNamespace.htm">namespace</a> std. All <a href="CppBoost.htm">Boost</a> objects are in <a href="CppNamespace.htm">namespace</a> <a href="CppBoost.htm">boost</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppBinder.htm">Binders</a>
    <ul>
      <li><a href="CppBind1st.htm">std::bind1st</a></li>
      <li><a href="CppBind2nd.htm">std::bind2nd</a></li>
      <li><a href="CppBind.htm">boost::bind</a></li>
    </ul>
  </li>
  <li>Member function adapters
    <ul>
      <li><a href="CppMem_fun.htm">std::mem_fun</a></li>
      <li><a href="CppMem_fun_ref.htm">std::mem_fun_ref</a></li>
      <li><a href="CppMem_fn.htm">boost::mem_fn</a></li>
    </ul>
  </li>
  <li>Pointer to function adapter
    <ul>
    <li><a href="CppPtr_fun.htm">std::ptr_fun</a></li>
    </ul>
  </li>
  <li><a href="CppNegater.htm">Negaters</a>
    <ul>
    <li><a href="CppNot1.htm">std::not1</a></li>
    <li><a href="CppNot2.htm">std::not2</a></li>
    </ul>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). 1997. ISBN: 0-201-88954-4. Chapter 18.4.4: 'A member function adapter allows a member function to be used as an argument to algorithms. A pointer to function adapter allows a pointer to a function to be used as an argument to algorithms.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
