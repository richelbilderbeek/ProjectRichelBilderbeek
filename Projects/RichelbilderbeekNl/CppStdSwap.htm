<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::swap</title>
  <meta name="description" content="C++ std::swap"/>
  <meta name="keywords" content="C++ std::swap swap"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppSwap.htm">std::swap</a></h1>
<p>&nbsp;</p>
<p><a href="CppAlgorithm.htm">Algorithm</a> to swap two values of the same <a href="CppDataType.htm">data type</a>.</p>
<p>&nbsp;</p>
<p>The <a href="CppDefinition.htm">definition</a> of <a href="CppSwap.htm">std::swap</a> is in <a href="CppAlgorithmH.htm">algorithm.h</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> a = 3;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> b = 7;<br/>
&nbsp;&nbsp;<a href="CppSwap.htm">std::swap</a>(a,b);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a == 7);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(b == 3);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>Consider specializing std::swap for your own <a href="CppClass.htm">classes</a> when you know a more efficient way to exhange their values by calling <a href="CppOperatorAssign.htm">operator=</a> three times [1].</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Example <a href="CppDefinition.htm">definition</a></h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppInline.htm">inline</a></b> <b><a href="CppVoid.htm">void</a></b> swap(T&amp; a, T&amp; b)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> T tmp = a;<br/>
&nbsp;&nbsp;a = b;<br/>
&nbsp;&nbsp;b = tmp;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>XOR swap</h2>
<p>&nbsp;</p>
<p>The XOR swap is another way to swap two values. Prefer using <a href="CppSwap.htm">std::swap</a> [2].</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppVoid.htm">void</a></b> XorSwap (<b><a href="CppInt.htm">int</a></b> *x, <b><a href="CppInt.htm">int</a></b> *y) <br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x <a href="CppOperatorNotEqual.htm">!=</a> y) <br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*x <a href="CppOperatorBitwiseXorAssign.htm">^=</a> *y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*y <a href="CppOperatorBitwiseXorAssign.htm">^=</a> *x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*x <a href="CppOperatorBitwiseXorAssign.htm">^=</a> *y;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.cplusplus.com/reference/algorithm/swap">Cplusplus.com page about std::swap</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++ style. 2005. ISBN: 0-201-76042-8. Item 6 guideline: 'consider specializing std::swap for your own types when objects of your type have a way to exhange their values more efficiently than via brute-force assignment'.</li>
  <li><a href="http://big-bad-al.livejournal.com/98093.html">big_bad_al: How to swap two integers in C++</a>: 'If you use the xor trick to swap integers, STOP IT!'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
