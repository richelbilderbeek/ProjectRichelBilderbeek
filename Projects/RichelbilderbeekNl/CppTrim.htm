<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Trim</title>
  <meta name="description" content="C++ Trim"/>
  <meta name="keywords" content="C++ Trim remove whitespace spaces tabs newline code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppTrim.htm">Trim</a></h1>
<p>&nbsp;</p>
<p><a href="CppTrim.htm">Trim</a> is a <a href="CppString.htm">std::string</a> <a href="CppCodeSnippets.htm">code snippet</a>
to remove leading and trailing whitespace from a <a href="CppString.htm">std::string</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><img src="PicStl.png" alt="Stl"/> <a href="CppTrim.htm">Trim</a> using the <a href="CppStl.htm">STL</a> only</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/Trim leading and trailing whitespace<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppTrim.htm">Trim</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppTrim.htm">Trim</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> s.size();<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> posBegin <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>1;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> posEnd <a href="CppOperatorAssign.htm">=</a> size-1;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>size; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i]<a href="CppOperatorNotEqual.htm">!=</a>' ' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i]<a href="CppOperatorNotEqual.htm">!=</a>'\n' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i]<a href="CppOperatorNotEqual.htm">!=</a>'\t')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posBegin <a href="CppOperatorAssign.htm">=</a> i; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (posBegin <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b> "";<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=size-1; i<a href="CppOperatorNotEqual.htm">!=</a>-1; <a href="CppOperatorDecrement.htm">--</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i]<a href="CppOperatorNotEqual.htm">!=</a>' ' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i]<a href="CppOperatorNotEqual.htm">!=</a>'\n' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i]<a href="CppOperatorNotEqual.htm">!=</a>'\t')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posEnd <a href="CppOperatorAssign.htm">=</a> i; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s.substr(posBegin,posEnd-posBegin+1);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><img src="PicBoost.png" alt="Boost"/> <a href="CppTrim.htm">Trim</a> using <a href="CppBoost.htm">Boost</a></h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string/trim.hpp&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/Trim leading and trailing whitespace<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppTrim.htm">Trim</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppTrim.htm">Trim</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim_copy(s);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
