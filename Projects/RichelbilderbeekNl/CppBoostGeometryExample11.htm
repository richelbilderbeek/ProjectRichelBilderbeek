<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>BoostGeometryExample11</title>
  <meta name="description" content="C++ BoostGeometryExample11"/>
  <meta name="keywords" content="C++ BoostGeometryExample11 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostGeometryExample11.htm">BoostGeometryExample11</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug  5 12:00:54 2014
 -->
<p><img src="PicBoost.png" alt="Boost"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppBoostGeometryExample11.htm">Boost.Geometry example 11: Create a polygon from two intersecting polygons</a>
  is a <a href="CppBoostGeometry.htm">Boost.Geometry</a> <a href="CppExample.htm">example</a>.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.2.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppBoostGeometryExample11/CppBoostGeometryExample11.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample11/CppBoostGeometryExample11.pro" border = "1"><tr><td><code>
exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
}<br/>
!exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;QT += core<br/>
&nbsp;&nbsp;QT += gui<br/>
&nbsp;&nbsp;greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
&nbsp;&nbsp;<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
&nbsp;&nbsp;unix {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
exists(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
}<br/>
!exists(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri) {<br/>
&nbsp;&nbsp;win32 {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_55_0<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppBoostGeometryExample11/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample11/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/<a href="CppAlgorithm.htm">algorithm</a>s/intersection.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/polygon.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/io/wkt/read.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/io/wkt/write.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/io/wkt/wkt.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp; *---*<br/>
&nbsp;&nbsp; |&nbsp;&nbsp; |&nbsp;&nbsp; |<br/>
&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a> *-+-* |<br/>
&nbsp;&nbsp; | | | | |<br/>
&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a> | *-+-*<br/>
&nbsp;&nbsp; | |&nbsp;&nbsp; |<br/>
&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a> *---*<br/>
&nbsp;&nbsp; |<br/>
&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a>-+-+-+-+-+<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Coordinat2D;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; Polygon;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Polygon&gt; Polygons;<br/>
<br/>
&nbsp;&nbsp;Polygon polygon_a;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::read_wkt(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"POLYGON((1.0 1.0 , 1.0 3.0 , 3.0 3.0 , 3.0 1.0))",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;polygon_a<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::correct(polygon_a);<br/>
<br/>
&nbsp;&nbsp;Polygon polygon_b;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::read_wkt(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"POLYGON((2.0 2.0 , 2.0 4.0 , 4.0 4.0 , 4.0 2.0))",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;polygon_b<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::correct(polygon_b);<br/>
<br/>
&nbsp;&nbsp;Polygons polygons;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::intersection(polygon_a,polygon_b,polygons);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(polygons.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> polygon_found <a href="CppOperatorAssign.htm">=</a> polygons[0];<br/>
<br/>
&nbsp;&nbsp;Polygon polygon_expected;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::read_wkt(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"POLYGON((2.0 2.0, 2.0 3.0, 3.0 3.0, 3.0 2.0))",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;polygon_expected<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::correct(polygon_expected);<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Found:" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "As WKT: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::wkt&lt;Polygon&gt;(polygon_found) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "#<a href="CppPointer.htm">point</a>s: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> polygon_found.outer().size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppAuto.htm">auto</a></b> <a href="CppPointer.htm">point</a>: polygon_found.outer())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '(' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;0&gt;(<a href="CppPointer.htm">point</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;1&gt;(<a href="CppPointer.htm">point</a>) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ')'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Expected:" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "As WKT: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::wkt&lt;Polygon&gt;(polygon_expected) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "#<a href="CppPointer.htm">point</a>s: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> polygon_expected.outer().size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppAuto.htm">auto</a></b> <a href="CppPointer.htm">point</a>: polygon_expected.outer())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '(' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;0&gt;(<a href="CppPointer.htm">point</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get&lt;1&gt;(<a href="CppPointer.htm">point</a>) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ')'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(polygon_found.outer().size() <a href="CppOperatorEqual.htm">==</a> polygon_expected.outer().size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::equals(polygon_found,polygon_expected));<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output:<br/>
<br/>
Found:<br/>
As WKT: POLYGON((2 3,3 3,3 2,2 2,2 3))<br/>
#<a href="CppPointer.htm">point</a>s: 5<br/>
(2,3)<br/>
(3,3)<br/>
(3,2)<br/>
(2,2)<br/>
(2,3)<br/>
Expected:<br/>
As WKT: POLYGON((2 2,2 3,3 3,3 2,2 2))<br/>
#<a href="CppPointer.htm">point</a>s: 5<br/>
(2,2)<br/>
(2,3)<br/>
(3,3)<br/>
(3,2)<br/>
(2,2)<br/>
Press &lt;RETURN&gt; to close <b><a href="CppThis.htm">this</a></b> window...<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
