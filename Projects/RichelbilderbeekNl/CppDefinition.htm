<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>definition</title>
  <meta name="description" content="C++ definition"/>
  <meta name="keywords" content="C++ definition"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppDefinition.htm">definition</a></h1>
<p>&nbsp;</p>
<p>
  'A <a href="CppDefinition.htm">definition</a> of a <a href="CppFunction.htm">function</a>
  tells the <a href="CppCompiler.htm">compiler</a> how the <a href="CppFunction.htm">function</a>
  works. It shows what instructions are executed for the <a href="CppFunction.htm">function</a>.' [3]
</p>
<p>&nbsp;</p>
<p>
  'A <a href="CppDefinition.htm">definition</a> provides a unique description of an entity (for example, 
  <a href="CppDataType.htm">type</a>, <a href="CppInstance.htm">instance</a>, 
  <a href="CppFunction.htm">function</a>) within a program' [1].
</p>
<p>&nbsp;</p>
<p>There are two types of <a href="CppDefinition.htm">definitions</a>:</p>
<ol>
  <li>A <a href="CppVariable.htm">variable</a> <a href="CppDefinition.htm">definition</a> is a <a href="CppVariable.htm">variable</a> <a href="CppDeclaration.htm">declaration</a> with specifying an initial value.</li>
  <li>A <a href="CppFunction.htm">function</a> <a href="CppDefinition.htm">definition</a> is a <a href="CppFunction.htm">function</a> <a href="CppDeclaration.htm">declaration</a> with specifying the <a href="CppFunction.htm">function</a> body.</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppVariable.htm">Variable</a> <a href="CppDefinition.htm">definition</a></h2>
<p>&nbsp;</p>
<p>A <a href="CppVariable.htm">variable</a> <a href="CppDefinition.htm">definition</a> is a <a href="CppVariable.htm">variable</a> <a href="CppDeclaration.htm">declaration</a> with specifying an initial value.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Declaration of 'declared_value', initial value undefined <br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> declared_value; <br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefinition.htm">Definition</a> of variable 'value'<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> value <a href="CppOperatorAssign.htm">=</a> 3;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>Postpone <a href="CppVariable.htm">variable</a> <a href="CppDefinition.htm">definitions</a> as long as possible [2].</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppFunction.htm">Function</a> <a href="CppDefinition.htm">definition</a></h2>
<p>&nbsp;</p>
<p>A <a href="CppFunction.htm">function</a> <a href="CppDefinition.htm">definition</a> is a <a href="CppFunction.htm">function</a> <a href="CppDeclaration.htm">declaration</a> with specifying the <a href="CppFunction.htm">function</a> body.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>A function declaration<br/>
<b><a href="CppDouble.htm">double</a></b> calculateZogsmurk(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; myVector)<br/>
<br/>
<a href="CppComment.htm">//</a>A function <a href="CppDefinition.htm">definition</a><br/>
<b><a href="CppDouble.htm">double</a></b> calculateSum(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; myVector)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> sum <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> myVector.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>size; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sum<a href="CppOperatorPlusAssign.htm">+=</a>myVector[i];<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> sum;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Chapter 1.1.1</li>
  <li><!--  2 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 26: 'Postpone variable definitions as long as possible'.</li>
  <li><!--  3 -->Joint Strike Fighter Air Vehicle C++ Coding Standards for the System Development and Demonstration Program. Document Number 2RDU00001 Rev C. December 2005. 4.3.15: 'A definition of a function tells the compiler how the function works. It shows what instructions are executed for the function.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
