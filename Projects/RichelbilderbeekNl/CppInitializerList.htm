<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>initializer list</title>
  <meta name="description" content="C++ C++0x initializer list"/>
  <meta name="keywords" content="C++ C++0x initializer list code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppInitializerList.htm">initializer-list</a></h1>
<p>&nbsp;</p>
<p>An <a href="CppInitializerList.htm">initializer-list</a> is on option that can be used, depending
on the <a href="CppStandard.htm">standard</a> used:</p>
<ul>
  <li>
    <img src="PicCpp98.png" alt="C++98"/> 
    <a href="CppInitializerList.htm">initializer list</a> in the <a href="Cpp98.htm">C++98</a> <a href="CppStandard.htm">standard</a>
  </li>
  <li>
    <img src="PicCpp11.png" alt="C++11"/> 
    <a href="CppInitializerList.htm">initializer list</a> in the <a href="Cpp11.htm">C++11</a> <a href="CppStandard.htm">standard</a>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/> 
  <a href="CppInitializerList.htm">initializer list</a> in the <a href="Cpp98.htm">C++98</a> <a href="CppStandard.htm">standard</a>
</h2>
<p>&nbsp;</p>
<p><a href="CppInitializerList.htm">initializer list</a> is not supported in <a href="Cpp98.htm">C++98</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v <a href="CppOperatorAssign.htm">=</a> {1,2,3,4,5}; <a href="CppComment.htm">//</a>Fails in <a href="Cpp98.htm">C++98</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p><a href="CppCompiler.htm">Compiler</a> output:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
/MyFolder/main.cpp:5: error: in C++98 'v' must be initialized by constructor, not by '{...}'<br/>
/MyFolder/main.cpp:5: warning: extended initializer lists only available with -std=c++0x or -std=gnu++0x<br/>
/MyFolder/main.cpp:5: error: deducing from brace-enclosed initializer list requires #include &lt;initializer_list&gt;<br/>
/MyFolder/main.cpp:5: error: no matching function for call to 'std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector(&lt;brace-enclosed initializer list&gt;)'<br/>
/usr/include/c++/4.4/bits/stl_vector.h:241: candidates are: std::vector&lt;_Tp, _Alloc&gt;::vector(const std::vector&lt;_Tp, _Alloc&gt;&amp;) [with _Tp = int, _Alloc = std::allocator&lt;int&gt;]<br/>
/usr/include/c++/4.4/bits/stl_vector.h:207:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; std::vector&lt;_Tp, _Alloc&gt;::vector() [with _Tp = int, _Alloc = std::allocator&lt;int&gt;]<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp11.png" alt="C++11"/> 
  <a href="CppInitializerList.htm">initializer list</a> in the <a href="Cpp11.htm">C++11</a> <a href="CppStandard.htm">standard</a>
</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppInitializerList.zip">Download the Qt Creator project 'CppInitializerList' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>An <a href="CppInitializerList.htm">initializer list</a> is an additional initialization option:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v <a href="CppOperatorAssign.htm">=</a> {1,2,3,4,5};<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    If a <a href="CppClass.htm">class</a> is a <a href="CppContainer.htm">container</a>, 
    give it an <a href="CppInitializerList.htm">initializer-list</a> 
    <a href="CppConstructor.htm">constructor</a> [1]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 17.7. Advice. page 525: '[8] If a class is a container, give it an initializer-list constructor'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
