<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>SameXandY functor</title>
  <meta name="description" content="C++ SameXandY functor"/>
  <meta name="keywords" content="C++ SameXandY functor"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppFunctorSameXandY.htm">SameXandY functor</a></h1>
<p>&nbsp;</p>
<p>A functor that sees if a certain class has equal X and Y values.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="fileIkm9aj.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Player<br/>
{<br/>
&nbsp;&nbsp;Player(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppAny.htm">any</a>X, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppAny.htm">any</a>Y) : x(<a href="CppAny.htm">any</a>X), y(<a href="CppAny.htm">any</a>Y) {}<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x,y;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>And more...<br/>
};<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppFunctorSameXandY.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> SameXandY : <b><a href="CppPublic.htm">public</a></b> <a href="CppUnary_function.htm">std::unary_function</a>&lt;T,<b><a href="CppBool.htm">bool</a></b>&gt;<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> SameXandY(<b><a href="CppConst.htm">const</a></b> T&amp; position) : mPosition(position) {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorFunctionCall.htm">operator()</a></b>(<b><a href="CppConst.htm">const</a></b> T&amp; position) <b><a href="CppConst.htm">const</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> position.x <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> mPosition.x <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> position.y <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> mPosition.y;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> T mPosition;<br/>
};<br/>
<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;Player&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>10; <a href="CppOperatorPlus.htm">+</a>+i) v.push_back(Player(i,i));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( <a href="CppFind_if.htm">std::find_if</a>(v.begin(), v.end(), SameXandY&lt;Player&gt;(Player(3,5))) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> v.end());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( <a href="CppFind_if.htm">std::find_if</a>(v.begin(), v.end(), SameXandY&lt;Player&gt;(Player(5,5))) <a href="CppOperatorNotEqual.htm">!=</a> v.end());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
