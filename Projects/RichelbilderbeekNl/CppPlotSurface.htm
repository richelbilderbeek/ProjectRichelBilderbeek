<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>PlotSurface</title>
  <meta name="description" content="C++ PlotSurface"/>
  <meta name="keywords" content="C++ PlotSurface Plot Surface"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppPlotSurface.htm">PlotSurface</a></h1>
<p>&nbsp;</p>
<p><a href="CppAsciiArt.htm">ASCII art</a> <a href="CppCodeSnippets.htm">code snippet</a> that displays a 2D (y-x-ordered) 
<a href="CppVector.htm">std::vector</a> of <a href="CppDouble.htm">double</a> as a surface chart using <a href="CppAsciiArt.htm">ASCII art</a> characters (see an example below the code).</p>
<p>&nbsp;</p>
<p><a href="CppPlotSurface.htm">PlotSurface</a> uses <a href="CppGetAsciiArtGradient.htm">GetAsciiArtGradient</a>, <a href="CppMinElement.htm">MinElement</a> and <a href="CppMaxElement.htm">MaxElement</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="s2l0.1v.cpp" border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>The 2D <a href="CppVector.htm">std::vector</a> must be y-x-ordered<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppPlotSurface.htm<br/>
<b><a href="CppVoid.htm">void</a></b> PlotSurface(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; &gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.empty() <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Surface must have a size");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[0].size() &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Surface must have a two-dimensional size");<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the ASCII art gradient and its size<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppChar.htm">char</a></b>&gt; asciiArtGradient <a href="CppOperatorAssign.htm">=</a> GetAsciiArtGradient();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nAsciiArtGradientChars <a href="CppOperatorAssign.htm">=</a> asciiArtGradient.size();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Minimum and maximum are not given, so these need to be calculated<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minVal <a href="CppOperatorAssign.htm">=</a> <a href="CppMinElement.htm">MinElement</a>(v);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> maxVal <a href="CppOperatorAssign.htm">=</a> <a href="CppMaxElement.htm">MaxElement</a>(v);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(minVal <a href="CppOperatorNotEqual.htm">!=</a> maxVal);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the pixels<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppIterator.htm">Iterator</a> through all rows<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; &gt;::const_iterator rowEnd <a href="CppOperatorAssign.htm">=</a> v.end();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; &gt;::const_iterator row <a href="CppOperatorAssign.htm">=</a> v.begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;row <a href="CppOperatorNotEqual.htm">!=</a> rowEnd;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>+row)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppIterator.htm">Iterate</a> through each row's collumns<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;::const_iterator colEnd <a href="CppOperatorAssign.htm">=</a> row-&gt;end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;::const_iterator col <a href="CppOperatorAssign.htm">=</a> row-&gt;begin();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col <a href="CppOperatorNotEqual.htm">!=</a> colEnd;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>+col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Scale the found grey value to an ASCII art <a href="CppChar.htm">character</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxVal <a href="CppOperatorMinus.htm">-</a> minVal <a href="CppOperatorNotEqual.htm">!=</a> 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> greyValue<a href="CppDouble.htm">Double</a> <a href="CppOperatorAssign.htm">=</a> ( (*col) <a href="CppOperatorMinus.htm">-</a> minVal) <a href="CppOperatorDivide.htm">/</a> (maxVal <a href="CppOperatorMinus.htm">-</a> minVal);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(greyValue<a href="CppDouble.htm">Double</a> <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> greyValue<a href="CppDouble.htm">Double</a> <a href="CppOperatorLessEqual.htm">&lt;=</a> 1.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> greyValueInt <a href="CppOperatorAssign.htm">=</a> greyValue<a href="CppDouble.htm">Double</a> * nAsciiArtGradientChars;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> greyValue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ( greyValueInt &lt; 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? 0 : (greyValueInt &gt; nAsciiArtGradientChars <a href="CppOperatorMinus.htm">-</a> 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? nAsciiArtGradientChars <a href="CppOperatorMinus.htm">-</a> 1: greyValueInt) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(greyValue <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> greyValue &lt; nAsciiArtGradientChars);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> asciiArtGradient[greyValue];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Example</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="s2l0.21.txt" border = "1"><tr><td><code>
`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;``.--://+oossyyyyyyyyssoo+//:--.``&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;``.--:/++oossyyyyyyyysso<br/>
``&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ``..--://++osssyyyyyyyssso++/::--.```&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ``..--://++osssyyyyyyyssoo<br/>
``````````..--::/++oosssyyyyyysssoo++/::--..``````````..--::/++oosssyyyyyysssoo<br/>
..`````...---://++oossssyyyyyssssoo++//:---...`````...---://++oosssyyyyyyssssoo<br/>
-......----:://++oossssyyyyyyssssoo++//::----......----:://++oossssyyyyyyssssoo<br/>
-------:::://+++oossssyyyyyyyssssoo+++//::::-------:::://+++oosssyyyyyyyyssssoo<br/>
::::::////+++ooossssyyyyyyyyyyssssoo+++/////::::::////+++ooossssyyyyyyyyyysssso<br/>
/////+++++oooossssyyyyyyyyyyyyyssssoooo+++++/////+++++oooossssyyyyyyyyyyyyyssss<br/>
oooooooooosssssyyyyyyyyhhyyyyyyyysssssoooooooooooooooosssssyyyyyyyyhhyyyyyyyyss<br/>
sssssssssssyyyyyyyyhhhhhhhhhyyyyyyyysssssssssssssssssssyyyyyyyyhhhhhhhhhyyyyyyy<br/>
yyyyyyyyyyyyyhhhhhhhhhhhhhhhhhhhhyyyyyyyyyyyyyyyyyyyyyyyyhhhhhhhhhhhhhhhhhhhhyy<br/>
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh<br/>
dddddddddddhhhhhhhhhhhhhhhhhhhhhhddddddddddddddddddddddhhhhhhhhhhhhhhhhhhhhhhdd<br/>
mmmmmmddddddddhhhhhhhhhhhhhhhddddddddmmmmmmmmmmmmmddddddddhhhhhhhhhhhhhhhdddddd<br/>
NNNmmmmmmdddddhhhhhhhhhhhhhhdddddmmmmmmNNNNNNNNmmmmmmdddddhhhhhhhhhhhhhhdddddmm<br/>
NNNNNmmmmddddhhhhhhyyyhhhhhhddddmmmmNNNNNNNNNNNNNmmmmddddhhhhhhyyyhhhhhhddddmmm<br/>
MMNNNNmmmdddhhhyyyyyyyyyyhhhdddmmmNNNNMMMMMMMMNNNNmmmdddhhhyyyyyyyyyyhhhdddmmmN<br/>
MMMNNNmmdddhhyyyyysssyyyyyhhdddmmNNNMMMMMMMMMMMNNNmmddhhhyyyyysssyyyyyhhdddmmNN<br/>
MMNNNmmddhhyyyssssssssssyyyhhddmmNNNMMMMMMMMMMNNNmmddhhyyyssssssssssyyyhhddmmNN<br/>
MMNNmmddhhyysssooooooosssyyhhddmmNNMMMMMMMMMMMNNmmddhhyysssooooooosssyyhhddmmNN<br/>
MNNmmddhyyssooo++++++ooossyyhddmmNNMMMMMMMMMMNNmmddhyyssooo++++++ooossyyhddmmNN<br/>
NNmmdhhyssoo++///////++oossyhhdmmNNMMMMMMMMMNNmmdhhyssoo++///////++oossyhhdmmNN<br/>
Nmddhyysoo++//:::::://++oosyyhddmNNNMMMMMMNNNmddhyysoo++//:::::://++oosyyhddmNN<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
