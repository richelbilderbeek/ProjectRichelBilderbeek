<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Brainweaver</title>
  <meta name="description" content="C++ Brainweaver"/>
  <meta name="keywords" content="C++ Brainweaver "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ProjectBrainweaver.htm">Brainweaver</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:39:36 2014
 -->
<p><a href="ProjectBrainweaver.htm">Brainweaver</a> (formerly: <a href="ProjectVanDenBogaart.htm">Project Van Den Bogaart</a>) is an open source concept mapping program with two additions:</p>
<ol>
  <li>the program not only supports the drawing of concept maps but (prior to this) also the gathering and sorting of concepts and examples</li>
  <li>
    the program enables the assessment of concept maps maps: the program calculates several parameters connected to 
    concept maps, partly based on the human evaluation of these maps
  </li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="ProjectBrainweaver_0_33.png">View a screenshot of 'Brainweaver' (version 0.33)(png)</a></li>
  <li><img src="PicWine.png" alt="Wine"/> <a href="ProjectBrainweaver_0_28Wine.png">View a screenshot of 'Brainweaver' (version 0.28)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ProjectBrainweaverDesktopExe.zip">Download the 'Brainweaver' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/> <a href="ProjectBrainweaverExe_0_43.zip">Download the 'Brainweaver' windows executable (version 0.43)(zip)</a></li>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="ProjectBrainweaver20130725.mp4">View Brainweaver being tested by libcvautomation (mp4)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Older downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="ProjectBrainweaver_0_28.png">View a screenshot of 'Brainweaver' (version 0.28)(png)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="https://www.youtube.com/watch?v=jQWUgWDvvPY">YouTube video about the idea behind Brainweaver (with screenshots)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverAssessor.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessor.pro" border = "1"><tr><td><code>
#Don't enable Effective C++ warnings when using <a href="CppQwt.htm">Qwt</a><br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += printsupport<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>Desktop.pri)<br/>
<br/>
include(<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>_assessor.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverDeveloper.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloper.pro" border = "1"><tr><td><code>
#<a href="CppQmakeDefines.htm">DEFINES</a> += BRAINWEAVER_MOVE_ITEMS_ON_COLLISION<br/>
<br/>
#Don't enable Effective C++ warnings when using <a href="CppQwt.htm">Qwt</a><br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppApfloat.htm">Apfloat</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += printsupport<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppContainer.htm">CppContainer</a>/<a href="CppContainer.htm">CppContainer</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCounter.htm">CppCounter</a>/<a href="CppCounter.htm">CppCounter</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppGrabber/CppGrabber.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppQtImage/CppQtImage.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppRibiRandom/CppRibiRandom.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
#include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>Desktop.pri)<br/>
#include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>Desktop.pri)<br/>
<br/>
#Desktop<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>.pri)<br/>
include(<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>_developer.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverStudent.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudent.pro" border = "1"><tr><td><code>
#Don't enable Effective C++ warnings when using <a href="CppQwt.htm">Qwt</a><br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += printsupport<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>/<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>Desktop.pri)<br/>
<br/>
include(<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>_student.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a><br/>
<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbclusterfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfile.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfilefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbhelper.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/test_pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbregex.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbcluster.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbclusterfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfilefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbhelper.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbregex.h<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/<a href="ProjectBrainweaver.htm">Brainweaver</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdb<a href="CppAbout.htm">about</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcluster<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplay.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverviewdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverview<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbfi<a href="CppLed.htm">led</a>ialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/test_qtpvdbconceptmapdialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdb<a href="CppAbout.htm">about</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcluster<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplay.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverviewdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverview<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbfi<a href="CppLed.htm">led</a>ialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbfwd.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.ui \<br/>
&nbsp;&nbsp; ../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> +=<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> +=<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbcluster.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbcluster.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBCLUSTER_H<br/>
<a href="CppDefine.htm">#define</a> PVDBCLUSTER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ClusterFactory;<br/>
<br/>
<a href="CppComment.htm">///</a>The data behind a <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a><br/>
<b><a href="CppStruct.htm">struct</a></b> Cluster<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a Concept to the Cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/See <b><a href="CppIf.htm">if</a></b> the cluster is empty<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> Empty() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a Cluster from an <a href="CppXml.htm">XML</a> <a href="CppStdString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the list of Concepts<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; Get() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; Get() { <b><a href="CppReturn.htm">return</a></b> m_v; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the concepts<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; concepts);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a Cluster from an <a href="CppXml.htm">XML</a> <a href="CppStdString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt;&amp; c) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/A Cluster is a list of Concepts. The Concepts contain examples.<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; m_v;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppConstructor.htm">constructor</a>, except <b><a href="CppFor.htm">for</a></b> ClusterFactory<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> ClusterFactory;<br/>
&nbsp;&nbsp;Cluster(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppDestructor.htm">destructor</a>, except <b><a href="CppFor.htm">for</a></b> the <b><a href="CppFriend.htm">friend</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a><br/>
&nbsp;&nbsp;~Cluster() {}<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(Cluster* x);<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::Cluster&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBCLUSTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbcluster.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbcluster.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "xml.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Cluster(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v)<br/>
&nbsp;&nbsp;: m_v(v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::<a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &amp; concept)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;m_v.push_back(concept);<br/>
<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Empty() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_v.empty();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> &amp;s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 19);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(0,9) <a href="CppOperatorEqual.htm">==</a> "&lt;cluster&gt;");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(s.size() <a href="CppOperatorMinus.htm">-</a> 10,10) <a href="CppOperatorEqual.htm">==</a> "&lt;/cluster&gt;");<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; concepts;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the &lt;cluster&gt; ... &lt;/cluster&gt; string<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;cluster&gt;.*&lt;/cluster&gt;)"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Strip the &lt;cluster&gt; tags<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> cluster_str <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the &lt;concept&gt; ... &lt;/concept&gt; strings<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; w<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;concept&gt;.*&lt;/concept&gt;)"));<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(w.begin(),w.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;concepts](<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> ConceptFactory().From<a href="CppXml.htm">Xml</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concepts.push_back(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster(<b><a href="CppNew.htm">new</a></b> Cluster(concepts));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> cluster;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Get() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;(m_v.begin(),m_v.end());<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt;&amp; cluster) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;cluster&gt;";<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v <a href="CppOperatorAssign.htm">=</a> cluster-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(), v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&amp;s](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> concept-&gt;To<a href="CppXml.htm">Xml</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/cluster&gt;";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> s.str();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 19);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(0,9) <a href="CppOperatorEqual.htm">==</a> "&lt;cluster&gt;");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(r.size() <a href="CppOperatorMinus.htm">-</a> 10,10) <a href="CppOperatorEqual.htm">==</a> "&lt;/cluster&gt;");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; lhs_concepts <a href="CppOperatorAssign.htm">=</a> lhs.Get(); <a href="CppComment.htm">//</a>For cross-<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; rhs_concepts <a href="CppOperatorAssign.htm">=</a> rhs.Get();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs_concepts.size() <a href="CppOperatorNotEqual.htm">!=</a> rhs_concepts.size()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt; <b><a href="CppInt.htm">int</a></b>&gt;(lhs_concepts.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(lhs_concepts[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rhs_concepts[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (*lhs_concepts[i] <a href="CppOperatorNotEqual.htm">!=</a> *rhs_concepts[i]) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::SetConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; concepts)<br/>
{<br/>
&nbsp;&nbsp;m_v <a href="CppOperatorAssign.htm">=</a> concepts;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(m_v.begin(),m_v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Concept&gt; concept) { <b><a href="CppReturn.htm">return</a></b> !concept; } )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> 0);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbclusterfactory.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbclusterfactory.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2013-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBCLUSTERFACTORY_H<br/>
<a href="CppDefine.htm">#define</a> PVDBCLUSTERFACTORY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Factory <b><a href="CppFor.htm">for</a></b> creating Cluster <a href="CppInstance.htm">instances</a><br/>
<b><a href="CppStruct.htm">struct</a></b> ClusterFactory<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; Create(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DeepCopy is only used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt; cluster);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a single test, a combination of testing node indices<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; GetTest(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;&amp; test_node_indices);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; GetTests();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBCLUSTERFACTORY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbclusterfactory.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbclusterfactory.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::Create(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>FIX 2012-01-02<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p(<b><a href="CppNew.htm">new</a></b> pvdb::Cluster(v));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt; cluster)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> cluster-&gt;Get();<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; w;<br/>
&nbsp;&nbsp;<a href="CppStdTransform.htm">std::transform</a>(v.begin(),v.end(),<a href="CppStdBack_inserter.htm">std::back_inserter</a>(w),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; c)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; d <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptFactory().DeepCopy(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*c <a href="CppOperatorEqual.htm">==</a> *d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p(<b><a href="CppNew.htm">new</a></b> Cluster(w));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p <a href="CppOperatorNotEqual.htm">!=</a> cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*p,*cluster));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTest(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;&amp; test_node_indices)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; concepts;<br/>
&nbsp;&nbsp;<a href="CppStdTransform.htm">std::transform</a>(test_node_indices.begin(),test_node_indices.end(),<a href="CppStdBack_inserter.htm">std::back_inserter</a>(concepts),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; tmp <a href="CppOperatorAssign.htm">=</a> cmap::ConceptFactory().GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(cmap::ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> tmp.at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(concepts.begin(),concepts.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster(<b><a href="CppNew.htm">new</a></b> Cluster(concepts));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> cluster;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v(6);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[0] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {1} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[1] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0,1} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[2] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0,1,2} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[3] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[4] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppNULL.htm">NULL</a>PTR<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[5] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a> DO NOT DO THIS FOR WINE<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {1} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0,1} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0,1,2} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( { } )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfile.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfile.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2013-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
<a href="CppDefine.htm">#define</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The File used, also the <a href="CppMain.htm">main</a> director of the program's flow<br/>
<b><a href="CppStruct.htm">struct</a></b> File<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start an empty file<br/>
&nbsp;&nbsp;File();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a File from all its (non-<b><a href="CppStatic.htm">static</a></b>) member variables<br/>
&nbsp;&nbsp;File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; assessor_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt;&amp; concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; student_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;File(<b><a href="CppConst.htm">const</a></b> File&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;File&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> File&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a concept map with a center node with text<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; CreateConceptMap(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; text) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> the Cluster to a ConceptMap<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> CreateConceptMapFromCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> <a href="CppXml.htm">XML</a> to File<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the string which indicates <b><a href="CppThis.htm">this</a></b> file is a PvdB file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; GetAbout() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_about; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the assessor his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; GetAssessorName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_assessor_name; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her clustering of concepts and examples<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Cluster&gt; GetCluster() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_cluster; }<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cluster&gt; GetCluster()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <b><a href="CppReturn.htm">return</a></b> m_cluster; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; GetConceptMap() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_concept_map; }<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; GetConceptMap()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <b><a href="CppReturn.htm">return</a></b> m_concept_map; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the File filename extension<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; GetFilenameExtension() { <b><a href="CppReturn.htm">return</a></b> m_filename_extension; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the assessors' <a href="CppQuestion.htm">question</a>s<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; GetStudentName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_student_name; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a temporary filename<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> GetTempFileName();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a test filename<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> GetTestFileName();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain multiple test files<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; GetTests();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppVersion.htm">version</a>; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Load to File from disk<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; Load(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save a File<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/File will have one line of <a href="CppXml.htm">XML</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the assessor his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetAssessorName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; assessor_name);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write a <b><a href="CppNew.htm">new</a></b> clustering of concepts and examples<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Can only be done exactly once<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCluster(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write a <b><a href="CppNew.htm">new</a></b> ConceptMap from a Cluster<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Can only be done exactly once<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetConceptMap(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetStudentName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; student_name);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> File to <a href="CppXml.htm">XML</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> File&amp; file);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppDestructor.htm">destructor</a>, except <b><a href="CppFor.htm">for</a></b> the <b><a href="CppFriend.htm">friend</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a><br/>
&nbsp;&nbsp;~File() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The string which indicates <b><a href="CppThis.htm">this</a></b> file is a PvdB file<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_about;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The assessor his/her name<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_assessor_name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The clustering of items<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Initially will be <b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; m_cluster;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Initially will be <b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file extension of a a File<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> m_filename_extension;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppQuestion.htm">question</a> the student must answer<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_<a href="CppQuestion.htm">question</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The student his/her name<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_student_name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_<a href="CppVersion.htm">version</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/AutoSave, called after each setter<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AutoSave() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace the <a href="CppRegex.htm">regex</a>_str in str with format_str<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppRegex.htm">regex</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; format_str);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a file's content to a single <a href="CppStdString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> FileToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.1<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_1(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.2<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_2(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.3<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_3(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Correct <a href="CppFriend.htm">befriending</a>, from http://richelbilderbeek.nl/CppChecked_delete.htm<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(File* x);<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> pvdb::File&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::File&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfile.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfile.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2013-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppBoostXpressive.htm">xpressive</a>/<a href="CppBoostXpressive.htm">xpressive</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string/trim.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "xml.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::m_filename_extension <a href="CppOperatorAssign.htm">=</a> "cmp";<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::File::File()<br/>
&nbsp;&nbsp;: m_about("<a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_assessor_name(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept_map(), <a href="CppComment.htm">//</a><b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_student_name(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.htm">version</a>("0.4")<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_concept_map);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::File::File(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; assessor_name,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt;&amp; concept_map,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; student_name,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppVersion.htm">version</a>)<br/>
&nbsp;&nbsp;: m_about(<a href="CppAbout.htm">about</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_assessor_name(assessor_name),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(cluster),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept_map(concept_map),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>(<a href="CppQuestion.htm">question</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_student_name(student_name),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.htm">version</a>(<a href="CppVersion.htm">version</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::AutoSave() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Save("<b><a href="CppAuto.htm">auto</a></b>save1." <a href="CppOperatorPlus.htm">+</a> m_filename_extension);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Save("<b><a href="CppAuto.htm">auto</a></b>save2." <a href="CppOperatorPlus.htm">+</a> m_filename_extension);<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_1(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put &lt;examples&gt; around existing &lt;example&gt; tags<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> a <a href="CppOperatorAssign.htm">=</a> "a$b";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"$","");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(b <a href="CppOperatorEqual.htm">==</a> "ab");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> a <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;/name&gt;&lt;example&gt;","&lt;/name&gt;&lt;examples&gt;&lt;example&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;/example&gt;&lt;/concept&gt;","&lt;/example&gt;&lt;/examples&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> c <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(b,"&lt;example&gt;","&lt;e$xample&gt;&lt;text&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> d <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(c,"&lt;/example&gt;","&lt;/text&gt;&lt;competency&gt;un<a href="CppInitialize.htm">initialize</a>d&lt;/competency&gt;&lt;/e$xample&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> e <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(d,"&lt;/examples&gt;&lt;/concept&gt;","&lt;/examples&gt;&lt;<b><a href="CppCompl.htm">compl</a></b>exity&gt;-1&lt;/<b><a href="CppCompl.htm">compl</a></b>exity&gt;&lt;concreteness&gt;-1&lt;/concreteness&gt;&lt;specificity&gt;-1&lt;/specificity&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> &lt;examples&gt; when no &lt;example&gt; tags are present<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> f <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(e,"&lt;/name&gt;&lt;/concept&gt;","&lt;/name&gt;&lt;examples&gt;&lt;/examples&gt;&lt;<b><a href="CppCompl.htm">compl</a></b>exity&gt;-1&lt;/<b><a href="CppCompl.htm">compl</a></b>exity&gt;&lt;concreteness&gt;-1&lt;/concreteness&gt;&lt;specificity&gt;-1&lt;/specificity&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> g <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(f,"$","");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(g.begin(),g.end(),'$') <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(f,"&lt;<a href="CppVersion.htm">version</a>&gt;0.1&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.2&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(h.begin(),h.end(),'$') <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> h;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_2(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> a <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;/<a href="CppAbout.htm">about</a>&gt;&lt;cluster&gt;","&lt;/<a href="CppAbout.htm">about</a>&gt;&lt;assessor_name&gt;&lt;/assessor_name&gt;&lt;cluster&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;<a href="CppVersion.htm">version</a>&gt;0.2&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.3&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(b.begin(),b.end(),'$') <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> b;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_3(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;<a href="CppAbout.htm">about</a>&gt;<a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>&lt;/<a href="CppAbout.htm">about</a>&gt;","&lt;<a href="CppAbout.htm">about</a>&gt;<a href="ProjectBrainweaver.htm">Brainweaver</a>&lt;/<a href="CppAbout.htm">about</a>&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;<a href="CppVersion.htm">version</a>&gt;0.3&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.4&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the <a href="CppQuestion.htm">question</a> from the concept map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;b,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&lt;concept_map&gt;&lt;nodes&gt;&lt;node&gt;&lt;concept&gt;&lt;name&gt;(.*)&lt;/name&gt;&lt;/concept&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"$1");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> c <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(b,"&lt;/concept_map&gt;&lt;student_name&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;, "&lt;/concept_map&gt;&lt;<a href="CppQuestion.htm">question</a>&gt;" <a href="CppOperatorPlus.htm">+</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorPlus.htm">+</a> "&lt;/<a href="CppQuestion.htm">question</a>&gt;&lt;student_name&gt;");<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(c,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/competency&gt;&lt;/example&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/competency&gt;&lt;is_<b><a href="CppCompl.htm">compl</a></b>ex&gt;1&lt;/is_<b><a href="CppCompl.htm">compl</a></b>ex&gt;&lt;is_concrete&gt;1&lt;/is_concrete&gt;&lt;is_specific&gt;1&lt;/is_specific&gt;&lt;/example&gt;");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(d,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/examples&gt;&lt;<b><a href="CppCompl.htm">compl</a></b>exity&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/examples&gt;&lt;concept_is_<b><a href="CppCompl.htm">compl</a></b>ex&gt;1&lt;/concept_is_<b><a href="CppCompl.htm">compl</a></b>ex&gt;&lt;<b><a href="CppCompl.htm">compl</a></b>exity&gt;");<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(e.begin(),e.end(),'$') <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> e;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::FileToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename.c_str()));<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s;<br/>
&nbsp;&nbsp;<a href="CppStdIfstream.htm">std::ifstream</a> in(filename.c_str());<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (!in.eof())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdGetline.htm">std::getline</a>(in,t);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>t;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> &amp;s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 13);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(0,6) <a href="CppOperatorEqual.htm">==</a> "&lt;file&gt;");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(s.size() <a href="CppOperatorMinus.htm">-</a> 7,7) <a href="CppOperatorEqual.htm">==</a> "&lt;/file&gt;");<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_about_str<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppAbout.htm">about</a>&gt;.*&lt;/<a href="CppAbout.htm">about</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_about <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_assessor_name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;assessor_name&gt;.*&lt;/assessor_name&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_assessor_name <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;cluster&gt;.*&lt;/cluster&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_cluster <a href="CppOperatorAssign.htm">=</a> Cluster::From<a href="CppXml.htm">Xml</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No cluster yet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept_map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;concept_map&gt;.*&lt;/concept_map&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_concept_map <a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().From<a href="CppXml.htm">Xml</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No concept map yet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppQuestion.htm">question</a>&gt;.*&lt;/<a href="CppQuestion.htm">question</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Some<a href="CppTime.htm">time</a>s, <b><a href="CppThis.htm">this</a></b> happens at the first startup and ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!v.empty() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Ignore and restart"); <a href="CppComment.htm">//</a>TODO RJCB: fix <b><a href="CppThis.htm">this</a></b> startup error<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Ignore and restart"); <a href="CppComment.htm">//</a>TODO RJCB: fix <b><a href="CppThis.htm">this</a></b> startup error<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_student_name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;student_name&gt;.*&lt;/student_name&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_student_name <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_<a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>( (!f-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !f-&gt;GetConceptMap()-&gt;GetNodes().empty() ) <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or it has at least one node"); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>( (!f-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> f-&gt;GetConceptMap()-&gt;FindCenterNode() ) <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or the first node in a file's ConceptMap is be a CenterNode"); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> f;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppQuestion.htm">question</a>;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "tmp." <a href="CppOperatorPlus.htm">+</a> m_filename_extension;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTestFileName()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "test." <a href="CppOperatorPlus.htm">+</a> m_filename_extension;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_clusters <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::ClusterFactory::GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_concept_maps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(cmap::ConceptMapFactory().GetAllTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> cluster_index=0; cluster_index<a href="CppOperatorNotEqual.htm">!=</a>n_clusters; <a href="CppOperatorIncrement.htm">++</a>cluster_index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> concept_map_index=0; concept_map_index<a href="CppOperatorNotEqual.htm">!=</a>n_concept_maps; <a href="CppOperatorIncrement.htm">++</a>concept_map_index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppAbout.htm">about</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppAbout.htm">about</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> assessor_name <a href="CppOperatorAssign.htm">=</a> "assessor_name";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppQuestion.htm">question</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> student_name <a href="CppOperatorAssign.htm">=</a> "student_name";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppVersion.htm">version</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTests()[cluster_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> concept_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory().GetAllTests()[concept_map_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map-&gt;GetNodes().empty()); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map-&gt;FindCenterNode()); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map-&gt;FindCenterNode()-&gt;GetConcept()); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;FindCenterNode()-&gt;GetConcept()-&gt;GetName(); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assessor_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;student_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVersion.htm">version</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::Load(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> &amp;filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> xml;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Read <a href="CppXml.htm">XML</a> from file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppFileToVector.htm">FileToVector</a> allowed an empty line after text, due to difference in line ending<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Safe<a href="CppFileToVector.htm">FileToVector</a> should remove <b><a href="CppThis.htm">this</a></b> line<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; s: v) { xml<a href="CppOperatorPlusAssign.htm">+=</a>s; }<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;xml.erase(<a href="CppStdRemove.htm">std::remove</a>(xml.begin(),xml.end(),'\r'),xml.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;xml.erase(<a href="CppStdRemove.htm">std::remove</a>(xml.begin(),xml.end(),'\t'),xml.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;xml.erase(<a href="CppStdRemove.htm">std::remove</a>(xml.begin(),xml.end(),'\n'),xml.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;xml.erase(<a href="CppStdRemove.htm">std::remove</a>(xml.begin(),xml.end(),'\b'),xml.end());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(xml.begin(),xml.end(),'\n')<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(xml.begin(),xml.end(),'\t')<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(xml.begin(),xml.end(),'\r')<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(xml.begin(),xml.end(),'\b')<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>xml <a href="CppOperatorAssign.htm">=</a> v[0];<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.1<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> "0.1")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_1(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.2<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> "0.2")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_2(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.3<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> "0.3")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_3(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim(xml);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::From<a href="CppXml.htm">Xml</a>(xml);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>( (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetConceptMap()-&gt;GetNodes().empty() ) <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or it has at least one node"); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>( (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> file-&gt;GetConceptMap()-&gt;FindCenterNode()) <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or the file's ConceptMap has a CenterNode"); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> file;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> &amp;filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppFor.htm">for</a></b> correct extension<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> m_filename_extension))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(filename);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> m_filename_extension<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdOfstream.htm">std::ofstream</a> f(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> To<a href="CppXml.htm">Xml</a>(*<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> load results in the same File<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorNotEqual.htm">!=</a> 1) { <a href="CppTRACE.htm">TRACE</a>(v.size()); <a href="CppTRACE.htm">TRACE</a>(filename); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have one line of <a href="CppXml.htm">XML</a>");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetAssessorName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; assessor_name)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(assessor_name.size() &gt; 1);<br/>
&nbsp;&nbsp;m_assessor_name <a href="CppOperatorAssign.htm">=</a> assessor_name;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetConceptMap(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_concept_map <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set when there is no concept map present yet");<br/>
&nbsp;&nbsp;m_concept_map <a href="CppOperatorAssign.htm">=</a> concept_map;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_concept_map-&gt;GetNodes().empty() <a href="CppComment.htm">//</a>TODO: put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "In <a href="ProjectBrainweaver.htm">Brainweaver</a>, every ConceptMap must have at least one node");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_concept_map-&gt;FindCenterNode() <a href="CppComment.htm">//</a>TODO RJCB: to put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "In <a href="ProjectBrainweaver.htm">Brainweaver</a>, every ConceptMap must have a CenterNode"); <a href="CppComment.htm">//</a>TODO RJCB: to put back in<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetCluster(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Don't care: m_cluster will be overwritten more often,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>because the Tree<a href="CppWidget.htm">Widget</a> has no Model/View architecture: the resulting<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cluster is allocated <b><a href="CppNew.htm">new</a></b> and calculated every save<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!m_cluster);<br/>
<br/>
&nbsp;&nbsp;m_cluster <a href="CppOperatorAssign.htm">=</a> cluster;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppQuestion.htm">question</a>.size() &gt; 0);<br/>
&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppQuestion.htm">question</a>;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetStudentName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; student_name)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(student_name.size() &gt; 1);<br/>
&nbsp;&nbsp;m_student_name <a href="CppOperatorAssign.htm">=</a> student_name;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> tmp_filename <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <a href="CppCopyConstructor.htm">copy constructor</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetAssessorName("<a href="CppDebug.htm">debug</a> assessor name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppDebug.htm">debug</a> student name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; g <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::DeepCopy(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f <a href="CppOperatorNotEqual.htm">!=</a> g);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify g, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetStudentName( f-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetStudentName( f-&gt;GetStudentName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetAssessorName( f-&gt;GetAssessorName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetAssessorName( f-&gt;GetAssessorName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*f,*g));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test Save/Load on empty File<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; firstfile(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Save(tmp_filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; secondfile(File::Load(tmp_filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> secondfile-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile <a href="CppOperatorNotEqual.htm">!=</a> secondfile);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*firstfile,*secondfile));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify f, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName( firstfile-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*firstfile,*secondfile));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test Save/Load on file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; firstfile(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName("Richel Bilderbeek");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "Focal <a href="CppQuestion.htm">question</a>?";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> File::CreateConceptMap(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The first node in a file's ConceptMap must be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Set<a href="CppQuestion.htm">Question</a>("Focal <a href="CppQuestion.htm">question</a>?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Save(tmp_filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; second_file(File::Load(tmp_filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(second_file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(second_file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*firstfile,*second_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify f, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName( firstfile-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*firstfile,*second_file));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Continue loop until no file is found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Testing filenames start at 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i) <a href="CppOperatorPlus.htm">+</a> ".cmp";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the file from <a href="CppQt.htm">Qt</a> resources to local file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> qtfilename <a href="CppOperatorAssign.htm">=</a> ":/files/" <a href="CppOperatorPlus.htm">+</a> filename;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qtfile(qtfilename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>("First filename not found: ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> file(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> success <a href="CppOperatorAssign.htm">=</a> file.setPermissions(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a>::ReadOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(success);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.open(<a href="CppQFile.htm">QFile</a>::ReadWrite);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isOpen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isReadable());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isWritable());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.size() &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.close();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("File::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> File&amp; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(file.m_cluster);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(file.m_concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;file&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppAbout.htm">about</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetAbout() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppAbout.htm">about</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;assessor_name&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetAssessorName() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/assessor_name&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file.GetCluster()&nbsp;&nbsp; ) s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Cluster::To<a href="CppXml.htm">Xml</a>(file.GetCluster());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file.GetConceptMap()) s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> cmap::ConceptMap::To<a href="CppXml.htm">Xml</a>(file.GetConceptMap());<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppQuestion.htm">question</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppQuestion.htm">question</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;student_name&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetStudentName() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/student_name&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppVersion.htm">version</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.Get<a href="CppVersion.htm">Version</a>() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppVersion.htm">version</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/file&gt;";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> s.str();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 13);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(0,6) <a href="CppOperatorEqual.htm">==</a> "&lt;file&gt;");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(r.size() <a href="CppOperatorMinus.htm">-</a> 7,7) <a href="CppOperatorEqual.htm">==</a> "&lt;/file&gt;");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::CreateConceptMap(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; text) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>A single-node ConceptMap contains only the focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::CenterNode&gt; focal_node {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CenterNodeFactory().CreateFromStrings(text)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(focal_node);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; &gt; nodes <a href="CppOperatorAssign.htm">=</a> { focal_node };<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(nodes.at(0));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; p <a href="CppOperatorAssign.htm">=</a> ConceptMapFactory().Create(nodes);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p-&gt;IsValid());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!p-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p-&gt;FindCenterNode() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A <a href="ProjectBrainweaver.htm">Brainweaver</a> ConceptMap must have a CenterNode");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppRegex.htm">regex</a>_str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; format_str)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>(<a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>::<a href="CppCompile.htm">compile</a>(<a href="CppRegex.htm">regex</a>_str)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::match_default<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::format_all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::format_no_copy);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_error&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_error: " <a href="CppOperatorPlus.htm">+</a> <a href="CppStdString.htm">std::string</a>(e.what());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<a href="CppRegex.htm">regex</a>_str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(format_str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> pvdb::File&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::File&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(lhs.GetCluster());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(lhs.GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(rhs.GetCluster());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(rhs.GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp; lhs.GetAssessorName() <a href="CppOperatorEqual.htm">==</a> rhs.GetAssessorName()<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (!lhs.GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !rhs.GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppOperatorEqual.htm">operator==</a></b>(*lhs.GetCluster(),*rhs.GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (!lhs.GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !rhs.GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a> *lhs.GetConceptMap() <a href="CppOperatorEqual.htm">==</a> *rhs.GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetStudentName() <a href="CppOperatorEqual.htm">==</a> rhs.GetStudentName()<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.Get<a href="CppVersion.htm">Version</a>() <a href="CppOperatorEqual.htm">==</a> rhs.Get<a href="CppVersion.htm">Version</a>();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfilefactory.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfilefactory.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
<a href="CppDefine.htm">#define</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> File;<br/>
<br/>
<a href="CppComment.htm">///</a>Factory of pvdb::File<br/>
<b><a href="CppStruct.htm">struct</a></b> FileFactory<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; Create();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DeepCopy is only used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt;&amp; file);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; GetTests();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfilefactory.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfilefactory.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::Create()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> file;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt;&amp; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*cluster,*file-&gt;GetCluster()));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory().DeepCopy(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*concept_map <a href="CppOperatorEqual.htm">==</a> *file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
<br/>
 <a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
 <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetAbout(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetAssessorName(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppQuestion.htm">Question</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetStudentName(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppVersion.htm">Version</a>()));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorNotEqual.htm">!=</a> p <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "It must be a DEEP copy");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file,*p) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "It must be a deep COPY");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[0]: empty file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(Create());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1]: file with focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!concept_map-&gt;GetNodes().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[2]: file with <b><a href="CppCompl.htm">compl</a></b>ex concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[3]: file with <b><a href="CppCompl.htm">compl</a></b>ex concept map and <b><a href="CppCompl.htm">compl</a></b>ex cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[3] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[4]: file with rated <b><a href="CppCompl.htm">compl</a></b>ex concept map and <b><a href="CppCompl.htm">compl</a></b>ex cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[4] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(16);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[5]: file with rated <b><a href="CppCompl.htm">compl</a></b>ex concept map and <b><a href="CppCompl.htm">compl</a></b>ex cluster, all multiple lines<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[5] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(17);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> PVDB_KEEP_NAMESPACE_IN_CPP_<a href="CppCfile.htm">FILE</a>S<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfwd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfwd.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBFWD_H<br/>
<a href="CppDefine.htm">#define</a> PVDBFWD_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfwd.h"<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> <a href="CppQRegExp.htm">QRegExp</a>;<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Cluster;<br/>
<b><a href="CppStruct.htm">struct</a></b> File;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBFWD_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbhelper.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbhelper.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBHELPER_H<br/>
<a href="CppDefine.htm">#define</a> PVDBHELPER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppArrayH.htm">array</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppArray.htm">array</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQRegExp.htm">QRegExp</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<br/>
<a href="CppComment.htm">///</a>Help adding constness a bit<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt; <a href="CppAdd.htm">Add</a>Const(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;T&gt; &gt; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt; w(v.begin(),v.end());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> w.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i) { <a href="CppAssert.htm">assert</a>(v[i] <a href="CppOperatorEqual.htm">==</a> w[i]); }<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Help adding constness a bit<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppConst.htm">const</a></b> T *&gt; <a href="CppAdd.htm">Add</a>Const(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;T *&gt; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppConst.htm">const</a></b> T *&gt; w(v.begin(),v.end());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> w.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i) { <a href="CppAssert.htm">assert</a>(v[i] <a href="CppOperatorEqual.htm">==</a> w[i]); }<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain all possible selections of a <a href="CppStdVector.htm">std::vector</a>, preserving the ordering of its elements<br/>
<a href="CppComment.htm">///</a>Examples:<br/>
/<a href="CppComment.htm">//</a> {&nbsp;&nbsp;&nbsp;&nbsp; } <a href="CppOperatorMinus.htm">-</a>&gt; { {}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
/<a href="CppComment.htm">//</a> {1&nbsp;&nbsp;&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
/<a href="CppComment.htm">//</a> {1,2&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}, {2},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{1,2}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
/<a href="CppComment.htm">//</a> {1,2,3} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}, {2}, {3}, {1,2}, {1,3}, {2,3}, {1,2,3} }<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetCombinations.htm">GetCombinations</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;T&gt; &gt; <a href="CppGetCombinations.htm">GetCombinations</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;T&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;T&gt; &gt; result;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_combinations <a href="CppOperatorAssign.htm">=</a> (1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> sz);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_combinations; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;T&gt; w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> j) &amp; i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.push_back(v[j]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;result.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> result;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the Pythagorian distance from two delta's<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetDistance.htm">GetDistance</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_y);<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the Pythagorian distance from two coordinats<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetDistance.htm">GetDistance</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2);<br/>
<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetRegexMatches.htm">GetRegexMatches</a>.htm<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppGetRegexMatches.htm">GetRegexMatches</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRegExp.htm">QRegExp</a>&amp; r);<br/>
<br/>
<a href="CppComment.htm">///</a>Safe<a href="CppFileToVector.htm">FileToVector</a> calls <a href="CppFileToVector.htm">FileToVector</a> and<br/>
<a href="CppComment.htm">///</a>removes an empty trailing line that can be created under<br/>
<a href="CppComment.htm">///</a>the <a href="CppWindows.htm">Windows</a> operating system, due to different line endings<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Safe<a href="CppFileToVector.htm">FileToVector</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename);<br/>
<br/>
<a href="CppComment.htm">///</a>Split an <a href="CppXml.htm">XML</a> <a href="CppStdString.htm">std::string</a> into its parts<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppSplitXml.htm">SplitXml</a>.htm<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppSplitXml.htm">SplitXml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<a href="CppComment.htm">///</a>Test the helper <a href="CppFunction.htm">function</a>s<br/>
<b><a href="CppVoid.htm">void</a></b> TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">///</a>Undo a Wordwrap<br/>
<a href="CppStdString.htm">std::string</a> Unwordwrap(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; v) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<a href="CppComment.htm">///</a>Wordwrap the text to obtain lines of max_len <a href="CppChar.htm">character</a>s<br/>
<a href="CppComment.htm">///</a>If the string _must_ be seperable by spaces; a word can have a maximum length of max_len<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Wordwrap(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> max_len) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<a href="CppComment.htm">///</a>Pretty-print an <a href="CppXml.htm">XML</a> <a href="CppStdString.htm">std::string</a> by indenting its elements<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppXmlToPretty.htm">XmlToPretty</a>.htm<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppXmlToPretty.htm">XmlToPretty</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBHELPER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbhelper.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbhelper.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_y)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppStdSqrt.htm">std::sqrt</a>( (delta_x * delta_x) <a href="CppOperatorPlus.htm">+</a> (delta_y * delta_y) );<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppGetDistance.htm">GetDistance</a>(x1-x2,y1-y2);<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRegExp.htm">QRegExp</a>&amp; r_original)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppQRegExp.htm">QRegExp</a> r(r_original);<br/>
&nbsp;&nbsp;r.setMinimal(<b><a href="CppTrue.htm">true</a></b>); <a href="CppComment.htm">//</a><a href="CppQRegExp.htm">QRegExp</a> must be non-greedy<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> pos <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> ((pos <a href="CppOperatorAssign.htm">=</a> r.indexIn(s.c_str(), pos)) <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppOperatorMinus.htm">-</a>1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> q <a href="CppOperatorAssign.htm">=</a> r.cap(1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (q.isEmpty()) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(q.toStdString());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos <a href="CppOperatorPlusAssign.htm">+=</a> r.matchedLength();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> v.back().empty()) v.pop_back();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppSplitXml.htm">SplitXml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a>::const_iterator i <a href="CppOperatorAssign.htm">=</a> s.begin();<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a>::const_iterator j <a href="CppOperatorAssign.htm">=</a> s.begin();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>::const_iterator end <a href="CppOperatorAssign.htm">=</a> s.end();<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (j<a href="CppOperatorNotEqual.htm">!=</a>end)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*j<a href="CppOperatorEqual.htm">==</a>'&gt;' <a href="CppOperatorLogicalOr.htm">||</a> *j <a href="CppOperatorEqual.htm">==</a> '&lt;') <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppStdDistance.htm">std::distance</a>(i,j) &gt; 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*i<a href="CppOperatorEqual.htm">==</a>'&lt;' ? i&nbsp;&nbsp; : i+1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*j<a href="CppOperatorEqual.htm">==</a>'&gt;' ? j+1 : j,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdBack_inserter.htm">std::back_inserter</a>(t));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(t);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorAssign.htm">=</a> j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::TestHelper<a href="CppFunction.htm">Function</a>s()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGetRegexMatches.htm">GetRegexMatches</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "In the Netherlands, 1234 AB and 2345 BC are valid zip codes";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; expected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("1234 AB");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("2345 BC");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> "(\\d{4} [A-Z]{2})";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>(r.c_str())) <a href="CppOperatorEqual.htm">==</a> expected);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "&lt;concept&gt;&lt;name&gt;Concept with examples&lt;/name&gt;&lt;example&gt;Example 1&lt;/example&gt;&lt;example&gt;Example 2&lt;/example&gt;&lt;example&gt;Example 3&lt;/example&gt;&lt;/concept&gt;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(s.begin(),s.end(),'\b') <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; expected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 1&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 2&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 3&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> "(&lt;example&gt;.*&lt;/example&gt;)";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>(r.c_str())) <a href="CppOperatorEqual.htm">==</a> expected);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGetCombinations.htm">GetCombinations</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the number of elements is correct<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;8);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a> 16);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4,5} ) ).size() <a href="CppOperatorEqual.htm">==</a> 32);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the elements are correct<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2,3 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_4 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_5 <a href="CppOperatorAssign.htm">=</a> {1,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_6 <a href="CppOperatorAssign.htm">=</a> {2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_7 <a href="CppOperatorAssign.htm">=</a> {1,2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_5));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_6));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_7));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2,3,4 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_4 <a href="CppOperatorAssign.htm">=</a> {4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_5 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_6 <a href="CppOperatorAssign.htm">=</a> {1,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_7 <a href="CppOperatorAssign.htm">=</a> {1,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_8 <a href="CppOperatorAssign.htm">=</a> {2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_9 <a href="CppOperatorAssign.htm">=</a> {2,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_10 <a href="CppOperatorAssign.htm">=</a> {3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_11 <a href="CppOperatorAssign.htm">=</a> {1,2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_12 <a href="CppOperatorAssign.htm">=</a> {1,2,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_13 <a href="CppOperatorAssign.htm">=</a> {1,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_14 <a href="CppOperatorAssign.htm">=</a> {2,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_15 <a href="CppOperatorAssign.htm">=</a> {1,2,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_5));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_6));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_7));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_8));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_9));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_10));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_11));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_12));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_13));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_14));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),expected_15));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Wordwrap<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1 1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12 12",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123 123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234 1234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345 12345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456 123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567 1234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678 8",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789 9",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" 1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 2 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 23 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;12 34&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;12&nbsp;&nbsp;34&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> len=1; len<a href="CppOperatorNotEqual.htm">!=</a>1000; <a href="CppOperatorIncrement.htm">++</a>len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s: v)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Wordwrap calls Unwordwrap<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wordwrap(s,len);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TestHelper<a href="CppFunction.htm">Function</a>s finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::Unwordwrap(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; v) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Simply concatenate<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s: v) { t <a href="CppOperatorPlusAssign.htm">+=</a> s; }<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> t;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Wordwrap(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s_original, <b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> max_len) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (max_len <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Cannot wordwrap <b><a href="CppFor.htm">for</a></b> a max_len of zero");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Wordwrap \'" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s_original <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\'' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s{s_original};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorEqual.htm">==</a> s_original.size());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace multiple spaces with '\b ', where x is a <b><a href="CppChar.htm">char</a></b> not in the string<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a>::value_type x <a href="CppOperatorAssign.htm">=</a> '\b'; <a href="CppComment.htm">//</a>Bell<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> s.size();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace spaces at beginning<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Replace spaces at end<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sz &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>i<a href="CppOperatorNotEqual.htm">!=</a>0, because <b><a href="CppIf.htm">if</a></b> s[0] is a space, it is already <a href="CppConvert.htm">convert</a>ed to bell<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=sz-1; i<a href="CppOperatorNotEqual.htm">!=</a>0; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace "&nbsp;&nbsp;" by "\b "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz-1; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i+1] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start the actual wordwrapping<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (!s.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Is the word <b><a href="CppShort.htm">short</a></b> enough?<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s.size() &lt; max_len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy entire word<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No spaces, or space beyond max_len: cut word<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s.find(' ') <a href="CppOperatorEqual.htm">==</a> <a href="CppStdString.htm">std::string</a>::npos <a href="CppOperatorLogicalOr.htm">||</a> s.find(' ') &gt; max_len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s.substr(0,max_len));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> s.substr(max_len,s.size() <a href="CppOperatorMinus.htm">-</a> max_len);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Find last space before max_len<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSize_t.htm">std::size_t</a> len <a href="CppOperatorAssign.htm">=</a> s.find(' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppStdString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> new_len <a href="CppOperatorAssign.htm">=</a> s.find(' ',len <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (new_len &gt; max_len <a href="CppOperatorLogicalOr.htm">||</a> new_len <a href="CppOperatorEqual.htm">==</a> <a href="CppStdString.htm">std::string</a>::npos) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len <a href="CppOperatorAssign.htm">=</a> new_len;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorPlus.htm">+</a> 0 &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorPlus.htm">+</a> 1 &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>cut s, put cut part in vector<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> line <a href="CppOperatorAssign.htm">=</a> s.substr(0,len+1); <a href="CppComment.htm">//</a>Keep space<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!line.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(line);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> new_index <a href="CppOperatorAssign.htm">=</a> len+1; <a href="CppComment.htm">//</a>After the space found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(new_index &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> new_s <a href="CppOperatorAssign.htm">=</a> s.substr(new_index,s.size() <a href="CppOperatorMinus.htm">-</a> new_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s <a href="CppOperatorNotEqual.htm">!=</a> new_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> new_s;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace bell <a href="CppChar.htm">character</a>s by spaces again<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdString.htm">std::string</a>&amp; s: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(x <a href="CppOperatorNotEqual.htm">!=</a> ' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSize_t.htm">std::size_t</a> pos <a href="CppOperatorAssign.htm">=</a> s.find(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (pos <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppStdString.htm">std::string</a>::npos)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppStdString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorEqual.htm">==</a> s.find(x)); <a href="CppComment.htm">//</a>To prevent infinite <b><a href="CppWhile.htm">while</a></b> loop<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[pos] <a href="CppOperatorAssign.htm">=</a> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s[pos] <a href="CppOperatorEqual.htm">==</a> ' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorNotEqual.htm">!=</a> s.find(x)); <a href="CppComment.htm">//</a>To prevent infinite <b><a href="CppWhile.htm">while</a></b> loop<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos <a href="CppOperatorAssign.htm">=</a> s.find(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.find(x) <a href="CppOperatorEqual.htm">==</a> <a href="CppStdString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <b><a href="CppIf.htm">if</a></b> Unwordwrap the result produces the original input<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Unwordwrap(v) <a href="CppOperatorNotEqual.htm">!=</a> s_original)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(v.begin(),v.end(),<a href="CppStdOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(<a href="CppStdCerr.htm">std::cerr</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Unwordwrap(v) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s_original <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(Unwordwrap(v) <a href="CppOperatorEqual.htm">==</a> s_original);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppSplitXml.htm">SplitXml</a>(s);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>2;<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;n](<a href="CppStdString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!s.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[0] <a href="CppOperatorEqual.htm">==</a> '&lt;' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[1] <a href="CppOperatorNotEqual.htm">!=</a> '/')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<a href="CppOperatorPlusAssign.htm">+=</a>2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> <a href="CppStdString.htm">std::string</a>(n,' ') <a href="CppOperatorPlus.htm">+</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[n+0] <a href="CppOperatorEqual.htm">==</a> '&lt;' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[n+1] <a href="CppOperatorEqual.htm">==</a> '/')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<a href="CppOperatorMinusAssign.htm">-=</a>2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> PVDBMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The GUI independent <a href="CppVersion.htm">version</a> of Project Van Den Bogaart its menu dialog<br/>
<b><a href="CppStruct.htm">struct</a></b> MenuDialog : <b><a href="CppPublic.htm">public</a></b> ::<a href="CppRibi.htm">ribi</a>::MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppContainer.htm">container</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRibi.htm">ribi</a>_<a href="CppRegex.htm">regex</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "xml.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek (programming) and Toine van den Bogaart (research)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ProjectBrainweaver.htm">Brainweaver</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to create and assess concept maps",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 18th of May 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppApfloat.htm">apfloat</a> <a href="CppVersion.htm">version</a>: 2.4.1");<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("ConceptMap <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppContainer.htm">Container</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::<a href="CppContainer.htm">Container</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppFileIo.htm">FileIo</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Geometry <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Geometry().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Plane <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Plane::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppRibi.htm">ribi</a>::<a href="CppRegex.htm">Regex</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::<a href="CppRegex.htm">Regex</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTrace.htm">Trace</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.htm">Trace</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectBrainweaver.htm">Brainweaver</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "0.50";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-06-17: <a href="CppVersion.htm">Version</a> 0.01: concept <a href="CppVersion.htm">version</a> of <a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>, <b><a href="CppUsing.htm">using</a></b> 'IronHide' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-18: <a href="CppVersion.htm">Version</a> 0.02: able to cross<a href="CppCompile.htm">compile</a> to windows, few dialogs present",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-19: <a href="CppVersion.htm">Version</a> 0.03: added use of <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>, most dialogs present",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-24: <a href="CppVersion.htm">Version</a> 0.04: added <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-28: <a href="CppVersion.htm">Version</a> 0.05: added Cluster and ConceptMap, added AutoSave, Cluster<a href="CppWidget.htm">Widget</a> and Cluster work okay, file I/O working okay",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-10: <a href="CppVersion.htm">Version</a> 0.06: added first working <a href="CppQt.htm">Qt</a>ConceptMap",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-13: <a href="CppVersion.htm">Version</a> 0.07: added edges and helpers to <a href="CppQt.htm">Qt</a>ConceptMap",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-15: <a href="CppVersion.htm">Version</a> 0.08: concepts on edges in <a href="CppQt.htm">Qt</a>ConceptMap are editable, <a href="CppQt.htm">Qt</a>ConceptMap always looks pretty",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-18: <a href="CppVersion.htm">Version</a> 0.09: added edges with arrowheads, deletion of nodes and edges possible, put help items in status bar",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-22: <a href="CppVersion.htm">Version</a> 0.10: editing of concepts and their examples, <a href="Tools.htm">tools</a> icon (doing nothing yet)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-24: <a href="CppVersion.htm">Version</a> 0.11: allow adding <b><a href="CppNew.htm">new</a></b> relations",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-25: <a href="CppVersion.htm">Version</a> 0.12: allow connecting to center node",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-27: <a href="CppVersion.htm">Version</a> 0.13: added program flow tests",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-28: <a href="CppVersion.htm">Version</a> 0.14: fixed many program flow and <a href="CppWidget.htm">widget</a> and dialog <a href="CppBug.htm">bug</a>s",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-02: <a href="CppVersion.htm">Version</a> 0.15: also relations can move",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-08: <a href="CppVersion.htm">Version</a> 0.16: use quadratic Bezier curve <b><a href="CppFor.htm">for</a></b> relations, locations of moved relations are saved",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-13: <a href="CppVersion.htm">Version</a> 0.17: improved keyboard <b><a href="CppFriend.htm">friend</a></b>liness",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-25: <a href="CppVersion.htm">Version</a> 0.18: major architectural changes, <b><a href="CppUsing.htm">using</a></b> 'B<a href="CppRainbow.htm">rainbow</a>' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-26: <a href="CppVersion.htm">Version</a> 0.19: program overview works again, concept map <a href="CppWidget.htm">widget</a>s <b><a href="CppFor.htm">for</a></b> editing, rating and displaying work fine",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-28: <a href="CppVersion.htm">Version</a> 0.20: got <a href="CppWine.htm">Wine</a> execution working again, rating works partially",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-31: <a href="CppVersion.htm">Version</a> 0.21: fixed <a href="CppBug.htm">bug</a>s in cluster dialog, added test concept dialog, temporarily removed concept maps",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-01: <a href="CppVersion.htm">Version</a> 0.22: added test node and edge dialogs, removed cross<a href="CppCompiler.htm">compiler</a> errors by replacing <a href="CppStdAll_of.htm">std::all_of</a> by count_if",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-08: <a href="CppVersion.htm">Version</a> 0.23: got editing and rating of concepts working",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-10: <a href="CppVersion.htm">Version</a> 0.24: backward-compatibility with previous .cmp files",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-13: <a href="CppVersion.htm">Version</a> 0.25: initial (incorrect) rating values calculation",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-18: <a href="CppVersion.htm">Version</a> 0.26: calculate rating values correctly",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-20: <a href="CppVersion.htm">Version</a> 0.27: added graphics to menu's, <b><a href="CppUsing.htm">using</a></b> 'Dolphin' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-23: <a href="CppVersion.htm">Version</a> 0.28: allow ConceptMapEdit arrows having solitary focus, progress on printing",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-02-12: <a href="CppVersion.htm">Version</a> 0.29: changed name to <a href="ProjectBrainweaver.htm">Brainweaver</a>, progress on printing",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-04-21: <a href="CppVersion.htm">Version</a> 0.30: shows sub-concepts maps in rating well, allows saving without going back to the <a href="CppMain.htm">main</a> menu",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-05-04: <a href="CppVersion.htm">Version</a> 0.31: improved printing <b><a href="CppFor.htm">for</a></b> student and assessor, first steps in implementing undo <a href="CppFunction.htm">function</a>ality",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-07-27: <a href="CppVersion.htm">Version</a> 0.32: first step in semi-<b><a href="CppAuto.htm">auto</a></b>mated rating mechanism",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-06: <a href="CppVersion.htm">Version</a> 0.33: added icons and artwork",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-18: <a href="CppVersion.htm">Version</a> 0.34: fixed file dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-30: <a href="CppVersion.htm">Version</a> 0.35: fixed segmentation faults, replaced print dialogs by save file dialogs",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-07: <a href="CppVersion.htm">Version</a> 0.36: placed all <b><a href="CppClass.htm">classes</a></b> in <b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a>::pvdb, minor changes",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-15: <a href="CppVersion.htm">Version</a> 0.37: minor changes, added wordwrap in concept names",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-21: <a href="CppVersion.htm">Version</a> 0.38: minor changes, added wordwrap in examples in concept map <a href="CppWidget.htm">widget</a>s",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-29: <a href="CppVersion.htm">Version</a> 0.39: minor changes, added wordwrap in examples in rate examples dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-10-03: <a href="CppVersion.htm">Version</a> 0.40: minor changes, added wordwrap in some more player",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-12-29: <a href="CppVersion.htm">Version</a> 0.43: <a href="CppBug.htm">bug</a>fixes, renaming, refactoring, preparing <b><a href="CppFor.htm">for</a></b> undo <a href="CppFunction.htm">function</a>ality",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-12-31: <a href="CppVersion.htm">Version</a> 0.44: when tallying the relevancies of a concept its connected examples, the node names connected to the edges are displayed",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-12-31: <a href="CppVersion.htm">Version</a> 0.45: sub concept map creation <a href="CppBug.htm">bug</a> fixes",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-xx-xx: <a href="CppVersion.htm">Version</a> 0.46: edges connected to center node have no label",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-04-19: <a href="CppVersion.htm">Version</a> 0.47: hotfix",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-05-04: <a href="CppVersion.htm">Version</a> 0.48: edges connected to center node have center node again",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-05-11: <a href="CppVersion.htm">Version</a> 0.49: wordwrap in tally relevancies dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-05-18: <a href="CppVersion.htm">Version</a> 0.50: edges connected to center node have no label, that cannot be edited"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbregex.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbregex.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> PVDBREGEX_H<br/>
<a href="CppDefine.htm">#define</a> PVDBREGEX_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppRegex.htm">Regex</a>es used by <a href="ProjectBrainweaver.htm">Brainweaver</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppRegex.htm">Regex</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppRegex.htm">Regex</a>();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBREGEX_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbregex.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbregex.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdb<a href="CppRegex.htm">regex</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRibi.htm">ribi</a>_<a href="CppRegex.htm">regex</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppRegex.htm">Regex</a>::<a href="CppRegex.htm">Regex</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppRegex.htm">Regex</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_assessor.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_assessor.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_developer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_developer.cpp" border = "1"><tr><td><code>
<a href="CppDefine.htm">#define</a> TODO_WINAND<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> TODO_COEN<br/>
<a href="CppInclude.htm">#include</a> &lt;pvdbfile.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;pvdbfilefactory.h&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateexamplesdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-image: url(:/images/PicLoomBackground.png);" <a href="CppComment.htm">//</a>Sorry Joost!<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Perform tests<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "DEBUG mode" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test(); <a href="CppComment.htm">//</a>Tests all<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RELEASE mode" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(1<a href="CppOperatorEqual.htm">==</a>2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Assume <a href="CppDebug.htm">debugging</a> is really disabled");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Delete the test file<br/>
&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(<a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName().c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> TODO_COEN<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "qtvdbmenudialog<a href="CppImplementationFile.htm">.cpp</a> 79?";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(<a href="CppRibi.htm">ribi</a>::pvdb::File::CreateConceptMap(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set concept map once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.exec();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(1<a href="CppOperatorEqual.htm">==</a>2);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorNotEqual.htm">!=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostFunction.htm">boost::function</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog *)&gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_about_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_assessor_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_create_test_files_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_modify_stylesheet_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_overview_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_rating_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_examples_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rating_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_student_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_arrowitems_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_cluster_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptedit_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptitem_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptmap_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_create_sub_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_edge_item_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_node_item_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapdisplay<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapedit<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmaprate<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_files_clicked<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_test_concept_maps_clicked<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>[1]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.at(i)(&amp;d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Incorrect argument: please supply a number from 0 to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdOut_of_range.htm">std::out_of_range</a>&amp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Incorrect argument: please supply a number from 0 to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(1<a href="CppOperatorEqual.htm">==</a>2);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>DO NEVER FORGET<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Do not use <a href="CppStdAll_of.htm">std::all_of</a>, because cross-<a href="CppCompiler.htm">compiler</a> has trouble with it<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Do not change a QGraphicItem (that is: call a paint event) outside of the paint event<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; (<b><a href="CppThis.htm">this</a></b> was the <b><a href="CppCase.htm">case</a></b> by <b><a href="CppQtSignals.htm">signals</a></b> that caused a repaint)<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; <a href="CppOperatorMinus.htm">-</a>&gt; trick: check <b><a href="CppFor.htm">for</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::paintingActive()<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Use the <b><a href="CppDefault.htm">default</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b> <b><a href="CppFor.htm">for</a></b> <a href="CppPointer.htm">pointer</a> comparison of <a href="CppSmartPointer.htm">smart pointer</a>s<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Only overload <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> T&amp;,<b><a href="CppConst.htm">const</a></b> T&amp;), instead <b><a href="CppFor.htm">for</a></b> some <a href="CppSmartPointer.htm">smart pointer</a> shortcuts<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> If a <b><a href="CppClass.htm">class</a></b> connects its <b><a href="CppQtSignals.htm">signals</a></b> to some other <b><a href="CppClass.htm">class</a></b> with a different life<a href="CppTime.htm">time</a>,<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; disconnect these <b><a href="CppQtSignals.htm">signals</a></b> in its <a href="CppDestructor.htm">destructor</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_student.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_student.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filter_str <a href="CppOperatorAssign.htm">=</a> <a href="CppStdString.htm">std::string</a>("*.") <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppQFile.htm">QFile</a>Dialog::getOpenFileName(0,"Kies een assessment bestand",<a href="CppQString.htm">QString</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_str.c_str()).toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!filename.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; file(<a href="CppRibi.htm">ribi</a>::pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gotta <b><a href="CppCatch.htm">catch</a></b> 'm all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_testconceptmap.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_testconceptmap.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 1, stop: 0 #606060, stop: 1 #ffffff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { font: 24px, \"Courier\" }"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"#title { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 32px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\";"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #888, stop: 0.1 #999, stop: 0.49 #ccc, stop: 0.5 #bbb, stop: 1 #ccc);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #444;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-radius: 7;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 24px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\";"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding-left: 5px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding-right: 5px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
&nbsp;&nbsp;pvdb::File::Test();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmainassessor.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmainassessor.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtassessormenudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>AssessorMenuDialog w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbaboutdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbaboutdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBABOUTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBABOUTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppQtAboutDialog.htm">QtAboutDialog</a> <b><a href="CppFor.htm">for</a></b> <b><a href="CppThis.htm">this</a></b> project<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; Get();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBABOUTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbaboutdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbaboutdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPixmap.htm">QPixmap</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtArrowItem.htm">qtarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> <a href="CppAbout.htm">about</a> <a href="CppOperatorAssign.htm">=</a> pvdb::MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtArrowItem.htm">QtArrowItem</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtArrowItem.htm">QtArrowItem</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtScopedDisable.htm">QtScopedDisable</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Artwork from LibreOffice");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQtAboutDialog.htm">QtAboutDialog</a>(<a href="CppAbout.htm">about</a>));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> Loom image<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;layout());<br/>
&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(d.get());<br/>
&nbsp;&nbsp;label-&gt;setPixmap(<a href="CppQPixmap.htm">QPixmap</a>(":/images/PicLoom<a href="CppAbout.htm">About</a>.png"));<br/>
&nbsp;&nbsp;d-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbassessormenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbassessormenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBASSESSORMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBASSESSORMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_assessment_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_assess_result_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBASSESSORMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbassessormenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbassessormenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconceptdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbassessormenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_create_assessment_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d(<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_assess_result_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Load assessent file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Kies een assessment bestand");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> v[0].toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCLUSTERDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCLUSTERDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The Dialog in which the user clusters concepts and examples<br/>
<a href="CppComment.htm">///</a>If the file supplied has no cluster, <b><a href="CppThis.htm">this</a></b> dialog creates a cluster<br/>
<a href="CppComment.htm">///</a>because the <a href="CppWidget.htm">widget</a> needs something to work on<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbClusterDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do some random stuff, e.g. adding some concepts with examples<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Save to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename);<br/>
<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the following keys:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/F2: edit current item<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Delete: remove current item<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/CTRL-SHIFT-T: translate to English<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_add_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_next_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbClusterDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The cluster <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a Cluster to the file <b><a href="CppIf.htm">if</a></b> it is not yet present,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> from the file its cluster<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * BuildWidget(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start saving procedure, with request of filename<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCLUSTERDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string/trim_all.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMessageBox.htm">QMessageBox</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbclusterdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::<a href="CppQt.htm">Qt</a>PvdbClusterDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbClusterDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(BuildWidget(file))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file,*m_file));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalOr.htm">||</a> !m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The dialog creates a cluster when there is no concept map"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Or keeps cluster <b><a href="CppNullptr.htm">nullptr</a></b> when there is a concept map");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the cluster <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_tree-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Cannot start a <b><a href="CppNew.htm">new</a></b> clustering when there is already a concept map created");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_tree-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Enabled/disable controls<br/>
&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>) m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled( !file-&gt;GetConceptMap() );<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setEnabled(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;ui-&gt;label_<a href="CppQuestion.htm">question</a>-&gt;setText(m_file-&gt;Get<a href="CppQuestion.htm">Question</a>().c_str());<br/>
}<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::~<a href="CppQt.htm">Qt</a>PvdbClusterDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/WARNING: assume ui-&gt;<a href="CppWidget.htm">widget</a> is not available <a href="CppAny.htm">any</a>more<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::BuildWidget(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a cluster a <b><a href="CppNew.htm">new</a></b> cluster<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::Create( {} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Read an existing cluster<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Only where there is an existing concept map, and no existing cluster, will <b><a href="CppThis.htm">this</a></b> <b><a href="CppReturn.htm">return</a></b> null<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!Get<a href="CppWidget.htm">Widget</a>()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*before,*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;DoRandomStuff();<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*before,*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetCluster(<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetCluster()-&gt;Empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalOr.htm">||</a> !m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calls the <b><a href="CppConst.htm">const</a></b> <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>To avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s [1]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1] <a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C<a href="CppOperatorIncrement.htm">++</a> (3rd edition). ISBN: 0-321-33487-6.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;Item 3, paragraph 'Avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s'<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>*&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog*&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;Get<a href="CppWidget.htm">Widget</a>());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_<a href="CppWidget.htm">widget</a>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !(e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Undo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Redo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_T)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Translate<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Association screen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_text_top-&gt;setText("If you reflect on the focus statement:");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_text_middle-&gt;setText("Which important aspects of knowledge and attitude, examples, experiences and ideals <b><a href="CppDo.htm">do</a></b> cross your mind?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_text_bottom-&gt;setText("Make a list and group the items.");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_add-&gt;setText("Insert");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_next-&gt;setText("<a href="CppConstructor.htm">Construct</a> concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_save-&gt;setText("Save list");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_add_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "This button can only be clicked when there is a <a href="CppWidget.htm">widget</a>");<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim_all_copy(<a href="CppStdString.htm">std::string</a>(" \t x \t ")) <a href="CppOperatorEqual.htm">==</a> "x");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim_all_copy(ui-&gt;edit-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text.empty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQString.htm">QString</a>List v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>v.append(text.c_str());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;addTopLevelItem(<b><a href="CppNew.htm">new</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>(v));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppAdd.htm">Add</a>(text);<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setFocus();<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorNotEqual.htm">!=</a> m_file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file-&gt;GetCluster(),*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_next_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Get<a href="CppWidget.htm">Widget</a>() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()) <a href="CppComment.htm">//</a>Save concept map, when user is all<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(cluster-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetCluster(cluster);<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>File's cluster and <a href="CppWidget.htm">widget</a>'s cluster should be the same<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>The concept map is either (1) not yet created (2) already present<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>By now, the concept map must have been (1) created (2) already present<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Same test as in <a href="CppConstructor.htm">constructor</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1) <a href="CppComment.htm">//</a>1, as node[0] is focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Edge&gt; &gt; Edges;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Node&gt; &gt; Nodes;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Regular tests<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &amp; file)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test cluster copying, <b><a href="CppIf.htm">if</a></b> there<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file-&gt;GetCluster(),*before));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;<a href="CppAdd.htm">Add</a>("Modification!");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!IsEqual(*file-&gt;GetCluster(),*before)); <a href="CppComment.htm">//</a>Does not work, must obtain the cluster from the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster(),*before)); <a href="CppComment.htm">//</a><a href="CppWidget.htm">Widget</a> updates the cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &amp; file)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get(); <a href="CppComment.htm">//</a>.get() needed <b><a href="CppFor.htm">for</a></b> cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get(); <a href="CppComment.htm">//</a>.get() needed <b><a href="CppFor.htm">for</a></b> cross<a href="CppCompiler.htm">compiler</a><br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file-&gt;GetCluster(),*before));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit-&gt;setText("modification");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d-&gt;ui-&gt;button_add-&gt;isEnabled())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;on_button_add_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*before,*d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbClusterDialog must be enabled <b><a href="CppIf.htm">if</a></b> there is no concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( {0,1,2} );<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> is enabled only when there is no ConceptMap");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbClusterDialog must be disabled <b><a href="CppIf.htm">if</a></b> there are more nodes in the concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( { 0,1,2 } );<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_1 <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_1 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_2 <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_2 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_d(ConceptFactory().Create("Concept F"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_e(ConceptFactory().GetTests().at(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_f(ConceptFactory().GetTests().at(index_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_a(CenterNodeFactory().CreateFromStrings(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_b(NodeFactory().GetTest(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_c(NodeFactory().GetTest(index_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Nodes nodes <a href="CppOperatorAssign.htm">=</a> { node_a, node_b, node_c };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_a(EdgeFactory().Create(NodeFactory().Create(concept_d,1.2,3.4),nodes.at(0),<b><a href="CppFalse.htm">false</a></b>,nodes.at(1),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_b(EdgeFactory().Create(NodeFactory().Create(concept_e,2.3,4.5),nodes.at(1),<b><a href="CppFalse.htm">false</a></b>,nodes.at(2),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_c(EdgeFactory().Create(NodeFactory().Create(concept_f,3.4,5.6),nodes.at(2),<b><a href="CppFalse.htm">false</a></b>,nodes.at(0),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Edges edges <a href="CppOperatorAssign.htm">=</a> { edge_a, edge_b, edge_c };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory().Create(nodes,edges));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> is disabled when there is a filled ConceptMap");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(!m_file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> arg1.size() &gt; 0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de clustering op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterwidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
 <a href="CppIfndef.htm">#ifndef</a> QTPVDBCLUSTERWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCLUSTERWIDGET_H<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTreeWidget.htm">QTreeWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQTreeWidget.htm">QTreeWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a top-level item<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; text);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do something random<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the cluster (after reading from the dialog)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; GetCluster();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> dropEvent(QDropEvent *event);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block: <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item must be added instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> addTopLevelItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> *item) { <a href="CppQTreeWidget.htm">QTreeWidget</a>::addTopLevelItem(item); }<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The cluster<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; m_cluster;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Build the <a href="CppWidget.htm">widget</a> from the cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> BuildCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Find out the depth of an item<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetDepth(<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> item) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write the <a href="CppWidget.htm">widget</a> its data to the cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> WriteToCluster();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCorrectFlags() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCLUSTERWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterwidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> with the only <a href="CppFunction.htm">function</a> of storing a cmap::Competency additionally<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Competency competency,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> is_<b><a href="CppCompl.htm">compl</a></b>ex,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_<b><a href="CppCompl.htm">compl</a></b>exity,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_concreteness,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_specifity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>(0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_competency(competency),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_is_<b><a href="CppCompl.htm">compl</a></b>ex(is_<b><a href="CppCompl.htm">compl</a></b>ex),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_<b><a href="CppCompl.htm">compl</a></b>exity(rating_<b><a href="CppCompl.htm">compl</a></b>exity),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_concreteness(rating_concreteness),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_specifity(rating_specifity)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Competency m_competency;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> m_is_<b><a href="CppCompl.htm">compl</a></b>ex;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_<b><a href="CppCompl.htm">compl</a></b>exity;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_concreteness;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_specifity;<br/>
};<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQTreeWidget.htm">QTreeWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(cluster)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Must have a cluster to work on");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Hide the header<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setHeaderHidden(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the row colors alternate<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAlternatingRowColors(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow items to be drag and dropped inside of the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setDragDropMode(QAbstractItemView::InternalMove);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the drag and drop be animated<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAnimated(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;BuildCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSignalMacro.htm">SIGNAL</a>(itemChanged(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSLOT.htm">SLOT</a>(RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>)));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Allow word-wrapping<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWordWrap(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::<a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; text)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d,<b><a href="CppTrue.htm">true</a></b>,-1,-1,-1);<br/>
&nbsp;&nbsp;item-&gt;setText(0,text.c_str());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(item);<br/>
&nbsp;&nbsp;SetCorrectFlags();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cmap::Competency::misc,<b><a href="CppTrue.htm">true</a></b>,0,1,2);<br/>
&nbsp;&nbsp;top-&gt;setText(0,"SOMETEXT");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> child_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d,<b><a href="CppTrue.htm">true</a></b>,-1,0,2);<br/>
&nbsp;&nbsp;child_item-&gt;setText(0,"SOMETEXT");<br/>
&nbsp;&nbsp;top-&gt;addChild(child_item);<br/>
&nbsp;&nbsp;child_item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(top);<br/>
&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::dropEvent(QDropEvent *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQTreeWidget.htm">QTreeWidget</a>::dropEvent(event);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fix the possibility of dropping a tree with depth three<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i));&nbsp;&nbsp;<a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(j &lt; top-&gt;childCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> top-&gt;child(j) has children<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (top-&gt;child(j)-&gt;childCount() &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move top-&gt;child(j) to top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> clone <a href="CppOperatorAssign.htm">=</a> top-&gt;child(j)-&gt;clone(); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> clone <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(top-&gt;child(j)-&gt;clone()); <a href="CppComment.htm">//</a>BUG 2012-12-29<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(clone);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(clone);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;removeChild(top-&gt;child(j));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j <a href="CppOperatorAssign.htm">=</a> n_child <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorAssign.htm">=</a> n_top <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>End the <b><a href="CppWhile.htm">while</a></b> loop <b><a href="CppIf.htm">if</a></b> no parents were moved<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (done) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that there are no items at depth three<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (top-&gt;child(j)-&gt;childCount() &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not find a child item within a child item");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;SetCorrectFlags();<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>Process all items<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::SetCorrectFlags() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let all top items <b><a href="CppAuto.htm">auto</a></b>-expand<br/>
&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow dropping on top-level items<br/>
&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top)<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top-&gt;child(j))<a href="CppOperatorEqual.htm">==</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disallow dropping on non-top-level items<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;child(j)-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::GetCluster()<br/>
{<br/>
&nbsp;&nbsp;WriteToCluster();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_cluster;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::GetDepth(<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> item) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> depth <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * copy <a href="CppOperatorAssign.htm">=</a> item-&gt;parent();<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(copy)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>depth;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy <a href="CppOperatorAssign.htm">=</a> copy-&gt;parent();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> depth;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Without <b><a href="CppThis.htm">this</a></b> seemingly useless <a href="CppMemberFunction.htm">member function</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>the <a href="CppWidget.htm">widget</a> cannot be edited<br/>
&nbsp;&nbsp;<a href="CppQTreeWidget.htm">QTreeWidget</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::BuildCluster()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;isHeaderHidden());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;alternatingRowColors());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;dragDropMode() <a href="CppOperatorEqual.htm">==</a> QAbstractItemView::InternalMove);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;isAnimated());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;clear();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; v <a href="CppOperatorAssign.htm">=</a> m_cluster-&gt;Get();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d, <a href="CppComment.htm">//</a>A concept is not classified in competencies<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetIsComplex(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingComplexity(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingConcreteness(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingSpecificity()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setText(0,concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Example&gt; &gt; examples <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(examples.begin(),examples.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[top,<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> child_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;GetCompetency(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;GetIsComplex(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1, <a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> <b><a href="CppCompl.htm">compl</a></b>exity&nbsp;&nbsp; <a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1, <a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> concreteness <a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1&nbsp;&nbsp;<a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> specifity&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child_item-&gt;setText(0,example-&gt;GetText().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;addChild(child_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child_item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>* item,<b><a href="CppInt.htm">int</a></b> col)<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (item-&gt;text(col).isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; c: pvdb::ClusterFactory::GetTests())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!c) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> w(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w.topLevelItemCount() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(c-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(w.GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::Competency::misc,<b><a href="CppTrue.htm">true</a></b>,0,1,2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(0,<a href="CppQString.htm">QString</a>("An extra line"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.addTopLevelItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w.topLevelItemCount() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(c-&gt;Get().size()) <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; e <a href="CppOperatorAssign.htm">=</a> w.GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorEqual.htm">==</a> e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( <b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*e));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*e));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test <b><a href="CppCompl.htm">compl</a></b>eted successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::WriteToCluster()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; concepts;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> top-&gt;text(0).toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt; &gt; examples;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(top-&gt;child(j));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency competency <a href="CppOperatorAssign.htm">=</a> pvdb_item ? pvdb_item-&gt;m_competency : cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top-&gt;child(j))<a href="CppOperatorEqual.htm">==</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ExampleFactory().Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;child(j)-&gt;text(0).toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;examples.push_back(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>FIX 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concepts.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConceptFactory().Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::ExamplesFactory().Create(examples),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_is_<b><a href="CppCompl.htm">compl</a></b>ex : <b><a href="CppTrue.htm">true</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_<b><a href="CppCompl.htm">compl</a></b>exity : <a href="CppOperatorMinus.htm">-</a>1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_concreteness : <a href="CppOperatorMinus.htm">-</a>1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_specifity : <a href="CppOperatorMinus.htm">-</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concepts.back());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_cluster-&gt;SetConcepts(concepts);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_top <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_cluster-&gt;Get().size())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "As much top-level items in a <a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> as Concepts in a Cluster");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> NOT_NOW_20140805_1204<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do random stuff, <b><a href="CppFor.htm">for</a></b> example, add a node and an edge (used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a>)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::<a href="CppQt.htm">Qt</a>ConceptMap * Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>ConceptMap * Get<a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the user need to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to m_file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Shuffle to concepts (used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a>)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Shuffle();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/CTRL-SHIFT-T: translate to English<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_test_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must we go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept map <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>EditConceptMap * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; CreateFromCluster(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Cluster&gt;&amp; cluster);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppStatic.htm">static</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DON'T USE: puts a <b><a href="CppNew.htm">new</a></b> ConceptMap in file<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>EditConceptMap * Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/NEW 2013-01-07<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnConceptMapItemRequestsEdit(cmap::<a href="CppQt.htm">Qt</a>ConceptMapElement* <b><a href="CppConst.htm">const</a></b> item);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> NOT_NOW_20140805_1204<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> NOT_NOW_20140805_1204<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMessageBox.htm">QMessageBox</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapelement.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>Collect all <a href="CppQGraphicsItem.htm">QGraphicsItem</a>s with <b><a href="CppClass.htm">class</a></b> T in an unorderly way<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;T*&gt; Collect(<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>* <b><a href="CppConst.htm">const</a></b> scene)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;T*&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; items <a href="CppOperatorAssign.htm">=</a> scene-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdTransform.htm">std::transform</a>(items.begin(),items.end(),<a href="CppStdBack_inserter.htm">std::back_inserter</a>(v),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;T*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;v.erase(<a href="CppStdRemove.htm">std::remove</a>(v.begin(),v.end(),<b><a href="CppNullptr.htm">nullptr</a></b>),v.end());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount.htm">std::count</a>(v.begin(),v.end(),<b><a href="CppNullptr.htm">nullptr</a></b>)<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(file))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap()-&gt;GetNodes().empty()); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap()-&gt;FindCenterNode() <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode"); <a href="CppComment.htm">//</a>TODO RJCB: put back in<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorEqual.htm">==</a> m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!Collect&lt;cmap::<a href="CppQt.htm">Qt</a>Node&gt;(m_<a href="CppWidget.htm">widget</a>-&gt;scene()).empty()); <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_conceptmapitem_requests_edit.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::OnConceptMapItemRequestsEdit,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::CreateFromCluster(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; &gt; nodes {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cmap::ConceptMap::CreateNodes(<a href="CppQuestion.htm">question</a>, {} )<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; &gt; edges;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; &gt;&amp; v <a href="CppOperatorAssign.htm">=</a> cluster-&gt;Get();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node <a href="CppOperatorAssign.htm">=</a> cmap::NodeFactory().Create(v[i],x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;nodes.push_back(node);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorPlus.htm">+</a> 1 <a href="CppOperatorEqual.htm">==</a> nodes.size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Assume the ConceptMap has as much nodes as the cluster has concepts <a href="CppOperatorPlus.htm">+</a> one focal <a href="CppQuestion.htm">question</a>");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ConceptMapFactory::Create(nodes,edges)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p-&gt;IsValid());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>EditConceptMap * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> <a href="CppTrace.htm">trace</a>_verbose <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppTrace.htm">trace</a>_verbose) { <a href="CppTRACE.htm">TRACE</a>("User starts building a concept map from scratch"); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> File::CreateConceptMap(file-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppTrace.htm">trace</a>_verbose) { <a href="CppTRACE.htm">TRACE</a>("User supplied a filled-in cluster"); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::CreateFromCluster(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppQuestion.htm">Question</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetCluster()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster()-&gt;Get().size() <a href="CppOperatorPlus.htm">+</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> (concept_map-&gt;GetNodes().size())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "As much cluster items as nodes <a href="CppOperatorPlus.htm">+</a> focus <a href="CppQuestion.htm">question</a>");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created from concept map<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>EditConceptMap * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>EditConceptMap(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do random stuff<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_before <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_before <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;DoRandomStuff();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_after <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_after <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_edges_after &gt; n_edges_before);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_nodes_after &gt; n_nodes_before);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calls the <b><a href="CppConst.htm">const</a></b> <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>To avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s [1]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1] <a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C<a href="CppOperatorIncrement.htm">++</a> (3rd edition). ISBN: 0-321-33487-6.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;Item 3, paragraph 'Avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s'<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap*&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog*&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;Get<a href="CppWidget.htm">Widget</a>()); <a href="CppComment.htm">//</a>?Why Dialog<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { on_button_save_clicked(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !(e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Undo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Redo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_T)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Translate<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("<a href="CppConstructor.htm">Construct</a>ion screen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setText("Save as PDF-format");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_save-&gt;setText("Save concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog d(<b><a href="CppThis.htm">this</a></b>-&gt;m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::OnConceptMapItemRequestsEdit(cmap::<a href="CppQt.htm">Qt</a>ConceptMapElement* <b><a href="CppConst.htm">const</a></b> item)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>ConceptMapConceptEditDialog d(item-&gt;GetNode()-&gt;GetConcept());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>item-&gt;GetConcept()-&gt;m_signal_examples_changed(item-&gt;GetConcept().get()); <a href="CppComment.htm">//</a>NEW 2013-01-08 21:40<br/>
&nbsp;&nbsp;item-&gt;m_signal_item_has_updated(item);<br/>
&nbsp;&nbsp;item-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Temporarily disable to <a href="CppWidget.htm">widget</a>, otherwise saving cannot succeed<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppScope.htm">scope</a>d_disable1(Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&gt; <a href="CppScope.htm">scope</a>d_disable2(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Save() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetConceptMap(concept_map);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Shuffle()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;Shuffle();<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> NOT_NOW_20140805_1204<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filled in concept map focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save file to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Fill in the concept map focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;edit-&gt;text().toStdString();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
<br/>
&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setText(<a href="CppQuestion.htm">question</a>.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;ui-&gt;button_save-&gt;setEnabled(!arg1.isEmpty());<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_assessment_<b><a href="CppCompl.htm">compl</a></b>ete_clicked();<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The focal concept map <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_<a href="CppQuestion.htm">question</a>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessmentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu{<b><a href="CppFalse.htm">false</a></b>},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>{}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::on_button_create_assessment_<b><a href="CppCompl.htm">compl</a></b>ete_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(m_<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> d.Get<a href="CppQuestion.htm">Question</a>();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AnyEditChanged();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> m_file-&gt;Get<a href="CppQuestion.htm">Question</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorEqual.htm">==</a> 4)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;setText(v[0].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;setText(v[1].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;setText(v[2].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_<b><a href="CppCompl.htm">compl</a></b>ete-&gt;setText(v[3].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_<b><a href="CppCompl.htm">compl</a></b>ete-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_1,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_2,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_3,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_<b><a href="CppCompl.htm">compl</a></b>ete,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::AnyEditChanged()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;m_file.Set<a href="CppQuestion.htm">Question</a>s(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_<b><a href="CppCompl.htm">compl</a></b>ete-&gt;text().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::on_button_save_clicked()<br/>
{<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbdisplay.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbdisplay.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBDISPLAY_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBDISPLAY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppFunction.htm">Function</a>s <b><a href="CppFor.htm">for</a></b> printing<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Display<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayRatedConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayExamples(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayValues(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBDISPLAY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbdisplay.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbdisplay.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;QHeaderView&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTableWidget.htm">QTableWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapcompetency.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;table-&gt;setRowCount(sz <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1 to skip focus <a href="CppQuestion.htm">question</a> node at index 0<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=1; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> row <a href="CppOperatorAssign.htm">=</a> i-1; <a href="CppComment.htm">//</a>-1 to skip focus <a href="CppQuestion.htm">question</a> node at index 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap()-&gt;GetNodes().at(i)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setVerticalHeaderItem(row,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating <b><a href="CppCompl.htm">compl</a></b>exity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingComplexity()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,0,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating concreteness<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingConcreteness()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,1,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating specificity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingSpecificity()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,2,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMinimumWidth(300);<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMaximumWidth(300);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(0,100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(1,100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(2,100);<br/>
&nbsp;&nbsp;table-&gt;setMaximumWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(2)<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
<br/>
}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples' icons<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> table-&gt;rowCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency competency <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;cmap::Competency&gt;(i <a href="CppOperatorPlus.htm">+</a> 1); <a href="CppComment.htm">//</a>Skip 0 <a href="CppOperatorEqual.htm">==</a> un<a href="CppInitialize.htm">initialize</a>d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> cmap::Competencies().ToStrDutch(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a> icon <a href="CppOperatorAssign.htm">=</a> cmap::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(icon);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setVerticalHeaderItem(i,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples' competencies<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdMap.htm">std::map</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt; cnts;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt; node: <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetNodes()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Example&gt; example: node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> cnts.find(example-&gt;GetCompetency());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (iter <a href="CppOperatorNotEqual.htm">!=</a> cnts.end())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>(*iter).second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency competency <a href="CppOperatorAssign.htm">=</a> example-&gt;GetCompetency();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnts.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(competency,1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(cnts.begin(),cnts.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init,<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init <a href="CppOperatorPlusAssign.htm">+=</a> p.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sum <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p: cnts)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> col <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> row <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(p.first) <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppContinue.htm">continue</a></b>; <a href="CppComment.htm">//</a>0 <a href="CppOperatorEqual.htm">==</a> un<a href="CppInitialize.htm">initialize</a>d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row &lt; table-&gt;rowCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(p.second) <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> percentage <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppStd.htm">std</a>::round(100.0 * f));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(percentage);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,col,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt; &gt; all_nodes <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetNodes());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> all_sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(all_nodes.size());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;all_nodes.erase(all_nodes.begin());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(all_nodes.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sz <a href="CppOperatorEqual.htm">==</a> all_sz <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt; &gt; nodes <a href="CppOperatorAssign.htm">=</a> all_nodes;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(nodes.size());&nbsp;&nbsp;<a href="CppComment.htm">//</a>Constant 'c'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concreteness experimental: C_e at row <a href="CppOperatorAssign.htm">=</a> 1, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>50.0 * sum_rated_concreteness <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_concreteness <a href="CppComment.htm">//</a>Constant 'k_c'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingConcreteness();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> c_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum_rated_concreteness)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(c_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(1,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concreteness eStimated: C_s at row <a href="CppOperatorAssign.htm">=</a> 1, col <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>C_s <a href="CppOperatorAssign.htm">=</a> 100.0 * n_examples <a href="CppOperatorDivide.htm">/</a> (n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Edge&gt; &gt; edges <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetEdges());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(edges.begin(),edges.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(edge-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_relations_not_to_focus <a href="CppComment.htm">//</a>Constant 'r'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdCount_if.htm">std::count_if</a>(edges.begin(),edges.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> edge-&gt;GetFrom() <a href="CppOperatorNotEqual.htm">!=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> edge-&gt;GetTo() <a href="CppOperatorNotEqual.htm">!=</a> 0; <a href="CppComment.htm">//</a>Not connected to focus <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppComment.htm">//</a>Constant 'v'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> n_nodes_examples <a href="CppOperatorPlus.htm">+</a> n_edges_examples;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> c_s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(c_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(1,1,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Complexity experimental value: X_e at row <a href="CppOperatorAssign.htm">=</a> 0, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>50.0 * sum_rated_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppComment.htm">//</a>Constant 'k_i'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingComplexity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum_rated_<b><a href="CppCompl.htm">compl</a></b>exity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(x_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(0,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppCompl.htm">compl</a></b>eXity eStimated: X_s at row <a href="CppOperatorAssign.htm">=</a> 0, col <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>x_s <a href="CppOperatorAssign.htm">=</a> ((2*n_relations_not_to_focus)/(n_nodes*(n_nodes-1))))^0.25*100%<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Edge&gt; &gt; edges <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetEdges());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_relations_not_to_focus <a href="CppComment.htm">//</a>Constant 'r'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdCount_if.htm">std::count_if</a>(edges.begin(),edges.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> edge-&gt;GetFrom() <a href="CppOperatorNotEqual.htm">!=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> edge-&gt;GetTo() <a href="CppOperatorNotEqual.htm">!=</a> 0; <a href="CppComment.htm">//</a>Not connected to focus <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes &gt; 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* <a href="CppStdPow.htm">std::pow</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_relations_not_to_focus * 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes * (n_nodes <a href="CppOperatorMinus.htm">-</a> 1) ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.25)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(x_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(0,1,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Experimental specificity: s_e at row <a href="CppOperatorAssign.htm">=</a> 2, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>s_e <a href="CppOperatorAssign.htm">=</a> 50.0 * sum_rated_specificity <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_specificity <a href="CppComment.htm">//</a>Constant 'k_s'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingSpecificity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> s_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(50 * sum_rated_specificity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(s_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(2,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Richness Experimental: r_e at row <a href="CppOperatorAssign.htm">=</a> 3, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>r_e <a href="CppOperatorAssign.htm">=</a> ((a <a href="CppOperatorPlus.htm">+</a> b) <a href="CppOperatorDivide.htm">/</a> 14) * 100%<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>a <a href="CppOperatorAssign.htm">=</a> number of different Competencies<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>b <a href="CppOperatorAssign.htm">=</a> number of Competencies between 1/12th and 1/4th of number of examples<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdMap.htm">std::map</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt; m;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the competencies<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Node&gt;&amp; node: nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> cmap::Example&gt; example: node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency competency <a href="CppOperatorAssign.htm">=</a> example-&gt;GetCompetency();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> m.find(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (iter <a href="CppOperatorNotEqual.htm">!=</a> m.end())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>(*iter).second; <a href="CppComment.htm">//</a>Tally the known competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(competency,1)); <a href="CppComment.htm">//</a>Tally the first of <b><a href="CppThis.htm">this</a></b> competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove category 'misc'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> <a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorAssign.htm">=</a> m.count(cmap::Competency::misc);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m.erase(cmap::Competency::misc);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppDebug.htm">debug</a>_m_size_new <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( ( <a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorEqual.htm">==</a> <a href="CppDebug.htm">debug</a>_m_size_new <a href="CppOperatorPlus.htm">+</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a> (!<a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorEqual.htm">==</a> <a href="CppDebug.htm">debug</a>_m_size_new&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> a <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAccumulate.htm">std::accumulate</a>(m.begin(),m.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init,<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> p.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> my_min <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppStdCeil.htm">std::ceil</a>( <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples) <a href="CppOperatorDivide.htm">/</a> 12.0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> my_max <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppStdFloor.htm">std::floor</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples) <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;4.0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> b <a href="CppOperatorAssign.htm">=</a> <a href="CppStdCount_if.htm">std::count_if</a>(m.begin(),m.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[my_min,my_max](<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;cmap::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p.second <a href="CppOperatorGreaterEqual.htm">&gt;=</a> my_min <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> p.second <a href="CppOperatorLessEqual.htm">&lt;=</a> my_max;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> r_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0 * ( <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(a+b) <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(r_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(3,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMaximumWidth(100);<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(0,200);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(1,200);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(table-&gt;verticalHeader()-&gt;width() <a href="CppOperatorEqual.htm">==</a> 100);<br/>
&nbsp;&nbsp;table-&gt;setMaximumWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(1)<br/>
&nbsp;&nbsp;);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbfiledialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbfiledialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQFile.htm">QFile</a>Dialog;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>FileDialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnumClass.htm">enum class</a></b> FileType { cmp, pdf };<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQFile.htm">QFile</a>Dialog to open <a href="ProjectBrainweaver.htm">Brainweaver</a> files with<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; GetOpenFileDialog();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQFile.htm">QFile</a>Dialog to save <a href="ProjectBrainweaver.htm">Brainweaver</a> files with<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; GetSaveFileDialog(<b><a href="CppConst.htm">const</a></b> FileType type);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbfiledialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbfiledialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; <a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQFile.htm">QFile</a>Dialog);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> ViewMode { Detail, List };<br/>
&nbsp;&nbsp;d-&gt;setViewMode(<a href="CppQFile.htm">QFile</a>Dialog::Detail);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> FileMode { AnyFile, ExistingFile, Directory, ExistingFiles, DirectoryOnly };<br/>
&nbsp;&nbsp;d-&gt;setFileMode(<a href="CppQFile.htm">QFile</a>Dialog::ExistingFile);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> AcceptMode { AcceptOpen, AcceptSave };<br/>
&nbsp;&nbsp;d-&gt;setAcceptDrops(<a href="CppQFile.htm">QFile</a>Dialog::AcceptOpen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> Option { ShowDirsOnly, DontResolveSym<a href="CppLink.htm">link</a>s, DontConfirmOverwrite, DontUseSheet, DontUseNativeDialog, ReadOnly, HideNameFilterDetails }<br/>
&nbsp;&nbsp;d-&gt;setOptions(<a href="CppQFile.htm">QFile</a>Dialog::ReadOnly);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> namefile <a href="CppOperatorAssign.htm">=</a> "<a href="ProjectBrainweaver.htm">Brainweaver</a> concept map (*."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension() <a href="CppOperatorPlus.htm">+</a> ")";<br/>
<br/>
&nbsp;&nbsp;d-&gt;setNameFilter(namefile.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen center<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>d-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> d-&gt;rect().center() );<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; <a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<b><a href="CppConst.htm">const</a></b> FileType type)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQFile.htm">QFile</a>Dialog);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> ViewMode { Detail, List };<br/>
&nbsp;&nbsp;d-&gt;setViewMode(<a href="CppQFile.htm">QFile</a>Dialog::Detail);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> FileMode { AnyFile, ExistingFile, Directory, ExistingFiles, DirectoryOnly };<br/>
&nbsp;&nbsp;d-&gt;setFileMode(<a href="CppQFile.htm">QFile</a>Dialog::AnyFile);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> AcceptMode { AcceptOpen, AcceptSave };<br/>
&nbsp;&nbsp;d-&gt;setAcceptDrops(<a href="CppQFile.htm">QFile</a>Dialog::AcceptSave);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> Option { ShowDirsOnly, DontResolveSym<a href="CppLink.htm">link</a>s, DontConfirmOverwrite, DontUseSheet, DontUseNativeDialog, ReadOnly, HideNameFilterDetails }<br/>
&nbsp;&nbsp;d-&gt;setOptions( <a href="CppQFile.htm">QFile</a>Dialog::DontUseNativeDialog ); <a href="CppComment.htm">//</a>Workaround <b><a href="CppFor.htm">for</a></b> https:<a href="CppComment.htm">//</a><a href="CppBug.htm">bug</a>reports.qt-project.org/browse/QTBUG-29248<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> namefile;<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> FileType::cmp:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namefile <a href="CppOperatorAssign.htm">=</a> "<a href="ProjectBrainweaver.htm">Brainweaver</a> concept map (*."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension() <a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> FileType::pdf:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namefile <a href="CppOperatorAssign.htm">=</a> "Portable document format (*.pdf)";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;d-&gt;setNameFilter(namefile.c_str());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbfwd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbfwd.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBFWD_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBFWD_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQRegExp.htm">QRegExp</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbArrow;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtArrowItem.htm">QtArrowItem</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBFWD_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> and all other <a href="CppQDialog.htm">QDialog</a>s<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_assessor_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_test_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_modify_stylesheet_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_overview_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_examples_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_student_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_conceptmap_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_arrowitems_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_cluster_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_conceptmaps_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_create_sub_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_view_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file to work on<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The mode at which the child dialogs are displayed<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_show_child_dialogs_modal;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconcepttallydialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconceptdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateexamplesdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewfilesdialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtconceptmapviewtestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolStyleSheetSetter.htm">stylesheetsetter</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtArrowItems.htm">testqtarrowitems</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtRoundedEditRectItem.htm">testqtroundededitrectitem</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtRoundedTextRectItem.htm">testqtroundedtextrectitem</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbmenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::<a href="CppQt.htm">Qt</a>PvdbMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_show_child_dialogs_modal(<b><a href="CppTrue.htm">true</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(e);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_assessor_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain an empty file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[17] to check <b><a href="CppFor.htm">for</a></b> subconcept maps with many examples<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[18] to check <b><a href="CppFor.htm">for</a></b> subconcept maps with large texts<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[19] to check <b><a href="CppFor.htm">for</a></b> connection to focus with ...<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(19);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set a concept map once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain a random sub-concept-map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; &gt; concept_maps <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap()-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display <b><a href="CppThis.htm">this</a></b> random concept map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> concept_maps.size();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> concept_maps[ index ];<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!concept_map <a href="CppOperatorLogicalOr.htm">||</a> concept_map-&gt;IsValid())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Expect no or a valid concept map");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create and show the dialog<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>RateConceptDialogNewName&gt; d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptDialogNewName(concept_map));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[17] to check <b><a href="CppFor.htm">for</a></b> subconcept maps with many examples<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[18] to check <b><a href="CppFor.htm">for</a></b> subconcept maps with large texts<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>[19] to check <b><a href="CppFor.htm">for</a></b> connection to focus with ...<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(19);<br/>
&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_examples_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> ConceptFactory().GetTests().at(index);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>RateExamplesDialogNewName&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateExamplesDialogNewName(concept));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> test <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(test &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(test);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_student_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_show_child_dialogs_modal) <b><a href="CppReturn.htm">return</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Kies een assessment bestand");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> v[0].toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); } <a href="CppComment.htm">//</a>For testing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gotta <b><a href="CppCatch.htm">catch</a></b> 'm all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_cluster_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "qtvdbmenudialog<a href="CppImplementationFile.htm">.cpp</a> 79?";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(File::CreateConceptMap(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set concept map once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_overview_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> old_title <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;windowTitle();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Loading, please wait...");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverviewDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverviewDialog d; <a href="CppComment.htm">//</a>Creates all screens, does all tests<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Press all buttons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_show_child_dialogs_modal <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog * <b><a href="CppConst.htm">const</a></b> ui <a href="CppOperatorAssign.htm">=</a> d.ui;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPushButton.htm">QPushButton</a>*&gt; buttons<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Duplication of tests, the ones I am most interested in now<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Normal alphabetical order of tests<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_about,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_assessor,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_create_test_files,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_modify_stylesheet,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_overview,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print_rating,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_examples,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rating,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_student,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_arrowitems,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptmap,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_create_sub_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptmaps,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_view_files<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> n_buttons <a href="CppOperatorAssign.htm">=</a> buttons.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>n_buttons; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; buttons.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a> buttons[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (button-&gt;isEnabled()) button-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>THE MULTI DIALOG TESTS HERE<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>MULTI DIALOG TEST #1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Save<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "DEBUG_QUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTestFileName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> "DEBUG_NAME";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.SetName(name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.GetName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Save<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<b><a href="CppIf.htm">if</a></b> no concept map was present");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Cluster <a href="CppWidget.htm">widget</a> should be disabled <b><a href="CppFor.htm">for</a></b> a file with a filled in ConceptMap");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Long test #2<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with clustering<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Start with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Save<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "DEBUG_QUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTestFileName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> "DEBUG_NAME";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.SetName(name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.GetName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with clustering<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Start with concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Save<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>7) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Cluster <a href="CppWidget.htm">widget</a> should be disabled <b><a href="CppFor.htm">for</a></b> a file with a filled in ConceptMap");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_arrowitems_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_create_test_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the human student concept maps<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; ; <a href="CppOperatorIncrement.htm">++</a>i)&nbsp;&nbsp;<a href="CppComment.htm">//</a>Break when no file is found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Base 1 counting<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i+1) <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the file from <a href="CppQt.htm">Qt</a> resources to local file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> qtfilename <a href="CppOperatorAssign.htm">=</a> ":/files/" <a href="CppOperatorPlus.htm">+</a> filename;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qtfile(qtfilename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the artificial concept maps<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i <a href="CppOperatorPlus.htm">+</a> 5)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Save(s);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_modify_stylesheet_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolStyleSheetSetter.htm">StyleSheetSetter</a>MainDialog d(qApp-&gt;styleSheet().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
&nbsp;&nbsp;qApp-&gt;setStyleSheet(d.GetStyleSheet().c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;on_button_create_test_files_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> "1." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;on_button_create_test_files_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> "1." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> cmap::<a href="CppQt.htm">Qt</a>RateConceptTallyDialogNewName::Create<a href="ToolTestConceptMap.htm">TestConceptMap</a>();<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>RateConceptTallyDialogNewName&gt; d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptTallyDialogNewName(concept_map));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_create_sub_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptmaps_clicked()<br/>
{<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> test <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(test &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(test);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBOVERVIEWDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBOVERVIEWDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBOVERVIEWDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverview<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent)<br/>
{<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>;<br/>
&nbsp;&nbsp;layout-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(e);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewwidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBOVERVIEWWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBOVERVIEWWIDGET_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create all dialogs<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; GetAllDialogs();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/NASTY BUG ALERT: It crashes <a href="CppWine.htm">Wine</a> <b><a href="CppIf.htm">if</a></b> m_dialogs is created as<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>&gt; &gt; m_dialogs;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/No idea why...<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; m_dialogs;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBOVERVIEWWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewwidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsTextItem.htm">QGraphicsTextItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverview<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconcepttallydialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconceptdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateexamplesdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessment<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstart<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsView.htm">QGraphicsView</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>,parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialogs(GetAllDialogs())<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(m_dialogs.begin(),m_dialogs.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdAll_of.htm">std::all_of</a>(m_dialogs.begin(),m_dialogs.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> y_sum <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> max_width <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> m_dialogs.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> dialog to <a href="CppWidget.htm">widget</a> <b><a href="CppExplicit.htm">explicit</a></b>ly <b><a href="CppFor.htm">for</a></b> <a href="CppWine.htm">Wine</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialogs[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> m_dialogs[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> proxy <a href="CppOperatorAssign.htm">=</a> scene()-&gt;addWidget(<a href="CppWidget.htm">widget</a>,<a href="CppQt.htm">Qt</a>::Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(proxy);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;proxy-&gt;setPos(32,y_sum);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_sum <a href="CppOperatorPlusAssign.htm">+=</a> proxy-&gt;rect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_sum <a href="CppOperatorPlusAssign.htm">+=</a> 64; <a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a>ed by window height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;max_width <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(max_width,proxy-&gt;rect().width());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> window_title<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_dialogs[i]-&gt;windowTitle().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_dialogs[i]-&gt;objectName().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;proxy-&gt;setWindowTitle(window_title.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(0,0,max_width,y_sum);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::GetAllDialogs()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; v;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(FileFactory::GetTests().at(index));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMapConceptEditDialog(ConceptFactory().GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(cmap::ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(FileFactory().GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 18;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptDialogNewName(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 18;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptTallyDialogNewName(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(pvdb::FileFactory::GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateExamplesDialogNewName(ConceptFactory().GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog(FileFactory::GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> REALLY_DEMONSTRATE_INFINITE_RECURSION_7236834589746034<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>*(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(pvdb::FileFactory::GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::FileFactory::GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(pvdb::FileFactory::GetTests().at(index)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_ALSO_SHOW_TEST_DIALOGS<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="ToolTestConceptMap.htm">TestConceptMap</a>Edit<a href="CppWidget.htm">Widget</a>Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="ToolTestConceptMap.htm">TestConceptMap</a>Rate<a href="CppWidget.htm">Widget</a>Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppStdAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> p; } )); <a href="CppComment.htm">//</a>MAJ<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image(scene()-&gt;sceneRect().size().toSize(), <a href="CppQImage.htm">QImage</a>::Format_ARGB32); <a href="CppComment.htm">//</a> Create the image with the exact size of the shrunk scene<br/>
&nbsp;&nbsp;image.fill(<a href="CppQt.htm">Qt</a>::transparent);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> Start all pixels transparent<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(&amp;image);<br/>
&nbsp;&nbsp;scene()-&gt;render(&amp;painter);<br/>
&nbsp;&nbsp;image.save("file_name.png");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current work, optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<a href="CppComment.htm">///</a>This dialog will not be visible <b><a href="CppFor.htm">for</a></b> humans at all in release<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog is optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Print();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> fitConceptMap();<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>DisplayConceptMap * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratedconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>DisplayConceptMap(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow a <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a> to have no <a href="CppQt.htm">Qt</a>ExamplesItem<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>This allows to omit showing these in the PDF <a href="CppVersion.htm">version</a>s used <b><a href="CppFor.htm">for</a></b> printing (#205)<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;RemoveExamplesItem();<br/>
<br/>
&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;("Concept map van "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdTime_t.htm">std::time_t</a> my_<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdTime.htm">std::time</a>( &amp;my_<a href="CppTime.htm">time</a> );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdTm.htm">std::tm</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppTime.htm">time</a>_and_date <a href="CppOperatorAssign.htm">=</a> <a href="CppStdLocaltime.htm">std::localtime</a>(&amp;my_<a href="CppTime.htm">time</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAsctime.htm">std::asctime</a>(<a href="CppTime.htm">time</a>_and_date);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_date-&gt;setText( ("Datum: " <a href="CppOperatorPlus.htm">+</a> s).c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Much work done in ShowEvent<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a>::singleShot(1000,<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(fitConceptMap()));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; v;<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_top);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_concept_map);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> <a href="CppWidget.htm">widget</a>s in <a href="CppWidget.htm">widget</a>_concept_map_as_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;itemAt(i)-&gt;<a href="CppWidget.htm">widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Print();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::Print()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start save dialog<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; print_dialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::pdf));<br/>
&nbsp;&nbsp;print_dialog-&gt;setWindowTitle("Exporteer document naar PDF");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (print_dialog-&gt;exec() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppQDialog.htm">QDialog</a>::Accepted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> print_dialog-&gt;selectedFiles().empty() )<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!print_dialog-&gt;selectedFiles().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(print_dialog-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> print_dialog-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPrinter.htm">QPrinter</a> printer;<br/>
&nbsp;&nbsp;printer.setOrientation(<a href="CppQPrinter.htm">QPrinter</a>::Portrait);<br/>
&nbsp;&nbsp;printer.setPaperSize(<a href="CppQPrinter.htm">QPrinter</a>::A4);<br/>
&nbsp;&nbsp;printer.setOutputFormat(<a href="CppQPrinter.htm">QPrinter</a>::PdfFormat); <a href="CppComment.htm">//</a>Student <b><a href="CppExport.htm">export</a></b>s to PDF<br/>
&nbsp;&nbsp;printer.setFullPage(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;printer.setOutputFileName(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the image to painter to printer (?must be done before printing)<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter;<br/>
<br/>
&nbsp;&nbsp;painter.begin(&amp;printer);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Collect <a href="CppWidget.htm">widget</a>s to print<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppWidget.htm">widget</a>s <a href="CppOperatorAssign.htm">=</a> Collect<a href="CppWidget.htm">Widget</a>s();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>: <a href="CppWidget.htm">widget</a>s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y+h &gt; painter.window().height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printer.<b><a href="CppNew.htm">new</a></b>Page();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;render(&amp;painter,<a href="CppQPoint.htm">QPoint</a>(0,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y<a href="CppOperatorPlusAssign.htm">+=</a>h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;painter.end();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;fitConceptMap();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::fitConceptMap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F all_items_rect <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect();<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(all_items_rect.height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;fitInView(all_items_rect);<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;ReadFromConceptMap(copy_concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setHorizontalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setVerticalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fit concept map to <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F all_items_rect {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect() <a href="CppComment.htm">//</a>Does not work<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;sceneRect() <a href="CppComment.htm">//</a>Does not work<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Node * <b><a href="CppConst.htm">const</a></b> qtnode: m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="CppQt.htm">Qt</a>Nodes())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>All <a href="CppQt.htm">Qt</a>Nodes' their <a href="CppRectangle.htm">rectangle</a>s should be within all_items_rect<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(all_items_rect.contains(qtnode-&gt;boundingRect()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;fitInView(all_items_rect); <a href="CppComment.htm">//</a>Does not work<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;ensureVisible(all_items_rect,0,0); <a href="CppComment.htm">//</a>Does not work<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;items().count()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap()-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap()-&gt;GetEdges().size()));<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map as text<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map_as_text-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> node_index <a href="CppOperatorAssign.htm">=</a> 1; node_index <a href="CppOperatorNotEqual.htm">!=</a> n_nodes; <a href="CppOperatorIncrement.htm">++</a>node_index) <a href="CppComment.htm">//</a>1: skip center node<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap()-&gt;GetNodes().at(node_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapRatedConceptDialog * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMapRatedConceptDialog(m_file-&gt;GetConceptMap(),node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;HideRating();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;fitConceptMap();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintratingdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintratingdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBPRINTRATINGDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBPRINTRATINGDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog;<br/>
}<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current rating, optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<a href="CppComment.htm">///</a>This dialog will not be visible <b><a href="CppFor.htm">for</a></b> humans at all in release<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbRatingDialog is optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableConcepts();<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableExamples();<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableValues();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Print();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b>;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateConceptMap * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBPRINTRATINGDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintratingdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintratingdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QScrollBar&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratedconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbprintratingdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptMap(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;ui-&gt;label_focal_<a href="CppQuestion.htm">question</a>-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;("FOCUSVRAAG: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;Get<a href="CppQuestion.htm">Question</a>()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;("VAN: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_assessor_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;("ASSESSOR: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetAssessorName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow a <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a> to have no <a href="CppQt.htm">Qt</a>ExamplesItem<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>This allows to omit showing these in the PDF <a href="CppVersion.htm">version</a>s used <b><a href="CppFor.htm">for</a></b> printing (#205)<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;RemoveExamplesItem();<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdTime_t.htm">std::time_t</a> my_<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdTime.htm">std::time</a>( &amp;my_<a href="CppTime.htm">time</a> );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdTm.htm">std::tm</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppTime.htm">time</a>_and_date <a href="CppOperatorAssign.htm">=</a> <a href="CppStdLocaltime.htm">std::localtime</a>(&amp;my_<a href="CppTime.htm">time</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppStdAsctime.htm">std::asctime</a>(<a href="CppTime.htm">time</a>_and_date);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_date-&gt;setText( ("Datum: " <a href="CppOperatorPlus.htm">+</a> s).c_str()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::~<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; v { ui-&gt;frame_header, ui-&gt;frame_concept_map, ui-&gt;label_concept_map_as_text };<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> <a href="CppWidget.htm">widget</a>s in <a href="CppWidget.htm">widget</a>_concept_map_as_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;itemAt(i)-&gt;<a href="CppWidget.htm">widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_concepts);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_competencies);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_values);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableConcepts()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_concepts;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableExamples()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_examples;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableValues()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_values;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Print();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::Print()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start save dialog<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; print_dialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::pdf));<br/>
&nbsp;&nbsp;print_dialog-&gt;setWindowTitle("Exporteer document naar PDF");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (print_dialog-&gt;exec() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppQDialog.htm">QDialog</a>::Accepted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> print_dialog-&gt;selectedFiles().empty() )<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!print_dialog-&gt;selectedFiles().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(print_dialog-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> print_dialog-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPrinter.htm">QPrinter</a> printer;<br/>
&nbsp;&nbsp;printer.setOrientation(<a href="CppQPrinter.htm">QPrinter</a>::Portrait);<br/>
&nbsp;&nbsp;printer.setPaperSize(<a href="CppQPrinter.htm">QPrinter</a>::A4);<br/>
&nbsp;&nbsp;printer.setFullPage(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;printer.setOutputFileName(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the image to painter to printer (?must be done before printing)<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter;<br/>
<br/>
&nbsp;&nbsp;painter.begin(&amp;printer);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Collect <a href="CppWidget.htm">widget</a>s to print<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppWidget.htm">widget</a>s <a href="CppOperatorAssign.htm">=</a> Collect<a href="CppWidget.htm">Widget</a>s();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>: <a href="CppWidget.htm">widget</a>s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y+h &gt; painter.window().height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printer.<b><a href="CppNew.htm">new</a></b>Page();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;render(&amp;painter,<a href="CppQPoint.htm">QPoint</a>(0,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y<a href="CppOperatorPlusAssign.htm">+=</a>h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;painter.end();<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; copy_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; copy_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::DeepCopy(m_file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>2013-05-31 REJECT DEEP COPIES<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;ReadFromConceptMap(copy_concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setHorizontalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setVerticalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMaximumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fit concept map to <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;fitInView(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map as text<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> node_index <a href="CppOperatorAssign.htm">=</a> 1; node_index <a href="CppOperatorNotEqual.htm">!=</a> n_nodes; <a href="CppOperatorIncrement.htm">++</a>node_index) <a href="CppComment.htm">//</a>1: skip center node<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> node <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap()-&gt;GetNodes().at(node_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>ConceptMapRatedConceptDialog * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>ConceptMapRatedConceptDialog(m_file-&gt;GetConceptMap(),node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copied from caller<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableConcepts());<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetTableConcepts()-&gt;setMinimumHeight( ((sz-1) * 30) <a href="CppOperatorPlus.htm">+</a> 26 ); <a href="CppComment.htm">//</a>Standard row is 30 pixels high, header 25 pixels<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableExamples());<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableValues());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateConceptMap * Get<a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_next_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateConceptMap * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppWidget.htm">widget</a> requested <b><a href="CppFor.htm">for</a></b> a rating of the already supplied sub concept map,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/with the focal concept item as the central node<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRequestRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; sub_concept_map);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaprateconceptdialognewname.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog),<br/>
&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateConceptMap(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Naam student: " <a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_name-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_request_rate_concept_dialog.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::OnRequestRateConceptDialog,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>RateConceptMap * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { Save(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_T)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Translate<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Evaluate concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_next-&gt;setText("Generate parameters");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_save-&gt;setText("Save assessment");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_keys-&gt;setText("F1: assess concept, F2: classify examples");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_name-&gt;setText("Name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_todo-&gt;setText("Click on a concept to assess it");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::on_button_next_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog d(m_file);<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GetBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::OnRequestRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; sub_concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> HIDE_PARENT_IDEA_5675869837643987593795<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(sub_concept_map); <a href="CppComment.htm">//</a>Item may be changed<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateConceptDialogNewName d(sub_concept_map); <a href="CppComment.htm">//</a>Item may be changed<br/>
&nbsp;&nbsp;d.exec();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetConceptMap() )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file may or may not have an <a href="CppInitialize.htm">initialize</a>d concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Cannot rate a null concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(( file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; !file-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap::HasSameContent(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *file-&gt;GetConceptMap(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide(); <a href="CppComment.htm">//</a>Obligatory, otherwise program will freeze<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected <a href="CppOperatorLogicalOr.htm">||</a> d-&gt;selectedFiles().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>Do not close after saving<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(IsEqual(*m_file-&gt;GetConceptMap(),*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratingdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratingdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATINGDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATINGDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog; }<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current rating, optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog is optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GetBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textEdited(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatingDialog *ui;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATINGDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratingdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratingdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbratingdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::<a href="CppQt.htm">Qt</a>PvdbRatingDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatingDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Student name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Naam student: " <a href="CppOperatorPlus.htm">+</a> file-&gt;GetStudentName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assessor name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_assessor_name-&gt;setText("Naam assessor: ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetAssessorName().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(file-&gt;GetAssessorName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ui-&gt;edit_name-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>); <a href="CppComment.htm">//</a>TVDB request<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(file,ui-&gt;table_concepts);<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(file,ui-&gt;table_examples);<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(file,ui-&gt;table_values);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::~<a href="CppQt.htm">Qt</a>PvdbRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Temporarily disable to <a href="CppWidget.htm">widget</a>, otherwise saving cannot succeed<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{ <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog d(<b><a href="CppThis.htm">this</a></b>-&gt;m_file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.move( screen.center() <a href="CppOperatorMinus.htm">-</a> d.rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_edit_name_textEdited(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (arg1.size() &gt; 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetAssessorName(arg1.toStdString());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her name<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; name);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstart<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbstudentmenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_file-&gt;GetStudentName().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;SetName(m_file-&gt;GetStudentName());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_edit_name_textChanged(ui-&gt;edit_name-&gt;text());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;edit_name-&gt;text().toStdString();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { on_button_save_clicked(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d(<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_start_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_file-&gt;SetStudentName(ui-&gt;edit_name-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Enable start button when student has entered at least two <a href="CppChar.htm">character</a>s<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit_name-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (arg1.size() &gt; 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;m_file-&gt;SetStudentName(ui-&gt;edit_name-&gt;text().toStdString());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{ <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; name)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(name.c_str());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the user need to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_associate_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_<a href="CppConstructor.htm">construct</a>_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstart<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbstudentstart<b><a href="CppCompl.htm">compl</a></b>etedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*file,*m_file));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::~<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { Save(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::on_button_start_associate_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((m_file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !m_file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(m_file);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::on_button_start_<a href="CppConstructor.htm">construct</a>_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;{ <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The user changes to another concept map<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnConceptMapChanged();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The user changes to another sub-concept map<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnSubConceptMapChanged();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; m_concept_map;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; m_sub_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map{},<br/>
&nbsp;&nbsp;m_sub_concept_map{}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(cmap::ConceptMapFactory::GetAllTests().size());<br/>
&nbsp;&nbsp;ui-&gt;box_index-&gt;setMaximum(n_tests <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1: 0-based counting<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_index,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnConceptMapChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_index_sub,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnSubConceptMapChanged()));<br/>
<br/>
&nbsp;&nbsp;OnConceptMapChanged();<br/>
&nbsp;&nbsp;OnSubConceptMapChanged();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::OnConceptMapChanged()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[i]);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(!ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;m_concept_map.reset(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>DisplayConceptMap(concept_map));<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> RJCB_TODO <a href="CppComment.htm">//</a>TODO RJCB<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; &gt; subs <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_subs <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(subs.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_subs <a href="CppOperatorNotEqual.htm">!=</a> 0);<br/>
&nbsp;&nbsp;ui-&gt;box_index_sub-&gt;setMaximum(n_subs <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1: 0-based counting<br/>
&nbsp;&nbsp;ui-&gt;box_index_sub-&gt;setValue(0);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::OnSubConceptMapChanged()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> TODO_RJCB <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; &gt; subs <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> j <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index_sub-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(j &lt; <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(subs.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; sub <a href="CppOperatorAssign.htm">=</a> subs[j];<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(!ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;m_sub_concept_map.reset(<b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>DisplayConceptMap(sub));<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout()-&gt;addWidget(m_sub_concept_map.get());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a>TODO RJCB: Put back in<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> max <a href="CppOperatorAssign.htm">=</a> d.ui-&gt;box_index-&gt;maximum();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>max; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_index-&gt;setValue(i);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> max_sub <a href="CppOperatorAssign.htm">=</a> d.ui-&gt;box_index_sub-&gt;maximum();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>max_sub; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_index_sub-&gt;setValue(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewfilesdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewfilesdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_left_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rLeft();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rRight();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_right_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewfilesdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewfilesdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewfilesdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIteratorH.htm">iterator</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbviewfilesdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<a href="CppQWidget.htm">QWidget</a>* parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::~<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::On<a href="CppTime.htm">Time</a>rLeft()<br/>
{<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::On<a href="CppTime.htm">Time</a>rRight()<br/>
{<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::on_button_left_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Select a file to view");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filenames <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (filenames.isEmpty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filenames.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> filenames[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename).empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename)[0]);<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;text](<a href="CppStdString.htm">std::string</a> s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>"\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;text_left-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;text_left-&gt;setPlainText(text.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::on_button_right_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Select a file to view");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filenames <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (filenames.isEmpty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filenames.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> filenames[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppFileToVector.htm">FileToVector</a>(filename).empty());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(<a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppFileToVector.htm">FileToVector</a>(filename)[0]);<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;text](<a href="CppStdString.htm">std::string</a> s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>"\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;text_right-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;text_right-&gt;setPlainText(text.c_str());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/test_pvdbcluster.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/test_pvdbcluster.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> MXE_SUPPORTS_THREADS<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> MXE_SUPPORTS_THREADS<br/>
&nbsp;&nbsp;<a href="CppStdThread.htm">std::thread</a> t(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Cluster::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <b><a href="CppOperatorEqual.htm">operator==</a></b> and <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_1 <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(tmp_tests_1.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_a <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; a <a href="CppOperatorAssign.htm">=</a> tmp_tests_a.at(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!a) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_b <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; b <a href="CppOperatorAssign.htm">=</a> tmp_tests_b.at(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!b) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a); <a href="CppAssert.htm">assert</a>(b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*a));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*a));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_c <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_d <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; c <a href="CppOperatorAssign.htm">=</a> tmp_tests_c.at(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!c) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> tmp_tests_d.at(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!d) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c); <a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i<a href="CppOperatorEqual.htm">==</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*c)); <a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*c)); <a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*a)); <a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*a)); <a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*c)); <a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*a,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*c)); <a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*b,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*a)); <a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*a)); <a href="CppAssert.htm">assert</a>(!<b><a href="CppOperatorEqual.htm">operator==</a></b>(*d,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test all Clusters with each combination of Concepts<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(cmap::ConceptFactory().GetTests());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; &gt;&amp; concepts)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster(concepts));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> To<a href="CppXml.htm">Xml</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> From<a href="CppXml.htm">Xml</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppOperatorEqual.htm">operator==</a></b>(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Cluster::Test finished successfully");<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> MXE_SUPPORTS_THREADS<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;t.detach();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ProjectBrainweaver.htm">Brainweaver</a>, <a href="Tools.htm">tool</a> to create and assess concept maps<br/>
Copyright (C) 2012-2014 The <a href="ProjectBrainweaver.htm">Brainweaver</a> Team<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapelement.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;<a href="CppStdThread.htm">std::thread</a> t(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Edge&gt; &gt; Edges;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Node&gt; &gt; Nodes;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If <b><a href="CppThis.htm">this</a></b> dialog is fed with a file with only a focal <a href="CppQuestion.htm">question</a>, it will create a one-node concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map(File::CreateConceptMap(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetNodes().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If <b><a href="CppThis.htm">this</a></b> dialog is fed with a file with a cluster and without a concept map (that is, one node (the focal <a href="CppQuestion.htm">question</a>) only_<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>it will create a concept map from the cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_a(ConceptFactory().Create("Concept A"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Cluster&gt; cluster(ClusterFactory::Create( { concept_a } ));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map(<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::CreateFromCluster(<a href="CppQuestion.htm">question</a>,cluster));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>file-&gt;CreateConceptMapFromCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> cluster-&gt;Get().size() <a href="CppOperatorPlus.htm">+</a> 1); <a href="CppComment.htm">//</a>+1 because of focus <a href="CppQuestion.htm">question</a><br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( {0,1,2} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::CreateFromCluster(<a href="CppQuestion.htm">question</a>,cluster));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> cluster-&gt;Get().size() <a href="CppOperatorPlus.htm">+</a> 1); <a href="CppComment.htm">//</a>+1 because of focus <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetEdges().size() <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If <b><a href="CppThis.htm">this</a></b> dialog is fed with a file with a cluster and a concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>it will read the concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( { 0,1,2 } );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_1 <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_1 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_2 <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_2 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_d(ConceptFactory().Create("Concept F"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_e(ConceptFactory().GetTests().at(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_f(ConceptFactory().GetTests().at(index_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_a(CenterNodeFactory().CreateFromStrings(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_b(NodeFactory().GetTests().at(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_c(NodeFactory().GetTests().at(index_2));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Nodes nodes <a href="CppOperatorAssign.htm">=</a> { node_a, node_b, node_c };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_a(EdgeFactory().Create(NodeFactory().Create(concept_d,1.2,3.4),nodes.at(0),<b><a href="CppFalse.htm">false</a></b>,nodes.at(1),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_b(EdgeFactory().Create(NodeFactory().Create(concept_e,2.3,4.5),nodes.at(1),<b><a href="CppFalse.htm">false</a></b>,nodes.at(2),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_c(EdgeFactory().Create(NodeFactory().Create(concept_f,3.4,5.6),nodes.at(2),<b><a href="CppFalse.htm">false</a></b>,nodes.at(0),<b><a href="CppTrue.htm">true</a></b>));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodes,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ edge_a, edge_b, edge_c }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetNodes().size() ); <a href="CppComment.htm">//</a>+0 because focus <a href="CppQuestion.htm">question</a> is node[0]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()-&gt;GetEdges().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If <b><a href="CppThis.htm">this</a></b> dialog is fed with a file without a cluster, but with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>it will read the concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;File&gt; file(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_1 <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_1 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_2 <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_2 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_3 <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_3 &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ConceptFactory().GetTests().size()));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_d(ConceptFactory().GetTests().at(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_e(ConceptFactory().GetTests().at(index_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_f(ConceptFactory().GetTests().at(index_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_a(CenterNodeFactory().CreateFromStrings(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_b(NodeFactory().GetTests().at(1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_c(NodeFactory().GetTests().at(1));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Nodes nodes <a href="CppOperatorAssign.htm">=</a> { node_a, node_b, node_c };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_a(EdgeFactory().Create(NodeFactory().Create(concept_d,1.2,3.4),nodes.at(0),<b><a href="CppFalse.htm">false</a></b>,nodes.at(1),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_b(EdgeFactory().Create(NodeFactory().Create(concept_e,2.3,4.5),nodes.at(1),<b><a href="CppFalse.htm">false</a></b>,nodes.at(2),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_c(EdgeFactory().Create(NodeFactory().Create(concept_f,3.4,5.6),nodes.at(2),<b><a href="CppFalse.htm">false</a></b>,nodes.at(0),<b><a href="CppTrue.htm">true</a></b>));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodes,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ edge_a, edge_b, edge_c }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map_out<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map_out-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetNodes().size() ); <a href="CppComment.htm">//</a>+0 because focus <a href="CppQuestion.htm">question</a> is node[0]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map_out-&gt;GetEdges().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(ConceptMap::HasSameContent(concept_map,concept_map_out));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If <b><a href="CppThis.htm">this</a></b> dialog is fed with a file without a cluster, but with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>it will read the concept map and alter the node positions. If the dialog is<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>fed with <b><a href="CppThis.htm">this</a></b> second concept map, it will keep the nodes in the same place<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_1 <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_1 &lt; ConceptFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_2 <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_2 &lt; ConceptFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index_3 <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index_3 &lt; ConceptFactory().GetNumberOfTests());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_d(ConceptFactory().GetTest(index_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_e(ConceptFactory().GetTest(index_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept_f(ConceptFactory().GetTest(index_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_a(CenterNodeFactory().CreateFromStrings(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_b(NodeFactory().GetTests().at(1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node_c(NodeFactory().GetTests().at(1));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Nodes nodes <a href="CppOperatorAssign.htm">=</a> { node_a, node_b, node_c };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_a(EdgeFactory().Create(NodeFactory().Create(concept_d,1.2,3.4),nodes.at(0),<b><a href="CppFalse.htm">false</a></b>,nodes.at(1),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_b(EdgeFactory().Create(NodeFactory().Create(concept_e,2.3,4.5),nodes.at(1),<b><a href="CppFalse.htm">false</a></b>,nodes.at(2),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; edge_c(EdgeFactory().Create(NodeFactory().Create(concept_f,3.4,5.6),nodes.at(2),<b><a href="CppFalse.htm">false</a></b>,nodes.at(0),<b><a href="CppTrue.htm">true</a></b>));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodes,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ edge_a, edge_b, edge_c }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file its ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the dialog position the nodes<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map <a href="CppOperatorEqual.htm">==</a> d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMap&gt; concept_map_out<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map_out-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetNodes().size() ); <a href="CppComment.htm">//</a>+0 because focus <a href="CppQuestion.htm">question</a> is node[0]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map_out-&gt;GetEdges().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> concept_map-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(ConceptMap::HasSameContent(concept_map,concept_map_out));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map <a href="CppOperatorNotEqual.htm">!=</a> concept_map_out<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>ConceptMapDialog repositions the nodes");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Save the repositioned nodes<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Save(pvdb::File::GetTestFileName());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Load the repositioned nodes<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file_again <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(pvdb::File::GetTestFileName());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ConceptMap::HasSameContent(*file-&gt;GetConceptMap(),*file_again-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*file-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> *file_again-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Save and load must yield identical concept maps");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file_again-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file_again-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file_again-&gt;GetConceptMap()-&gt;FindCenterNode()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file's ConceptMap must have a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let another dialog keep the node positions in the same place<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d_again(file_again);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*file-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> *file_again-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog must not reposition concept maps");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&gt; dialog(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(file));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created from concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>When putting in each of the heteromorphous concept maps, shuffling it, saving it, loading<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>it, the resulting concept map must be homomorphous with the input map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put a concept maps in dialog, shuffle it, saving it<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(v[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Shuffle();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(pvdb::File::GetTestFileName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>loading it, the resulting concept map must be homomorphous with the input map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <b><a href="CppNamespace.htm">namespace</a></b> cmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(pvdb::File::GetTestFileName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ConceptMap::HasSameContent(*file-&gt;GetConceptMap(),*v[i]));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If the relation is moved, the <b><a href="CppNew.htm">new</a></b> locations must be saved<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Done with Shuffle above<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Test <b><a href="CppCompl.htm">compl</a></b>eted successfully");<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;t.detach();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverAssessorQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessorQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake" #Qt5<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverAssessor"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverAssessorQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessorQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverAssessor"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverClean.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverClean.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm *.pro.user<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverCrosscompile.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverCrosscompile.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#From http://richelbilderbeek.nl/CppMxe.htm<br/>
<br/>
<br/>
#myqmake="i686-pc-mingw32.static-qmake-qt4"<br/>
myqmake="i686-pc-mingw32.static-qmake-qt5"<br/>
<br/>
echo "Displaying cross compiler version (if it is not found, set the path to YourFolder/mxe/usr/bin"<br/>
$myqmake -v<br/>
<br/>
for myprofile in `ls | egrep ".pro\&gt;"`<br/>
do<br/>
&nbsp;&nbsp;#echo $myprofile<br/>
&nbsp;&nbsp;mybasename=`echo $myprofile | sed "s/\.pro//"`<br/>
<br/>
&nbsp;&nbsp;#echo "mybasename: "$mybasename<br/>
<br/>
&nbsp;&nbsp;echo "Cleaning up"<br/>
&nbsp;&nbsp;rm Makefile<br/>
&nbsp;&nbsp;rm Makefile.*<br/>
&nbsp;&nbsp;rm -r release<br/>
&nbsp;&nbsp;rm -r debug<br/>
&nbsp;&nbsp;rm ui_*.h<br/>
&nbsp;&nbsp;rm qrc_*.cpp<br/>
&nbsp;&nbsp;rm moc_*.cpp<br/>
&nbsp;&nbsp;rm object_script*.*<br/>
&nbsp;&nbsp;rm *.o<br/>
&nbsp;&nbsp;rm *_plugin_import.cpp<br/>
&nbsp;&nbsp;rm *.exe #Also clean up the executable<br/>
<br/>
&nbsp;&nbsp;echo "Creating makefile"<br/>
<br/>
&nbsp;&nbsp;$myqmake $myprofile<br/>
<br/>
&nbsp;&nbsp;if [ ! -e Makefile ]<br/>
&nbsp;&nbsp;then<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo "FAIL:"$myqmake", "$myprofile": FAIL (Makefile not found)"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;continue<br/>
&nbsp;&nbsp;fi<br/>
<br/>
&nbsp;&nbsp;echo "Start make"<br/>
<br/>
&nbsp;&nbsp;make<br/>
<br/>
<br/>
&nbsp;&nbsp;if [ -e ./release/$mybasename".exe" ]<br/>
&nbsp;&nbsp;then<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo $myprofile", : SUCCESS"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;if [ -e ./release/$mybasename".exe" ]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;then<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp ./release/$mybasename".exe" .<br/>
&nbsp;&nbsp;&nbsp;&nbsp;fi<br/>
&nbsp;&nbsp;else<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo $myprofile", "$mytypestr": FAIL (executable not found)"<br/>
&nbsp;&nbsp;fi<br/>
<br/>
&nbsp;&nbsp;#Cleaning up<br/>
&nbsp;&nbsp;rm Makefile<br/>
&nbsp;&nbsp;rm Makefile.*<br/>
&nbsp;&nbsp;rm -r release<br/>
&nbsp;&nbsp;rm -r debug<br/>
&nbsp;&nbsp;rm ui_*.h<br/>
&nbsp;&nbsp;rm qrc_*.cpp<br/>
&nbsp;&nbsp;rm moc_*.cpp<br/>
&nbsp;&nbsp;rm object_script*.*<br/>
&nbsp;&nbsp;rm *.o<br/>
&nbsp;&nbsp;rm *_plugin_import.cpp<br/>
&nbsp;&nbsp;#rm *.exe #Keep the executable<br/>
<br/>
done #next myprofile<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDeveloperQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloperQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake" #Qt5<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverDeveloper"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDeveloperQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloperQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverDeveloper"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverGprof.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverGprof.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
qmake -config release ProjectBrainweaverDeveloper.pro<br/>
make clean<br/>
make<br/>
./ProjectBrainweaverDeveloper<br/>
gprof ProjectBrainweaverDeveloper &gt; gprof.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverLubuntu.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverLubuntu.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
myfile="qmake"<br/>
for mytarget in "ProjectBrainweaverDeveloper" "ProjectBrainweaverStudent" "ProjectBrainweaverAssessor"<br/>
do<br/>
<br/>
myprofile=$mytarget.pro<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e $mytarget ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
<br/>
#Cleaning up<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
<br/>
#Cleaning up<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
<br/>
done<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverMemcheck.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverMemcheck.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=ProjectBrainweaverMemcheckDebug.txt ../build-ProjectBrainweaverDeveloper-Qt_5_0_1_qt5-Debug/./ProjectBrainweaverDeveloper<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=ProjectBrainweaverMemcheckRelease.txt ../build-ProjectBrainweaverDeveloper-Qt_5_0_1_qt5-Release/./ProjectBrainweaverDeveloper<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverSloccount.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverSloccount.sh" border = "1"><tr><td><code>
sloccount --overhead 1.0 --personcost 22994.56 ../ProjectVanDenBogaart &gt; ProjectVanDenBogaartSloccount.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverStudentQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudentQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverStudent"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverStudentQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudentQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverStudent"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverValgrind.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverValgrind.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=my_log_filename.txt ./ProjectBrainweaverDeveloper<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestConceptItemMouseCursor.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestConceptItemMouseCursor.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
# Test if a concept item shows a hand cursor when hovering over it<br/>
<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
myexe="../../../bin/ProjectBrainweaverDeveloperRelease"<br/>
mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myexe $test_test_conceptitem_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_qtconceptmapeditwidget_index &amp;<br/>
<br/>
sleep 2<br/>
<br/>
output=`./$mytester -s "mouselocation"`<br/>
./$mytester -s "mousexy 500 500"<br/>
./$mytester -s "mouseclick"<br/>
./$mytester -s "mouseclick"<br/>
./$mytester -s "mouselocation"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestEditConceptMapEditConcepts.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestEditConceptMapEditConcepts.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#./../build-BrainweaverDeveloper-Desktop-Debug/BrainweaverDeveloper 1 &amp;<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
myexe="../../../bin/ProjectBrainweaverDeveloper"<br/>
#myexe="../../../.wine/drive_c/windows/system32/ProjectBrainweaverDeveloper.exe"<br/>
<br/>
mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
#mytester="../../Test/build-CppLibcvautomationExample2-Desktop-Debug/CppLibcvautomationExample2"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
#wine $myexe $test_qtconceptmapeditwidget_index &amp;<br/>
$myexe $test_qtconceptmapeditwidget_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_qtconceptmapeditwidget_index &amp;<br/>
<br/>
sleep 2<br/>
<br/>
#Go to the concept map<br/>
./$mytester -s "keyclick Tab"<br/>
./$mytester -s "keyclick space"<br/>
<br/>
<br/>
for i in {1..1000}<br/>
do<br/>
&nbsp;&nbsp;#echo $i<br/>
<br/>
&nbsp;&nbsp;mynumber=$[ ( $RANDOM % 43 ) ]<br/>
<br/>
&nbsp;&nbsp;case $mynumber in<br/>
&nbsp;&nbsp; 0) ./$mytester -s "keyclick a" ;;<br/>
&nbsp;&nbsp; 1) ./$mytester -s "keyclick b" ;;<br/>
&nbsp;&nbsp; 2) ./$mytester -s "keyclick c" ;;<br/>
&nbsp;&nbsp; 3) ./$mytester -s "keyclick d" ;;<br/>
&nbsp;&nbsp; 4) ./$mytester -s "keyclick e" ;;<br/>
&nbsp;&nbsp; 5) ./$mytester -s "keyclick f" ;;<br/>
&nbsp;&nbsp; 6) ./$mytester -s "keyclick g" ;;<br/>
&nbsp;&nbsp; 7) ./$mytester -s "keyclick h" ;;<br/>
&nbsp;&nbsp; 8) ./$mytester -s "keyclick i" ;;<br/>
&nbsp;&nbsp; 9) ./$mytester -s "keyclick j" ;;<br/>
&nbsp;&nbsp;10) ./$mytester -s "keyclick k" ;;<br/>
&nbsp;&nbsp;11) ./$mytester -s "keyclick l" ;;<br/>
&nbsp;&nbsp;12) ./$mytester -s "keyclick m" ;;<br/>
&nbsp;&nbsp;13) ./$mytester -s "keyclick n" ;;<br/>
&nbsp;&nbsp;14) ./$mytester -s "keyclick o" ;;<br/>
&nbsp;&nbsp;15) ./$mytester -s "keyclick p" ;;<br/>
&nbsp;&nbsp;16) ./$mytester -s "keyclick q" ;;<br/>
&nbsp;&nbsp;17) ./$mytester -s "keyclick r" ;;<br/>
&nbsp;&nbsp;18) ./$mytester -s "keyclick s" ;;<br/>
&nbsp;&nbsp;19) ./$mytester -s "keyclick t" ;;<br/>
&nbsp;&nbsp;20) ./$mytester -s "keyclick u" ;;<br/>
&nbsp;&nbsp;21) ./$mytester -s "keyclick v" ;;<br/>
&nbsp;&nbsp;22) ./$mytester -s "keyclick w" ;;<br/>
&nbsp;&nbsp;23) ./$mytester -s "keyclick x" ;;<br/>
&nbsp;&nbsp;24) ./$mytester -s "keyclick y" ;;<br/>
&nbsp;&nbsp;25) ./$mytester -s "keyclick z" ;;<br/>
&nbsp;&nbsp;26) ./$mytester -s "keyclick space" ;;<br/>
&nbsp;&nbsp;27) ./$mytester -s "keyclick F2" ;;<br/>
&nbsp;&nbsp;28) ./$mytester -s "keyclick BackSpace" ;;<br/>
&nbsp;&nbsp;29) ./$mytester -s "keyclick Return" ;;<br/>
&nbsp;&nbsp;30) ./$mytester -s "keyclick Up" ;;<br/>
&nbsp;&nbsp;31) ./$mytester -s "keyclick Right" ;;<br/>
&nbsp;&nbsp;32) ./$mytester -s "keyclick Down" ;;<br/>
&nbsp;&nbsp;33) ./$mytester -s "keyclick Left" ;;<br/>
&nbsp;&nbsp;34) #Choose OK<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick o"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;35) #Choose Add<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick v"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;36) ./$mytester -s "keyclick Tab" ;;<br/>
&nbsp;&nbsp;37) ./$mytester -s "keyclick Insert" ;;<br/>
&nbsp;&nbsp;38) #Move up<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Up"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;39) #Move right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Right"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;40) #Move down<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Down"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;41) #Move left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Left"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;42) ./$mytester -s "keyclick Tab" ;;<br/>
&nbsp;&nbsp;43) #Choose 1: Modify<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick 1"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;44) ./$mytester -s "keyclick Delete" ;;<br/>
&nbsp;&nbsp;esac<br/>
<br/>
done<br/>
<br/>
<br/>
#Close:<br/>
# ./$mytester -s "keydown Alt_L"<br/>
# ./$mytester -s "keyclick F4"<br/>
# ./$mytester -s "keyup Alt_L"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestStudentPrintDialog.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestStudentPrintDialog.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#./../build-BrainweaverDeveloper-Desktop-Debug/BrainweaverDeveloper 1 &amp;<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_print_concept_map_index=5<br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
#myexe="../../../bin/ProjectBrainweaverDeveloperRelease"<br/>
myexe="../../../.wine/drive_c/windows/system32/ProjectBrainweaverDeveloper.exe"<br/>
#mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
mytester="../../Test/build-CppLibcvautomationExample2-Desktop-Debug/CppLibcvautomationExample2"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
wine $myexe $test_print_concept_map_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_print_concept_map_index &amp;<br/>
<br/>
sleep 2<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
# Created from file '../../Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro'<br/>
<br/>
echo "Creating of all folders"<br/>
<br/>
mkdir Projects<br/>
mkdir Projects/Tools<br/>
mkdir Projects/Classes<br/>
mkdir Projects/Projects<br/>
mkdir Projects/Classes/CppAbout<br/>
mkdir Projects/Classes/CppTrace<br/>
mkdir Projects/Classes/CppLazy_init<br/>
mkdir Projects/Classes/CppQtArrowItem<br/>
mkdir Projects/Classes/CppQtAboutDialog<br/>
mkdir Projects/Classes/CppFuzzy_equal_to<br/>
mkdir Projects/Classes/CppQtPathArrowItem<br/>
mkdir Projects/Classes/CppQtScopedDisable<br/>
mkdir Projects/Tools/ToolStyleSheetSetter<br/>
mkdir Projects/Tools/ToolTestQtArrowItems<br/>
mkdir Projects/Projects/ProjectBrainweaver<br/>
mkdir Projects/Classes/CppQtRoundedRectItem<br/>
mkdir Projects/Classes/CppQtHideAndShowDialog<br/>
mkdir Projects/Classes/CppQtQuadBezierArrowItem<br/>
mkdir Projects/Classes/CppQtRoundedEditRectItem<br/>
mkdir Projects/Classes/CppQtRoundedTextRectItem<br/>
mkdir Projects/Tools/ToolTestQtRoundedEditRectItem<br/>
mkdir Projects/Tools/ToolTestQtRoundedTextRectItem<br/>
mkdir Projects/Classes/CppQtLabeledQuadBezierArrowItem<br/>
mkdir Projects/Classes/CppQtKeyboardFriendlyGraphicsView<br/>
<br/>
echo "Copying files"<br/>
<br/>
cp ../../Classes/CppAbout/about.h Projects/Classes/CppAbout/about.h<br/>
cp ../../Classes/CppTrace/trace.h Projects/Classes/CppTrace/trace.h<br/>
cp ../../Classes/CppAbout/about.cpp Projects/Classes/CppAbout/about.cpp<br/>
cp ../../Classes/CppAbout/Licence.txt Projects/Classes/CppAbout/Licence.txt<br/>
cp ../../Classes/CppTrace/Licence.txt Projects/Classes/CppTrace/Licence.txt<br/>
cp ../../Classes/CppLazy_init/Licence.txt Projects/Classes/CppLazy_init/Licence.txt<br/>
cp ../../Tools/ToolStyleSheetSetter/R.png Projects/Tools/ToolStyleSheetSetter/R.png<br/>
cp ../../Tools/ToolTestQtArrowItems/R.png Projects/Tools/ToolTestQtArrowItems/R.png<br/>
cp ../../Projects/ProjectBrainweaver/1.cmp Projects/Projects/ProjectBrainweaver/1.cmp<br/>
cp ../../Projects/ProjectBrainweaver/2.cmp Projects/Projects/ProjectBrainweaver/2.cmp<br/>
cp ../../Projects/ProjectBrainweaver/3.cmp Projects/Projects/ProjectBrainweaver/3.cmp<br/>
cp ../../Projects/ProjectBrainweaver/4.cmp Projects/Projects/ProjectBrainweaver/4.cmp<br/>
cp ../../Projects/ProjectBrainweaver/5.cmp Projects/Projects/ProjectBrainweaver/5.cmp<br/>
cp ../../Projects/ProjectBrainweaver/6.cmp Projects/Projects/ProjectBrainweaver/6.cmp<br/>
cp ../../Projects/ProjectBrainweaver/R.png Projects/Projects/ProjectBrainweaver/R.png<br/>
cp ../../Classes/CppQtArrowItem/Licence.txt Projects/Classes/CppQtArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtAboutDialog/Licence.txt Projects/Classes/CppQtAboutDialog/Licence.txt<br/>
cp ../../Classes/CppQtArrowItem/qtarrowitem.h Projects/Classes/CppQtArrowItem/qtarrowitem.h<br/>
cp ../../Classes/CppFuzzy_equal_to/Licence.txt Projects/Classes/CppFuzzy_equal_to/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfwd.h Projects/Projects/ProjectBrainweaver/pvdbfwd.h<br/>
cp ../../Classes/CppQtArrowItem/qtarrowitem.cpp Projects/Classes/CppQtArrowItem/qtarrowitem.cpp<br/>
cp ../../Classes/CppQtPathArrowItem/Licence.txt Projects/Classes/CppQtPathArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtScopedDisable/Licence.txt Projects/Classes/CppQtScopedDisable/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedge.h Projects/Projects/ProjectBrainweaver/pvdbedge.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfile.h Projects/Projects/ProjectBrainweaver/pvdbfile.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnode.h Projects/Projects/ProjectBrainweaver/pvdbnode.h<br/>
cp ../../Projects/ProjectBrainweaver/zipexes.sh Projects/Projects/ProjectBrainweaver/zipexes.sh<br/>
cp ../../Tools/ToolTestQtArrowItems/Licence.txt Projects/Tools/ToolTestQtArrowItems/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/Cluster.png Projects/Projects/ProjectBrainweaver/Cluster.png<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.h Projects/Classes/CppQtAboutDialog/qtaboutdialog.h<br/>
cp ../../Classes/CppQtRoundedRectItem/Licence.txt Projects/Classes/CppQtRoundedRectItem/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedge.cpp Projects/Projects/ProjectBrainweaver/pvdbedge.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfile.cpp Projects/Projects/ProjectBrainweaver/pvdbfile.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbhelper.h Projects/Projects/ProjectBrainweaver/pvdbhelper.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnode.cpp Projects/Projects/ProjectBrainweaver/pvdbnode.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbrating.h Projects/Projects/ProjectBrainweaver/pvdbrating.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.ui Projects/Classes/CppQtAboutDialog/qtaboutdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcluster.h Projects/Projects/ProjectBrainweaver/pvdbcluster.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconcept.h Projects/Projects/ProjectBrainweaver/pvdbconcept.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexample.h Projects/Projects/ProjectBrainweaver/pvdbexample.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/R.png Projects/Tools/ToolTestQtRoundedEditRectItem/R.png<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/R.png Projects/Tools/ToolTestQtRoundedTextRectItem/R.png<br/>
cp ../../Classes/CppFuzzy_equal_to/fuzzy_equal_to.h Projects/Classes/CppFuzzy_equal_to/fuzzy_equal_to.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.cpp Projects/Classes/CppQtAboutDialog/qtaboutdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/Licence.txt Projects/Classes/CppQtHideAndShowDialog/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamples.h Projects/Projects/ProjectBrainweaver/pvdbexamples.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbhelper.cpp Projects/Projects/ProjectBrainweaver/pvdbhelper.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbrating.cpp Projects/Projects/ProjectBrainweaver/pvdbrating.cpp<br/>
cp ../../Projects/ProjectBrainweaver/Brainweaver.qrc Projects/Projects/ProjectBrainweaver/Brainweaver.qrc<br/>
cp ../../Projects/ProjectBrainweaver/PicRed14x14.png Projects/Projects/ProjectBrainweaver/PicRed14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcluster.cpp Projects/Projects/ProjectBrainweaver/pvdbcluster.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconcept.cpp Projects/Projects/ProjectBrainweaver/pvdbconcept.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexample.cpp Projects/Projects/ProjectBrainweaver/pvdbexample.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplay.h Projects/Projects/ProjectBrainweaver/qtpvdbdisplay.h<br/>
cp ../../Classes/CppQtPathArrowItem/qtpatharrowitem.h Projects/Classes/CppQtPathArrowItem/qtpatharrowitem.h<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/Licence.txt Projects/Classes/CppQtQuadBezierArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedEditRectItem/Licence.txt Projects/Classes/CppQtRoundedEditRectItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedTextRectItem/Licence.txt Projects/Classes/CppQtRoundedTextRectItem/Licence.txt<br/>
cp ../../Classes/CppQtScopedDisable/qtscopeddisable.h Projects/Classes/CppQtScopedDisable/qtscopeddisable.h<br/>
cp ../../Projects/ProjectBrainweaver/PicBlue14x14.png Projects/Projects/ProjectBrainweaver/PicBlue14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicCyan14x14.png Projects/Projects/ProjectBrainweaver/PicCyan14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcompetency.h Projects/Projects/ProjectBrainweaver/pvdbcompetency.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmap.h Projects/Projects/ProjectBrainweaver/pvdbconceptmap.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamples.cpp Projects/Projects/ProjectBrainweaver/pvdbexamples.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbmenudialog.h Projects/Projects/ProjectBrainweaver/pvdbmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbedgeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbedgeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnewarrow.h Projects/Projects/ProjectBrainweaver/qtpvdbnewarrow.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnodeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbnodeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/PicArrow14x14.png Projects/Projects/ProjectBrainweaver/PicArrow14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicArrow28x28.png Projects/Projects/ProjectBrainweaver/PicArrow28x28.png<br/>
cp ../../Projects/ProjectBrainweaver/PicGreen14x14.png Projects/Projects/ProjectBrainweaver/PicGreen14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicWhite14x14.png Projects/Projects/ProjectBrainweaver/PicWhite14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedgefactory.h Projects/Projects/ProjectBrainweaver/pvdbedgefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfilefactory.h Projects/Projects/ProjectBrainweaver/pvdbfilefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnodefactory.h Projects/Projects/ProjectBrainweaver/pvdbnodefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplay.cpp Projects/Projects/ProjectBrainweaver/qtpvdbdisplay.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtoolsitem.h Projects/Projects/ProjectBrainweaver/qtpvdbtoolsitem.h<br/>
cp ../../Classes/CppQtPathArrowItem/qtpatharrowitem.cpp Projects/Classes/CppQtPathArrowItem/qtpatharrowitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/BrainweaverTest.py Projects/Projects/ProjectBrainweaver/BrainweaverTest.py<br/>
cp ../../Projects/ProjectBrainweaver/ConceptMapEdit.png Projects/Projects/ProjectBrainweaver/ConceptMapEdit.png<br/>
cp ../../Projects/ProjectBrainweaver/PicOrange14x14.png Projects/Projects/ProjectBrainweaver/PicOrange14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicPurple14x14.png Projects/Projects/ProjectBrainweaver/PicPurple14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicYellow14x14.png Projects/Projects/ProjectBrainweaver/PicYellow14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/doxygen_config.txt Projects/Projects/ProjectBrainweaver/doxygen_config.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcompetency.cpp Projects/Projects/ProjectBrainweaver/pvdbcompetency.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmap.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptmap.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbmenudialog.cpp Projects/Projects/ProjectBrainweaver/pvdbmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_student.cpp Projects/Projects/ProjectBrainweaver/qtmain_student.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcompetency.h Projects/Projects/ProjectBrainweaver/qtpvdbcompetency.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbedgeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbedgeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnewarrow.cpp Projects/Projects/ProjectBrainweaver/qtpvdbnewarrow.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnodeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbnodeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedgefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbedgefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfilefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbfilefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnodefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbnodefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_assessor.cpp Projects/Projects/ProjectBrainweaver/qtmain_assessor.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbaboutdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbaboutdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtoolsitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtoolsitem.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/Licence.txt Projects/Tools/ToolTestQtRoundedEditRectItem/Licence.txt<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/Licence.txt Projects/Tools/ToolTestQtRoundedTextRectItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedRectItem/qtroundedrectitem.h Projects/Classes/CppQtRoundedRectItem/qtroundedrectitem.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbclusterfactory.h Projects/Projects/ProjectBrainweaver/pvdbclusterfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptfactory.h Projects/Projects/ProjectBrainweaver/pvdbconceptfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplefactory.h Projects/Projects/ProjectBrainweaver/pvdbexamplefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_developer.cpp Projects/Projects/ProjectBrainweaver/qtmain_developer.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbbrushfactory.h Projects/Projects/ProjectBrainweaver/qtpvdbbrushfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcompetency.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcompetency.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbexamplesitem.h Projects/Projects/ProjectBrainweaver/qtpvdbexamplesitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbcluster.cpp Projects/Projects/ProjectBrainweaver/test_pvdbcluster.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbconcept.cpp Projects/Projects/ProjectBrainweaver/test_pvdbconcept.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplesfactory.h Projects/Projects/ProjectBrainweaver/pvdbexamplesfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbaboutdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbaboutdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbclusterwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.ui<br/>
cp ../../Classes/CppQtRoundedRectItem/qtroundedrectitem.cpp Projects/Classes/CppQtRoundedRectItem/qtroundedrectitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbclusterfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbclusterfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbexamplefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbbrushfactory.cpp Projects/Projects/ProjectBrainweaver/qtpvdbbrushfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcenternodeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbcenternodeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapitem.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbexamplesitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbexamplesitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewdialog.h Projects/Projects/ProjectBrainweaver/qtpvdboverviewdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewwidget.h Projects/Projects/ProjectBrainweaver/qtpvdboverviewwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.cpp<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/Licence.txt Projects/Classes/CppQtLabeledQuadBezierArrowItem/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmapfactory.h Projects/Projects/ProjectBrainweaver/pvdbconceptmapfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplesfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbexamplesfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbclusterwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbeditconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbeditconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbitemhighlighter.h Projects/Projects/ProjectBrainweaver/qtpvdbitemhighlighter.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbconceptmap.cpp Projects/Projects/ProjectBrainweaver/test_pvdbconceptmap.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/ToolStyleSheetSetter.qrc Projects/Tools/ToolStyleSheetSetter/ToolStyleSheetSetter.qrc<br/>
cp ../../Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.png Projects/Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.png<br/>
cp ../../Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.qrc Projects/Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.qrc<br/>
cp ../../Tools/ToolTestQtArrowItems/crosscompiletowindows.sh Projects/Tools/ToolTestQtArrowItems/crosscompiletowindows.sh<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.h Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/crosscompiletowindows.sh Projects/Projects/ProjectBrainweaver/crosscompiletowindows.sh<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcenternodeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcenternodeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdboverviewdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdboverviewwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.ui<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/Licence.txt Projects/Classes/CppQtKeyboardFriendlyGraphicsView/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmapfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptmapfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbeditconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbeditconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbitemhighlighter.cpp Projects/Projects/ProjectBrainweaver/qtpvdbitemhighlighter.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.ui Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.h Projects/Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.h<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.h Projects/Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.h<br/>
cp ../../Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.h Projects/Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.h<br/>
cp ../../Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.h Projects/Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverStudent.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverStudent.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.h Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.h Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.cpp Projects/Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.cpp<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.cpp Projects/Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.cpp<br/>
cp ../../Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.cpp Projects/Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.cpp<br/>
cp ../../Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.cpp Projects/Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverAssessor.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverAssessor.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.ui Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.ui Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapwidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapwidget.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.h Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.cpp Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.cpp Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.ui Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.cpp Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapeditwidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapeditwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapratewidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapratewidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/ToolTestQtRoundedEditRectItem.qrc Projects/Tools/ToolTestQtRoundedEditRectItem/ToolTestQtRoundedEditRectItem.qrc<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.png Projects/Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.png<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.qrc Projects/Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.qrc<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.h Projects/Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.h<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.cpp Projects/Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.h<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.h Projects/Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.cpp<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.cpp Projects/Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.ui Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.ui Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.ui Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.ui Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.cpp<br/>
<br/>
FILENAME="../../Projects/ProjectBrainweaverSource"<br/>
ZIP_FILENAME=$FILENAME".zip"<br/>
<br/>
echo "Compressing files"<br/>
<br/>
zip -r $FILENAME Projects<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Emptying subfolders"<br/>
<br/>
rm Projects/Classes/CppQtKeyboardFriendlyGraphicsView/*.*<br/>
rm Projects/Classes/CppQtLabeledQuadBezierArrowItem/*.*<br/>
rm Projects/Tools/ToolTestQtRoundedTextRectItem/*.*<br/>
rm Projects/Tools/ToolTestQtRoundedEditRectItem/*.*<br/>
rm Projects/Classes/CppQtRoundedTextRectItem/*.*<br/>
rm Projects/Classes/CppQtRoundedEditRectItem/*.*<br/>
rm Projects/Classes/CppQtQuadBezierArrowItem/*.*<br/>
rm Projects/Classes/CppQtHideAndShowDialog/*.*<br/>
rm Projects/Classes/CppQtRoundedRectItem/*.*<br/>
rm Projects/Projects/ProjectBrainweaver/*.*<br/>
rm Projects/Tools/ToolTestQtArrowItems/*.*<br/>
rm Projects/Tools/ToolStyleSheetSetter/*.*<br/>
rm Projects/Classes/CppQtScopedDisable/*.*<br/>
rm Projects/Classes/CppQtPathArrowItem/*.*<br/>
rm Projects/Classes/CppFuzzy_equal_to/*.*<br/>
rm Projects/Classes/CppQtAboutDialog/*.*<br/>
rm Projects/Classes/CppQtArrowItem/*.*<br/>
rm Projects/Classes/CppLazy_init/*.*<br/>
rm Projects/Classes/CppTrace/*.*<br/>
rm Projects/Classes/CppAbout/*.*<br/>
rm Projects/Projects/*.*<br/>
rm Projects/Classes/*.*<br/>
rm Projects/Tools/*.*<br/>
rm Projects/*.*<br/>
rmdir Projects/Classes/CppQtKeyboardFriendlyGraphicsView<br/>
rmdir Projects/Classes/CppQtLabeledQuadBezierArrowItem<br/>
rmdir Projects/Tools/ToolTestQtRoundedTextRectItem<br/>
rmdir Projects/Tools/ToolTestQtRoundedEditRectItem<br/>
rmdir Projects/Classes/CppQtRoundedTextRectItem<br/>
rmdir Projects/Classes/CppQtRoundedEditRectItem<br/>
rmdir Projects/Classes/CppQtQuadBezierArrowItem<br/>
rmdir Projects/Classes/CppQtHideAndShowDialog<br/>
rmdir Projects/Classes/CppQtRoundedRectItem<br/>
rmdir Projects/Projects/ProjectBrainweaver<br/>
rmdir Projects/Tools/ToolTestQtArrowItems<br/>
rmdir Projects/Tools/ToolStyleSheetSetter<br/>
rmdir Projects/Classes/CppQtScopedDisable<br/>
rmdir Projects/Classes/CppQtPathArrowItem<br/>
rmdir Projects/Classes/CppFuzzy_equal_to<br/>
rmdir Projects/Classes/CppQtAboutDialog<br/>
rmdir Projects/Classes/CppQtArrowItem<br/>
rmdir Projects/Classes/CppLazy_init<br/>
rmdir Projects/Classes/CppTrace<br/>
rmdir Projects/Classes/CppAbout<br/>
rmdir Projects/Projects<br/>
rmdir Projects/Classes<br/>
rmdir Projects/Tools<br/>
rmdir Projects<br/>
<br/>
echo "Done"<br/>
<br/>
# QtCreatorProFileZipScript, version 1.0<br/>
# Copyright (C) 2013 Richel Bilderbeek<br/>
# Programmed on the 19th of May 2013<br/>
# by Richel Bilderbeek<br/>
# <br/>
# QtCreatorProFileZipScript can be downloaded from http://www.richelbilderbeek.nl/CppQtCreatorProFileZipScript.htm<br/>
# Licenced under GPL 3.0<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
