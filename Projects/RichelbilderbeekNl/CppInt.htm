<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>int</title>
  <meta name="description" content="C++ int"/>
  <meta name="keywords" content="C++ int integer keyword key word data type whole number code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppInt.htm">int</a></h1>
<p>&nbsp;</p>
<p><a href="CppInt.htm">int</a> is a <a href="CppKeyword.htm">keyword</a> for the <a href="CppInt.htm">integer</a> <a href="CppDataType.htm">data type</a>. The <a href="CppInt.htm">integer</a> <a href="CppDataType.htm">data type</a> is suitable for for storing whole numbers.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> dice_value <a href="CppOperatorAssign.htm">=</a> 5;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppInteger.htm">Boost.Integer</a></h2>
<p>&nbsp;</p>
<p><a href="CppInteger.htm">Boost.Integer</a> is a <a href="CppBoost.htm">Boost</a> <a href="CppLibrary.htm">library</a> for working with <a href="CppInt.htm">integers</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppCln.htm">CLN</a></h2>
<p>&nbsp;</p>
<p><a href="CppCln.htm">CLN</a> is a <a href="CppLibrary.htm">library</a> for working with <a href="CppInt.htm">integers</a> of near-infinite size (as long as computer memory permits). The <a href="CppDataType.htm">data type</a> is called <a href="CppCl_I.htm">cln::cl_I</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppInt.htm">int</a> <a href="CppCodeSnippets.htm">code snippets</a></h2>
<p>&nbsp;</p>
<ol>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppGetMaxInt.htm">GetMaxInt: get the maximal value of an int</a></li>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="CppGetRandomInt64.htm">GetRandomInt64: get a random 64-bit integer</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIntToAnsi.htm">IntToAnsi: convert int to AnsiString</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIntToBitString.htm">IntToBitString: convert int to a bitstring</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIntToGray.htm">IntToGray: convert int to Gray code</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIntToStr.htm">IntToStr: convert int to std::string</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIntToStrWithSep.htm">IntToStrWithSep: convert int to std::string with adding thousands seperators</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="CppIsInt.htm">IsInt: check if a std::string can be converted to an int</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
