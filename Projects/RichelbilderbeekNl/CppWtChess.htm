<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtChess</title>
  <meta name="description" content="C++ WtChess"/>
  <meta name="keywords" content="C++ WtChess "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtChess.htm">WtChess</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.663 at Sat Jun 21 23:25:01 2014
 -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtChess.htm">CppWtChess</a> is a <a href="CppWt.htm">Wt</a> 
<a href="CppClass.htm">class</a> to display a chess game.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtChess/wtchessboardwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtChess/wtchessboardwidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget, <a href="CppWt.htm">Wt</a> <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppChess.htm">Chess</a>::Board <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> WTCHESSBOARDWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> WTCHESSBOARDWIDGET_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>board<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>fwd.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintDevice.htm">WPaintDevice</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintedWidget.htm">WPaintedWidget</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a> { <b><a href="CppStruct.htm">struct</a></b> WtResources; }<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a> { <b><a href="CppStruct.htm">struct</a></b> <a href="CppWMouseEvent.htm">WMouseEvent</a>Event; }<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a> { <b><a href="CppStruct.htm">struct</a></b> <a href="CppWPainter.htm">WPainter</a>; }<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">///</a><a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget displays a <a href="CppChess.htm">Chess</a>::Board (with a <a href="CppChess.htm">Chess</a>BoardWidget in between)<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget : <b><a href="CppPublic.htm">public</a></b> <a href="CppWPaintedWidget.htm">Wt::WPaintedWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/A <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget is created by its width and height<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Draw a <a href="CppChess.htm">Chess</a>Board from a BoardWidget<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Draw<a href="CppChess.htm">Chess</a>Board(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a>&amp; painter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::BoardWidget * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Draw a <a href="CppChess.htm">Chess</a>Board<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Draw<a href="CppChess.htm">Chess</a>Board(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a>&amp; painter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> left, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::Board * <b><a href="CppConst.htm">const</a></b> board);<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a read-only <a href="CppPointer.htm">pointer</a> to the <a href="CppChess.htm">Chess</a>::Board<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::BoardWidget * Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>.get(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a read-and-write <a href="CppPointer.htm">pointer</a> to the <a href="CppChess.htm">Chess</a>::Board<br/>
&nbsp;&nbsp;<a href="CppChess.htm">Chess</a>::BoardWidget * Get<a href="CppWidget.htm">Widget</a>() { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>.get(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> that is <a href="CppEmit.htm">emitted</a> when a <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget is changed<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget its <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget its <a href="CppVersion.htm">version</a> history<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppPaint.htm">Paint</a> the <a href="CppWtMysteryMachineWidget.htm">WtMysteryMachineWidget</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> *paintDevice);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The resources used<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::WtResources&gt; m_resources;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppChess.htm">Chess</a>::Board<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppChess.htm">Chess</a>::BoardWidget&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Repaint the <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRepaint();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to mouse click<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClicked(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnResize is called when the <a href="CppGeometry.htm">geometry</a> of the <a href="CppWidget.htm">widget</a> is changed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnResize();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppWt.htm">Wt</a> resize: hide it from sight<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resize(<b><a href="CppConst.htm">const</a></b> <a href="CppWLength.htm">Wt::WLength</a>&amp; width, <b><a href="CppConst.htm">const</a></b> <a href="CppWLength.htm">Wt::WLength</a>&amp; height);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to mouse click<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> OnClicked(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCHESSBOARDWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtChess/wtchessboardwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtChess/wtchessboardwidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget, <a href="CppWt.htm">Wt</a> <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppChess.htm">Chess</a>::Board <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/filesystem.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintDevice.htm">WPaintDevice</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.htm">WPainter</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>square.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>squareselector.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "wt<a href="CppChess.htm">chess</a>board<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "wt<a href="CppChess.htm">chess</a>resources.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQWidget.htm">QWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_resources(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::WtResources),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::BoardWidget(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppChess.htm">Chess</a>::Board&gt;(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::Board),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect(0,0,200,400)))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_<a href="CppGeometry.htm">geometry</a>_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_board_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;resize(200,200);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height)<br/>
&nbsp;&nbsp;: m_resources(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::WtResources),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::BoardWidget(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppChess.htm">Chess</a>::Board&gt;(<b><a href="CppNew.htm">new</a></b> <a href="CppChess.htm">Chess</a>::Board),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect(0,0,width,height)))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;m_signal_position_changed.connect(<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;m_signal_position_changed.connect(<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;GetMachine()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;m_signal_toggled.connect(<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_<a href="CppGeometry.htm">geometry</a>_changed.connect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_<a href="CppGeometry.htm">geometry</a>_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::OnResize,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_board_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;clicked().connect(<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::OnClicked);<br/>
<br/>
&nbsp;&nbsp;resize(width,height);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::DoRepaint()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::Draw<a href="CppChess.htm">Chess</a>Board(<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a>&amp; painter,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::BoardWidget * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> w <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetWidth();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetHeight();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the plain <a href="CppChess.htm">chess</a>board<br/>
&nbsp;&nbsp;Draw<a href="CppChess.htm">Chess</a>Board(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetY(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetWidth(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetHeight(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;GetBoard());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the selected square<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::WtResources r;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> square_w <a href="CppOperatorAssign.htm">=</a> w <a href="CppOperatorDivide.htm">/</a> 8;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> square_h <a href="CppOperatorAssign.htm">=</a> h <a href="CppOperatorDivide.htm">/</a> 8;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppChess.htm">Chess</a>::Square&gt;&amp; s <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;GetSelector()-&gt;GetSelected();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co <a href="CppOperatorAssign.htm">=</a> s-&gt;GetFile().<a href="CppToInt.htm">ToInt</a>() * square_w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co <a href="CppOperatorAssign.htm">=</a> s-&gt;GetRank().<a href="CppToInt.htm">ToInt</a>() * square_h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWRectF.htm">Wt::WRectF</a> rect <a href="CppOperatorAssign.htm">=</a> <a href="CppWRectF.htm">Wt::WRectF</a>(x_co,y_co,square_w,square_h);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetPiece(*s.get()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> r.Find(<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetPiece(*s.get()),<a href="CppChess.htm">Chess</a>::SquareSelector::m_selected_color);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image image <a href="CppOperatorAssign.htm">=</a> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(filename,filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(rect,image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the possible moves<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppChess.htm">Chess</a>::Move&gt; moves <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetMoves(*s.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(moves.begin(),moves.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&amp;painter,square_w,square_h,<a href="CppWidget.htm">widget</a>](<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::Move&amp; move)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (move.To())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co <a href="CppOperatorAssign.htm">=</a> move.To()-&gt;GetFile().<a href="CppToInt.htm">ToInt</a>() * square_w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co <a href="CppOperatorAssign.htm">=</a> move.To()-&gt;GetRank().<a href="CppToInt.htm">ToInt</a>() * square_h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWRectF.htm">Wt::WRectF</a> rect <a href="CppOperatorAssign.htm">=</a> <a href="CppWRectF.htm">Wt::WRectF</a>(x_co,y_co,square_w,square_h);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetPiece(*move.To().get()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> <a href="CppChess.htm">Chess</a>::Resources::Find(<a href="CppWidget.htm">widget</a>-&gt;GetBoard()-&gt;GetPiece(*move.To().get()),<a href="CppChess.htm">Chess</a>::SquareSelector::m_moves_color);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image image <a href="CppOperatorAssign.htm">=</a> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(filename,filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(rect,image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppChess.htm">Chess</a>::Resources::Find(<a href="CppChess.htm">Chess</a>::Square(move.To()-&gt;GetFile().<a href="CppToInt.htm">ToInt</a>(),move.To()-&gt;GetRank().<a href="CppToInt.htm">ToInt</a>()),<a href="CppChess.htm">Chess</a>::SquareSelector::m_moves_color);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image image <a href="CppOperatorAssign.htm">=</a> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(filename,filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(rect,image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::Draw<a href="CppChess.htm">Chess</a>Board(<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a>&amp; painter,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> left, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::Board * <b><a href="CppConst.htm">const</a></b> board)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppChess.htm">Chess</a>::WtResources r;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> square_w <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(width ) <a href="CppOperatorDivide.htm">/</a> 8.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> square_h <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(height) <a href="CppOperatorDivide.htm">/</a> 8.0;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co <a href="CppOperatorAssign.htm">=</a> left <a href="CppOperatorPlus.htm">+</a> (x * square_w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co <a href="CppOperatorAssign.htm">=</a> top <a href="CppOperatorPlus.htm">+</a> (y * square_h);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWRectF.htm">Wt::WRectF</a> rect <a href="CppOperatorAssign.htm">=</a> <a href="CppWRectF.htm">Wt::WRectF</a>(x_co,y_co,square_w,square_h);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (board-&gt;GetPiece(<a href="CppChess.htm">Chess</a>::Square(x,y)))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> r.Find(board-&gt;GetPiece(<a href="CppChess.htm">Chess</a>::Square(x,y)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image image <a href="CppOperatorAssign.htm">=</a> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(filename,filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(rect,image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> r.Find(<a href="CppChess.htm">Chess</a>::Square(x,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image image <a href="CppOperatorAssign.htm">=</a> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(filename,filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(rect,image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-01-26: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::OnClicked(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().y;<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Click(x,y);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>DoRepaint();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::OnResize()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::resize(m_<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetWidth(),m_<a href="CppWidget.htm">widget</a>-&gt;GetGeometry().GetHeight());<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> * paintdevice)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a> painter(paintdevice);<br/>
&nbsp;&nbsp;Draw<a href="CppChess.htm">Chess</a>Board(painter,<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>.get());<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="CppChess.htm">Chess</a>BoardWidget::resize(<b><a href="CppConst.htm">const</a></b> <a href="CppWLength.htm">Wt::WLength</a>&amp; width, <b><a href="CppConst.htm">const</a></b> <a href="CppWLength.htm">Wt::WLength</a>&amp; height)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPaintedWidget.htm">Wt::WPaintedWidget</a>::resize(width,height);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtChess/wtchessresources.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtChess/wtchessresources.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> WTCHESS<a href="CppQmakeResources.htm">RESOURCES</a>_H<br/>
<a href="CppDefine.htm">#define</a> WTCHESS<a href="CppQmakeResources.htm">RESOURCES</a>_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>resources.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a> { <b><a href="CppStruct.htm">struct</a></b> Piece; }<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a> { <b><a href="CppStruct.htm">struct</a></b> <a href="CppQPixmap.htm">QPixmap</a>; }<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a> {<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">///</a>WtResources uses <a href="CppWt.htm">Wt</a> <b><a href="CppFor.htm">for</a></b> generating the <a href="CppChess.htm">chess</a> resources<br/>
<b><a href="CppStruct.htm">struct</a></b> WtResources : <b><a href="CppPublic.htm">public</a></b> <a href="CppChess.htm">Chess</a>::Resources<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>WtResources <a href="CppConstructor.htm">constructor</a> does all the work<br/>
&nbsp;&nbsp;WtResources();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppQPixmap.htm">QPixmap</a> of a Piece<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a>::<a href="CppQPixmap.htm">QPixmap</a>&amp; GetPiece(<b><a href="CppConst.htm">const</a></b> Square&amp; s) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppQPixmap.htm">QPixmap</a> of a Square<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a>::<a href="CppQPixmap.htm">QPixmap</a>&amp; GetSquare(<b><a href="CppConst.htm">const</a></b> Square&amp; s) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWt.htm">Wt</a>::<a href="CppQPixmap.htm">QPixmap</a>&gt; m_square_black;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWt.htm">Wt</a>::<a href="CppQPixmap.htm">QPixmap</a>&gt; m_square_white;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
} <a href="CppComment.htm">//</a>~ <b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTCHESS<a href="CppQmakeResources.htm">RESOURCES</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtChess/wtchessresources.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtChess/wtchessresources.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/filesystem.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppChess.htm">chess</a>resources.h"<br/>
<a href="CppInclude.htm">#include</a> "wt<a href="CppChess.htm">chess</a>resources.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a> {<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
WtResources::WtResources()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> Resources::GetFilenames();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(s))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> f( (<a href="CppStdString.htm">std::string</a>(":/images/") <a href="CppOperatorPlus.htm">+</a> s).c_str() );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.copy(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(s.c_str()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> error <a href="CppOperatorAssign.htm">=</a> "File not found: " <a href="CppOperatorPlus.htm">+</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> error <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> error <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> error <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoostFilesystem.htm">boost::filesystem</a>::exists(s.c_str()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> WtResources::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; WtResources::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-01-27: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
} <a href="CppComment.htm">//</a>~ <b><a href="CppNamespace.htm">namespace</a></b> <a href="CppChess.htm">Chess</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
