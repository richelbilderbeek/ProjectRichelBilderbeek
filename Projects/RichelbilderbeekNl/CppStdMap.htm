<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::map</title>
  <meta name="description" content="C++ std::map"/>
  <meta name="keywords" content="C++ std::map std map"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMap.htm">std::map</a></h1>
<p>&nbsp;</p>
<p><a href="CppMap.htm">std::map</a> is an <a href="CppStl.htm">STL</a> <a href="CppContainer.htm">container</a> for mapping two kinds of <a href="CppDataType.htm">data types</a>.</p>
<p>&nbsp;</p>
<p>
  For a <a href="CppMap.htm">std::map</a>&lt;T,U&gt;, T is called the key, and U is called the value. 
  One key can only have one value. 
  If a key needs to have one or more values, use a <a href="CppMultimap.htm">std::multimap</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppExample.htm">Examples</a></li>
<p>&nbsp;</p>
<ul>
  <li><a href="CppMapExample1.htm">std::map example 1: basics</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppMap.htm">std::map</a> <a href="CppCodeSnippets.htm">code snippets</a></h2>
<p>&nbsp;</p>
<p>Note that among these are also more general <a href="CppContainer.htm">container</a> <a href="CppCodeSnippets.htm">code snippets</a>.</p>
<p>&nbsp;</p>
<ol>
  <li><a href="CppIsKeyInMap.htm">IsKeyInMap, checks if a key is in a std::map</a></li>
  <li><a href="CppGetKeyWithMaxValue.htm">GetKeyWithMaxValue, get the key with the highest value</a></li>
  <li><a href="CppGetValueInMap.htm">GetValueInMap, get a value in a std::map</a></li>
  <li><a href="CppIsKeyInMap.htm">Check if a key is in a std::map, IsKeyInMap</a></li>
  <li><a href="CppGetValueInMap.htm">Get a value in a std::map, GetValueInMap</a></li>
  <li><a href="CppLoopReader.htm">LoopReader, reading a container looped</a></li>
  <li><a href="CppLoopReader.htm">Reading a container looped, LoopReader</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    A <a href="CppMap.htm">std::map</a> is usually implemented as a red-black tree [1]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ol>
  <li><a href="http://www.sgi.com/tech/stl/Map.html">SGI page about std::map</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 31.6. Advice. page 924: '[8] A map is usually implemented as a red-black tree'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
