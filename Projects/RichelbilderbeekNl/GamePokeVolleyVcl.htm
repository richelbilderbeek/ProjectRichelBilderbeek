<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GamePokeVolleyVcl</title>
  <meta name="description" content="C++ GamePokeVolleyVcl"/>
  <meta name="keywords" content="C++ GamePokeVolleyVcl "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GamePokeVolleyVcl.htm">GamePokeVolleyVcl</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name GamePokeVolleyVcl-->
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/ProjectPokeVolley.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/ProjectPokeVolley.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
USEFORM("UnitFormMain<a href="CppImplementationFile.htm">.cpp</a>", FormMain);<br/>
USEFORM("UnitFormSprites<a href="CppImplementationFile.htm">.cpp</a>", FormSprites);<br/>
USEFORM("UnitFormMenu<a href="CppImplementationFile.htm">.cpp</a>", FormMenu);<br/>
USEFORM("UnitForm<a href="CppAbout.htm">About</a><a href="CppImplementationFile.htm">.cpp</a>", Form<a href="CppAbout.htm">About</a>);<br/>
USEFORM("UnitFormWhatsNew<a href="CppImplementationFile.htm">.cpp</a>", FormWhatsNew);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, <b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;<a href="CppInitialize.htm">Initialize</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Title <a href="CppOperatorAssign.htm">=</a> "PokeVolley";<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;CreateForm(__classid(TFormMenu), &amp;FormMenu);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;CreateForm(__classid(TFormSprites), &amp;FormSprites);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Run();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppThrow.htm">throw</a></b> <a href="CppException.htm">Exception</a>("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormAbout.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormAbout.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="CppAbout.htm">About</a>H<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="CppAbout.htm">About</a>H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="CppAbout.htm">About</a> : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image5;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image6;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRichEdit *RichEdit1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *ButtonWhatsNew;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallR;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallG;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallB;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image7;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image8;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall ButtonWhatsNewClick(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="CppAbout.htm">About</a> *Form<a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormAbout.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormAbout.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitFormWhatsNew.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="CppAbout.htm">About</a> *Form<a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="CppAbout.htm">About</a>::TForm<a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TForm<a href="CppAbout.htm">About</a>::ButtonWhatsNewClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;TFormWhatsNew&gt; f(<b><a href="CppNew.htm">new</a></b> TFormWhatsNew(0));<br/>
&nbsp;&nbsp;f-&gt;ShowModal();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormMain.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormMain.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormMainH<br/>
<a href="CppDefine.htm">#define</a> UnitFormMainH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;AppEvnts.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ImgList.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormMain : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBall;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBackground;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBuffer;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>r1;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormKeyUp(TObject *Sender, WORD &amp;Key, TShift<a href="CppState.htm">State</a> Shift);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppTime.htm">Time</a>r1<a href="CppTime.htm">Time</a>r(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> mKeyA, mKeyD, mKeyLeft, mKeyRight, mKeyW, mKeyUp, mKeyS, mKeyDown;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mBallX, mBallY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mBallSpeedX, mBallSpeedY;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerLeftX, mPlayerLeftY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerRightX, mPlayerRightY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerLeftSpeedX, mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerRightSpeedX, mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> mPlayerLeftJumps, mPlayerRightJumps;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> mScoreLeft, mScoreRight;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resetCoordinats();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> moveBall();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> movePlayers();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> detectCollision();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> processKeys();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Extctrls::<a href="CppTImage.htm">TImage</a> * GetRandomBasket1() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Extctrls::<a href="CppTImage.htm">TImage</a> * GetRandomBasket2() <b><a href="CppConst.htm">const</a></b>;<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TFormMain(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormMain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormMain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitFormMain.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitFormSprites.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormMain::TFormMain(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner),<br/>
&nbsp;&nbsp;mKeyA(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mKeyD(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mKeyW(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mKeyLeft(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mKeyRight(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mKeyUp(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mScoreLeft(0),<br/>
&nbsp;&nbsp;mScoreRight(0),<br/>
&nbsp;&nbsp;mPlayerLeftJumps(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mPlayerRightJumps(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;mPlayerLeftX(0),<br/>
&nbsp;&nbsp;mPlayerLeftY(ClientHeight <a href="CppOperatorMinus.htm">-</a> ImagePlayer1-&gt;Height),<br/>
&nbsp;&nbsp;mPlayerRightX(ClientWidth <a href="CppOperatorMinus.htm">-</a> ImagePlayer2-&gt;Width),<br/>
&nbsp;&nbsp;mPlayerRightY(ClientHeight <a href="CppOperatorMinus.htm">-</a> ImagePlayer2-&gt;Height),<br/>
&nbsp;&nbsp;mPlayerLeftSpeedY(0.0),<br/>
&nbsp;&nbsp;mPlayerRightSpeedY(0.0)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(FormSprites);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Load all images<br/>
&nbsp;&nbsp;ImageBasket1-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImageBasket1_0-&gt;Picture;<br/>
&nbsp;&nbsp;ImageBasket2-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImageBasket2_0-&gt;Picture;<br/>
&nbsp;&nbsp;ImageBackground-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImageBackground-&gt;Picture;<br/>
&nbsp;&nbsp;ImageBuffer-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImageBackground-&gt;Picture;<br/>
&nbsp;&nbsp;ImagePlayer1-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer1-&gt;Picture;<br/>
&nbsp;&nbsp;ImagePlayer2-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer2-&gt;Picture;<br/>
&nbsp;&nbsp;ImageBall-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImageBallR-&gt;Picture;<br/>
<br/>
&nbsp;&nbsp;resetCoordinats();<br/>
<br/>
<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::resetCoordinats()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set coordinats<br/>
&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> (ClientWidth <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (ImageBall-&gt;Width <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(rand()%100)/10.0)-5.0;<br/>
&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
<br/>
&nbsp;&nbsp;ImageBasket1-&gt;Left <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;ImageBasket1-&gt;Top <a href="CppOperatorAssign.htm">=</a> (ClientHeight <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (ImageBasket1-&gt;Height <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;ImageBasket2-&gt;Left <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> ImageBasket2-&gt;Width;<br/>
&nbsp;&nbsp;ImageBasket2-&gt;Top <a href="CppOperatorAssign.htm">=</a> (ClientHeight <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (ImageBasket2-&gt;Height <a href="CppOperatorDivide.htm">/</a> 2);<br/>
<br/>
&nbsp;&nbsp;Caption <a href="CppOperatorAssign.htm">=</a> "PokeVolley (C) 2005 Richel Bilderbeek: " <a href="CppOperatorPlus.htm">+</a> <a href="CppIntToStr.htm">IntToStr</a>(mScoreLeft) <a href="CppOperatorPlus.htm">+</a> " : " <a href="CppOperatorPlus.htm">+</a> <a href="CppIntToStr.htm">IntToStr</a>(mScoreRight);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(Key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 65: <a href="CppComment.htm">//</a>A: Left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 87: <a href="CppComment.htm">//</a>W: Up<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 68: <a href="CppComment.htm">//</a>D: Right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 83: <a href="CppComment.htm">//</a>S: Down<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_LEFT:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_UP:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_RIGHT:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_DOWN:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::processKeys()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyA <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorMinusAssign.htm">-=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyD <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyW <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer1-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer1Jump-&gt;Picture;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorMinusAssign.htm">-=</a>50;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>20.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyS <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>) mPlayerLeftSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyLeft <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorMinusAssign.htm">-=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyRight <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyUp <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer2-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer2Jump-&gt;Picture;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorMinusAssign.htm">-=</a>50;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>20.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyDown <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>) mPlayerRightSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::moveBall()<br/>
{<br/>
&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX;<br/>
&nbsp;&nbsp;mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallX &lt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallY &lt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallX <a href="CppOperatorPlus.htm">+</a> ImageBall-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> ImageBall-&gt;Width;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallY <a href="CppOperatorPlus.htm">+</a> ImageBall-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> ImageBall-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ImageBall-&gt;Left <a href="CppOperatorAssign.htm">=</a> mBallX;<br/>
&nbsp;&nbsp;ImageBall-&gt;Top <a href="CppOperatorAssign.htm">=</a> mBallY;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::movePlayers()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Friction<br/>
&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorMultiplyAssign.htm">*=</a>0.95;<br/>
&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorMultiplyAssign.htm">*=</a>0.95;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gravity<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) mPlayerLeftSpeedY <a href="CppOperatorPlusAssign.htm">+=</a>0.5;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) mPlayerRightSpeedY <a href="CppOperatorPlusAssign.htm">+=</a>0.5;<br/>
<br/>
&nbsp;&nbsp;mPlayerLeftX&nbsp;&nbsp;<a href="CppOperatorPlusAssign.htm">+=</a> mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorPlusAssign.htm">+=</a> mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;mPlayerLeftY&nbsp;&nbsp;<a href="CppOperatorPlusAssign.htm">+=</a> mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorPlusAssign.htm">+=</a> mPlayerRightSpeedY;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftX &lt; 0)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player left leaves screen on left side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftX <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerLeftSpeedX &lt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX : mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightX &lt; 0)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player right leaves screen on left side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerRightSpeedX &lt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX : mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftX <a href="CppOperatorPlus.htm">+</a> ImagePlayer1-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player left leaves screen on right side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> ImagePlayer1-&gt;Width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerLeftSpeedX &gt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX : mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightX <a href="CppOperatorPlus.htm">+</a> ImagePlayer2-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player right leaves screen on right side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> ImagePlayer2-&gt;Width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerRightSpeedX &gt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX : mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftY &lt; 0)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player left leaves screen with head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightY &lt; 0)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player right leaves screen with head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftY <a href="CppOperatorPlus.htm">+</a> ImagePlayer1-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player left leaves screen with feet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer1-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer1-&gt;Picture;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> ImagePlayer1-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightY <a href="CppOperatorPlus.htm">+</a> ImagePlayer2-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player right leaves screen with feet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer2-&gt;Picture <a href="CppOperatorAssign.htm">=</a> FormSprites-&gt;ImagePlayer2-&gt;Picture;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> ImagePlayer2-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ImagePlayer1-&gt;Left&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> mPlayerLeftX;<br/>
&nbsp;&nbsp;ImagePlayer2-&gt;Left <a href="CppOperatorAssign.htm">=</a> mPlayerRightX;<br/>
&nbsp;&nbsp;ImagePlayer1-&gt;Top&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> mPlayerLeftY;<br/>
&nbsp;&nbsp;ImagePlayer2-&gt;Top <a href="CppOperatorAssign.htm">=</a> mPlayerRightY;<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::detectCollision()<br/>
{<br/>
&nbsp;&nbsp;TRect rect;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of player left and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,ImageBall-&gt;BoundsRect, ImagePlayer1-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the direction<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect.Width() &gt; rect.Height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Vertical collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftSpeedY<a href="CppOperatorEqual.htm">==</a>0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Bounce on head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedY,mPlayerLeftSpeedY);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Horizontal collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedX,mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerLeftSpeedX &gt; 0) mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerLeftSpeedX &lt; 0) mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer1-&gt;Left <a href="CppOperatorPlusAssign.htm">+=</a> ( ImageBall-&gt;Left &lt; ImagePlayer1-&gt;Left ? 10 : <a href="CppOperatorMinus.htm">-</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move the ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX; mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of player right and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,ImageBall-&gt;BoundsRect, ImagePlayer2-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the direction<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect.Width() &gt; rect.Height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Vertical collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightSpeedY<a href="CppOperatorEqual.htm">==</a>0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Bounce on head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedY,mPlayerRightSpeedY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Horizonal collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedX,mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerRightSpeedX &gt; 0) mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerRightSpeedX &lt; 0) mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push the player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImagePlayer2-&gt;Left <a href="CppOperatorPlusAssign.htm">+=</a> ( ImageBall-&gt;Left &lt; ImagePlayer2-&gt;Left ? 10 : <a href="CppOperatorMinus.htm">-</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move the ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX; mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of basket left and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,ImageBasket1-&gt;BoundsRect, ImageBall-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Right player has scored<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>mScoreRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;resetCoordinats();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;IntersectRect(rect,ImageBasket2-&gt;BoundsRect, ImageBall-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Right player has scored<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>mScoreLeft;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;resetCoordinats();<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormKeyUp(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(Key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 65: mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 68: mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 83: mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 87: mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_LEFT: mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_RIGHT: mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_UP: mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_DOWN: mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::<a href="CppTime.htm">Time</a>r1<a href="CppTime.htm">Time</a>r(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;moveBall();<br/>
&nbsp;&nbsp;processKeys();<br/>
&nbsp;&nbsp;movePlayers();<br/>
&nbsp;&nbsp;detectCollision();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw ImageBackground on ImageBuffer<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,ImageBackground-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw Baskets on ImageBuffer<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImageBasket1-&gt;Left,ImageBasket1-&gt;Top,GetRandomBasket1()-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImageBasket2-&gt;Left,ImageBasket2-&gt;Top,GetRandomBasket2()-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw Squirtles and ball on ImageBuffer<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImagePlayer1-&gt;Left, ImagePlayer1-&gt;Top,ImagePlayer1-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImagePlayer2-&gt;Left, ImagePlayer2-&gt;Top,ImagePlayer2-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;ImageBuffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImageBall-&gt;Left, ImageBall-&gt;Top, ImageBall-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw ImageBuffer on Form<br/>
&nbsp;&nbsp;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,ImageBuffer-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> Extctrls::<a href="CppTImage.htm">TImage</a> * TFormMain::GetRandomBasket1() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket1_0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket1_1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket1_2;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> Extctrls::<a href="CppTImage.htm">TImage</a> * TFormMain::GetRandomBasket2() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket2_0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket2_1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: <b><a href="CppReturn.htm">return</a></b> FormSprites-&gt;ImageBasket2_2;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormMenu.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormMenu.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormMenuH<br/>
<a href="CppDefine.htm">#define</a> UnitFormMenuH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormMenu : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image5;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image6;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image7;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image8;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall OnStartClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall On<a href="CppAbout.htm">About</a>Click(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Image8Click(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TFormMenu(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormMenu *FormMenu;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormMenu.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormMenu.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitFormMenu.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitFormMain.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormMenu *FormMenu;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormMenu::TFormMenu(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMenu::OnStartClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;TFormMain&gt; f(<b><a href="CppNew.htm">new</a></b> TFormMain(0));<br/>
&nbsp;&nbsp;f-&gt;ShowModal();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMenu::On<a href="CppAbout.htm">About</a>Click(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;TForm<a href="CppAbout.htm">About</a>&gt; f(<b><a href="CppNew.htm">new</a></b> TForm<a href="CppAbout.htm">About</a>(0));<br/>
&nbsp;&nbsp;f-&gt;ShowModal();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMenu::Image8Click(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;Close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormSprites.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormSprites.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormSpritesH<br/>
<a href="CppDefine.htm">#define</a> UnitFormSpritesH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormSprites : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallR;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallG;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBallB;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer1Jump;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePlayer2Jump;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket2_0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket2_1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket2_2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket1_2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket1_1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBasket1_0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBackground;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image7;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TFormSprites(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormSprites *FormSprites;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormSprites.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormSprites.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitFormSprites.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormSprites *FormSprites;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormSprites::TFormSprites(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormWhatsNew.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormWhatsNew.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormWhatsNewH<br/>
<a href="CppDefine.htm">#define</a> UnitFormWhatsNewH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormWhatsNew : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRichEdit *RichEdit;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TFormWhatsNew(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormWhatsNew *FormWhatsNew;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitFormWhatsNew.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitFormWhatsNew.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;PokeVolley, Pokemon volleyball game<br/>
&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitFormWhatsNew.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormWhatsNew *FormWhatsNew;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormWhatsNew::TFormWhatsNew(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitMain.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitMain.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;PokeVolley. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> The program was created at the 24th of September of 2005<br/>
<a href="CppComment.htm">//</a> The program can be downloaded at http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a> The author's e-mail adress can be found at http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitMainH<br/>
<a href="CppDefine.htm">#define</a> UnitMainH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;AppEvnts.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ImgList.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormMain : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *PlayerRight;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Ball;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *PlayerLeft;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *BackGround;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Buffer;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *BasketLeft;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *BasketRight;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a>List *ImageListBasketLeft;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a>List *ImageListBasketRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>r1;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormKeyUp(TObject *Sender, WORD &amp;Key, TShift<a href="CppState.htm">State</a> Shift);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppTime.htm">Time</a>r1<a href="CppTime.htm">Time</a>r(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> mBigImages;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> mKeyA, mKeyD, mKeyLeft, mKeyRight, mKeyW, mKeyUp, mKeyS, mKeyDown;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mBallX, mBallY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mBallSpeedX, mBallSpeedY;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerLeftX, mPlayerLeftY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerRightX, mPlayerRightY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerLeftSpeedX, mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> mPlayerRightSpeedX, mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> mPlayerLeftJumps, mPlayerRightJumps;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> mScoreLeft, mScoreRight;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resetCoordinats();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> moveBall();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> movePlayers();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> detectCollision();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> processKeys();<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TFormMain(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GamePokeVolleyVcl/UnitMain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GamePokeVolleyVcl/UnitMain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;PokeVolley. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2005&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> The program was created at the 24th of September of 2005<br/>
<a href="CppComment.htm">//</a> The program can be downloaded at http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a> The author's e-mail adress can be found at http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppInclude.htm">#include</a> "UnitMain.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormMain::TFormMain(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner), mBigImages(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>List of keys that are/aren't pressed<br/>
&nbsp;&nbsp;mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mScoreLeft <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;mScoreRight <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;BackGround-&gt;Picture-&gt;LoadFromFile("BeachSmall.bmp");<br/>
&nbsp;&nbsp;Buffer-&gt;Picture-&gt;LoadFromFile("BeachSmall.bmp");<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBigImages<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Big images<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerLeft-&gt;Picture-&gt;LoadFromFile("SquirtleStaand<a href="CppLink.htm">Link</a>s.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerRight-&gt;Picture-&gt;LoadFromFile("SquirtleStaandRechts.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Ball-&gt;Picture-&gt;LoadFromFile("Pokeball.bmp");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Small images<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerLeft-&gt;Picture-&gt;LoadFromFile("SquirtleLeftSmall.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerRight-&gt;Picture-&gt;LoadFromFile("SquirtleRightSmall.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Ball-&gt;Picture-&gt;LoadFromFile("PokeballSmall.bmp");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fill Basket ImageLists<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Left Basket<br/>
&nbsp;&nbsp;BasketLeft-&gt;Picture-&gt;LoadFromFile("GhastlyLeft1.bmp");<br/>
&nbsp;&nbsp;ImageListBasketLeft-&gt;Width <a href="CppOperatorAssign.htm">=</a> BasketLeft-&gt;Width;<br/>
&nbsp;&nbsp;ImageListBasketLeft-&gt;Height <a href="CppOperatorAssign.htm">=</a> BasketLeft-&gt;Height;<br/>
&nbsp;&nbsp;ImageListBasketLeft-&gt;<a href="CppAdd.htm">Add</a>Masked(BasketLeft-&gt;Picture-&gt;Bitmap,clLime);<br/>
&nbsp;&nbsp;BasketLeft-&gt;Picture-&gt;LoadFromFile("GhastlyLeft2.bmp");<br/>
&nbsp;&nbsp;ImageListBasketLeft-&gt;<a href="CppAdd.htm">Add</a>Masked(BasketLeft-&gt;Picture-&gt;Bitmap,clLime);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Right Basket<br/>
&nbsp;&nbsp;BasketRight-&gt;Picture-&gt;LoadFromFile("GhastlyRight1.bmp");<br/>
&nbsp;&nbsp;ImageListBasketRight-&gt;Width <a href="CppOperatorAssign.htm">=</a> BasketRight-&gt;Width;<br/>
&nbsp;&nbsp;ImageListBasketRight-&gt;Height <a href="CppOperatorAssign.htm">=</a> BasketRight-&gt;Height;<br/>
&nbsp;&nbsp;ImageListBasketRight-&gt;<a href="CppAdd.htm">Add</a>Masked(BasketRight-&gt;Picture-&gt;Bitmap,clLime);<br/>
&nbsp;&nbsp;BasketRight-&gt;Picture-&gt;LoadFromFile("GhastlyRight2.bmp");<br/>
&nbsp;&nbsp;ImageListBasketRight-&gt;<a href="CppAdd.htm">Add</a>Masked(BasketRight-&gt;Picture-&gt;Bitmap,clLime);<br/>
<br/>
<br/>
&nbsp;&nbsp;mPlayerLeftJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mPlayerRightJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;mPlayerLeftX <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> PlayerLeft-&gt;Height;<br/>
&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> PlayerRight-&gt;Width;<br/>
&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> PlayerRight-&gt;Height;<br/>
&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
<br/>
&nbsp;&nbsp;resetCoordinats();<br/>
<br/>
<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::resetCoordinats()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set coordinats<br/>
&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> (ClientWidth <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (Ball-&gt;Width <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(rand()%100)/10.0)-5.0;<br/>
&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
<br/>
&nbsp;&nbsp;BasketLeft-&gt;Left <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;BasketLeft-&gt;Top <a href="CppOperatorAssign.htm">=</a> (ClientHeight <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (BasketLeft-&gt;Height <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;BasketRight-&gt;Left <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> BasketRight-&gt;Width;<br/>
&nbsp;&nbsp;BasketRight-&gt;Top <a href="CppOperatorAssign.htm">=</a> (ClientHeight <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (BasketRight-&gt;Height <a href="CppOperatorDivide.htm">/</a> 2);<br/>
<br/>
&nbsp;&nbsp;Caption <a href="CppOperatorAssign.htm">=</a> "PokeVolley, Copyright (C) 2006 Richel Bilderbeek: " <a href="CppOperatorPlus.htm">+</a> <a href="CppIntToStr.htm">IntToStr</a>(mScoreLeft) <a href="CppOperatorPlus.htm">+</a> " : " <a href="CppOperatorPlus.htm">+</a> <a href="CppIntToStr.htm">IntToStr</a>(mScoreRight);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(Key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 65: <a href="CppComment.htm">//</a>A: Left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 87: <a href="CppComment.htm">//</a>W: Up<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 68: <a href="CppComment.htm">//</a>D: Right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 83: <a href="CppComment.htm">//</a>S: Down<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_LEFT:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_UP:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_RIGHT:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_DOWN:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::processKeys()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyA <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorMinusAssign.htm">-=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyD <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyW <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PlayerLeft-&gt;Picture-&gt;LoadFromFile("SquirtleLeftSmallJump.bmp");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorMinusAssign.htm">-=</a>50;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>20.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyS <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>) mPlayerLeftSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyLeft <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorMinusAssign.htm">-=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyRight <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> 1.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyUp <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PlayerRight-&gt;Picture-&gt;LoadFromFile("SquirtleRightSmallJump.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorMinusAssign.htm">-=</a>50;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>20.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mKeyDown <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>) mPlayerRightSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::moveBall()<br/>
{<br/>
&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX;<br/>
&nbsp;&nbsp;mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> 0.5;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallX &lt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallY &lt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallX <a href="CppOperatorPlus.htm">+</a> Ball-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> Ball-&gt;Width;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallY <a href="CppOperatorPlus.htm">+</a> Ball-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> Ball-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;Ball-&gt;Left <a href="CppOperatorAssign.htm">=</a> mBallX;<br/>
&nbsp;&nbsp;Ball-&gt;Top <a href="CppOperatorAssign.htm">=</a> mBallY;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::movePlayers()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Friction<br/>
&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorMultiplyAssign.htm">*=</a>0.95;<br/>
&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorMultiplyAssign.htm">*=</a>0.95;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gravity<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftJumps <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) mPlayerLeftSpeedY <a href="CppOperatorPlusAssign.htm">+=</a>0.5;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightJumps <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>) mPlayerRightSpeedY <a href="CppOperatorPlusAssign.htm">+=</a>0.5;<br/>
<br/>
&nbsp;&nbsp;mPlayerLeftX&nbsp;&nbsp;<a href="CppOperatorPlusAssign.htm">+=</a> mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorPlusAssign.htm">+=</a> mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;mPlayerLeftY&nbsp;&nbsp;<a href="CppOperatorPlusAssign.htm">+=</a> mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorPlusAssign.htm">+=</a> mPlayerRightSpeedY;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftX &lt; 0)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player left leaves screen on left side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftX <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerLeftSpeedX &lt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX : mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightX &lt; 0)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player right leaves screen on left side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerRightSpeedX &lt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX : mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftX <a href="CppOperatorPlus.htm">+</a> PlayerLeft-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player left leaves screen on right side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> PlayerLeft-&gt;Width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerLeftSpeedX &gt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX : mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightX <a href="CppOperatorPlus.htm">+</a> PlayerRight-&gt;Width &gt; ClientWidth)<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player right leaves screen on right side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightX <a href="CppOperatorAssign.htm">=</a> ClientWidth <a href="CppOperatorMinus.htm">-</a> PlayerRight-&gt;Width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> ( mPlayerRightSpeedX &gt; 0 ? <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX : mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftY &lt; 0)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player left leaves screen with head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightY &lt; 0)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player right leaves screen with head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftY <a href="CppOperatorPlus.htm">+</a> PlayerLeft-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player left leaves screen with feet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerLeft-&gt;Picture-&gt;LoadFromFile("SquirtleLeftSmall.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerLeftY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> PlayerLeft-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightY <a href="CppOperatorPlus.htm">+</a> PlayerRight-&gt;Height &gt; ClientHeight)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Player right leaves screen with feet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightJumps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;PlayerRight-&gt;Picture-&gt;LoadFromFile("SquirtleRightSmall.bmp");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mPlayerRightY <a href="CppOperatorAssign.htm">=</a> ClientHeight <a href="CppOperatorMinus.htm">-</a> PlayerRight-&gt;Height;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;PlayerLeft-&gt;Left&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> mPlayerLeftX;<br/>
&nbsp;&nbsp;PlayerRight-&gt;Left <a href="CppOperatorAssign.htm">=</a> mPlayerRightX;<br/>
&nbsp;&nbsp;PlayerLeft-&gt;Top&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> mPlayerLeftY;<br/>
&nbsp;&nbsp;PlayerRight-&gt;Top <a href="CppOperatorAssign.htm">=</a> mPlayerRightY;<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormMain::detectCollision()<br/>
{<br/>
&nbsp;&nbsp;TRect rect;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of player left and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,Ball-&gt;BoundsRect, PlayerLeft-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the direction<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect.Width() &gt; rect.Height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Vertical collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerLeftSpeedY<a href="CppOperatorEqual.htm">==</a>0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Bounce on head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedY,mPlayerLeftSpeedY);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mPlayerLeftSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Horizontal collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedX,mPlayerLeftSpeedX);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerLeftSpeedX &gt; 0) mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerLeftSpeedX &lt; 0) mPlayerLeftSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerLeftSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PlayerLeft-&gt;Left <a href="CppOperatorPlusAssign.htm">+=</a> ( Ball-&gt;Left &lt; PlayerLeft-&gt;Left ? 10 : <a href="CppOperatorMinus.htm">-</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move the ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX; mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of player right and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,Ball-&gt;BoundsRect, PlayerRight-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the direction<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect.Width() &gt; rect.Height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Vertical collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mPlayerRightSpeedY<a href="CppOperatorEqual.htm">==</a>0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Bounce on head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedY,mPlayerRightSpeedY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedX <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bounce player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mPlayerRightSpeedY <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedY;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Horizonal collision<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(mBallSpeedX,mPlayerRightSpeedX);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerRightSpeedX &gt; 0) mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (mBallSpeedX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> mPlayerRightSpeedX &lt; 0) mPlayerRightSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mPlayerRightSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>mBallSpeedX <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>mBallSpeedX;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mBallSpeedY <a href="CppOperatorPlusAssign.htm">+=</a> random(3)-1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push the player<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PlayerRight-&gt;Left <a href="CppOperatorPlusAssign.htm">+=</a> ( Ball-&gt;Left &lt; PlayerRight-&gt;Left ? 10 : <a href="CppOperatorMinus.htm">-</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move the ball<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mBallX <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedX; mBallY <a href="CppOperatorPlusAssign.htm">+=</a> mBallSpeedY;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check collision of basket left and ball<br/>
&nbsp;&nbsp;IntersectRect(rect,BasketLeft-&gt;BoundsRect, Ball-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Right player has scored<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>mScoreRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;resetCoordinats();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;IntersectRect(rect,BasketRight-&gt;BoundsRect, Ball-&gt;BoundsRect);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsRectEmpty(rect)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Right player has scored<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>mScoreLeft;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;resetCoordinats();<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormKeyUp(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(Key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 65: mKeyA <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 68: mKeyD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 83: mKeyS <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 87: mKeyW <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_LEFT: mKeyLeft <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_RIGHT: mKeyRight <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_UP: mKeyUp <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_DOWN: mKeyDown <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::<a href="CppTime.htm">Time</a>r1<a href="CppTime.htm">Time</a>r(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;moveBall();<br/>
&nbsp;&nbsp;processKeys();<br/>
&nbsp;&nbsp;movePlayers();<br/>
&nbsp;&nbsp;detectCollision();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw BackGround on Buffer<br/>
&nbsp;&nbsp;Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,BackGround-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw Baskets on Buffer<br/>
&nbsp;&nbsp;ImageListBasketLeft-&gt;Draw(Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>,BasketLeft-&gt;Left,BasketLeft-&gt;Top,rand()%2,<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ImageListBasketRight-&gt;Draw(Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>,BasketRight-&gt;Left,BasketRight-&gt;Top,rand()%2,<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw Squirtles and ball on Buffer<br/>
&nbsp;&nbsp;Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(PlayerLeft-&gt;Left, PlayerLeft-&gt;Top,PlayerLeft-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(PlayerRight-&gt;Left, PlayerRight-&gt;Top,PlayerRight-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;Buffer-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(Ball-&gt;Left, Ball-&gt;Top, Ball-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw Buffer on Form<br/>
&nbsp;&nbsp;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,Buffer-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
