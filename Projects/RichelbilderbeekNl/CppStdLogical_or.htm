<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::logical_or</title>
  <meta name="description" content="C++ std::logical_or"/>
  <meta name="keywords" content="C++ std::logical_or logical_or functor code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppLogical_or.htm">std::logical_or</a></h1>
<p>&nbsp;</p>
<p><a href="CppLogical_not.htm">std::logical_or</a> is a <a href="CppFunctor.htm">functor</a>
that performs a <a href="CppOperatorLogicalOr.htm">operator||</a> on two elements.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use of <a href="Cpp11.htm">C++11</a> <a href="CppInitializerList.htm">initializer list</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppBool.htm">bool</a></b>&gt; a <a href="CppOperatorAssign.htm">=</a> { <b><a href="CppFalse.htm">false</a></b>, <b><a href="CppFalse.htm">false</a></b>, <b><a href="CppTrue.htm">true</a></b> , <b><a href="CppTrue.htm">true</a></b> };<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppBool.htm">bool</a></b>&gt; b <a href="CppOperatorAssign.htm">=</a> { <b><a href="CppFalse.htm">false</a></b>, <b><a href="CppTrue.htm">true</a></b> , <b><a href="CppFalse.htm">false</a></b>, <b><a href="CppTrue.htm">true</a></b> };<br/>
<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppBool.htm">bool</a></b>&gt; truth_table(4);<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;a.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;a.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;b.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;truth_table.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppLogical_or.htm">std::logical_or</a>;&lt;<b><a href="CppBool.htm">bool</a></b>&gt;());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a[0] <a href="CppOperatorLogicalOr.htm">||</a> b[0] <a href="CppOperatorEqual.htm">==</a> truth_table[0]);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a[1] <a href="CppOperatorLogicalOr.htm">||</a> b[1] <a href="CppOperatorEqual.htm">==</a> truth_table[1]);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a[2] <a href="CppOperatorLogicalOr.htm">||</a> b[2] <a href="CppOperatorEqual.htm">==</a> truth_table[2]);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a[3] <a href="CppOperatorLogicalOr.htm">||</a> b[3] <a href="CppOperatorEqual.htm">==</a> truth_table[3]);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.cplusplus.com/reference/std/functional/logical_or">cplusplus.com page about std::logical_or</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
