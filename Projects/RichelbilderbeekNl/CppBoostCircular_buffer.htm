<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>boost::circular_buffer</title>
  <meta name="description" content="C++ boost::circular_buffer"/>
  <meta name="keywords" content="C++ boost::circular_buffer circular_buffer circular ring cyclic buffer code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppCircular_buffer.htm">boost::circular_buffer</a></h1>
<p>&nbsp;</p>
<p><a href="CppCircular_buffer.htm">boost::circular_buffer</a> is an '<a href="CppStl.htm">STL</a> compliant 
<a href="CppContainer.htm">container</a> also known as ring or cyclic buffer' [1].</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppCircular_buffer.htm">circular_buffer</a>.hpp&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> 3;<br/>
&nbsp;&nbsp;<a href="CppCircular_buffer.htm">boost::circular_buffer</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v(size);<br/>
<br/>
&nbsp;&nbsp;v.push_back(1);<br/>
&nbsp;&nbsp;v.push_back(4);<br/>
&nbsp;&nbsp;v.push_back(9);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[0] <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[1] <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[2] <a href="CppOperatorEqual.htm">==</a> 9);<br/>
<br/>
&nbsp;&nbsp;v.push_back(16);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[0] <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[1] <a href="CppOperatorEqual.htm">==</a> 9);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[2] <a href="CppOperatorEqual.htm">==</a> 16);<br/>
<br/>
&nbsp;&nbsp;v.push_back(25);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[0] <a href="CppOperatorEqual.htm">==</a> 9);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[1] <a href="CppOperatorEqual.htm">==</a> 16);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[2] <a href="CppOperatorEqual.htm">==</a> 25);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Screen output: 9 16 25 9 16 25 9 16 25 9<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>10; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> *v.begin() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.rotate(v.begin() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.boost.org/doc/libs/release/libs/circular_buffer/index.html">Boost page about boost::circular_buffer</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="http://www.boost.org/doc/libs">Boost page listing all its libraries</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

