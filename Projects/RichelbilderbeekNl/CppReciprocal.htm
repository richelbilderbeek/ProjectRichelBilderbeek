<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Reciprocal</title>
  <meta name="description" content="C++ Reciprocal"/>
  <meta name="keywords" content="C++ Reciprocal code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppReciprocal.htm">Reciprocal</a></h1>
<p>&nbsp;</p>
<p><a href="CppReciprocal.htm">Reciprocal</a> is a <a href="CppContainer.htm">container</a> 
<a href="CppCodeSnippets.htm">code snippet</a> to replace all values in a 
<a href="CppContainer.htm">container</a> by their reciprocal (that is: 1/x) 
<a href="http://en.wikipedia.org/wiki/1/x">(view the wikipedia page on reciprocal)</a>.</p>
<p>&nbsp;</p>
<p>There are multiple ways to perform <a
href="CppReciprocal.htm">Reciprocal</a>:</p>
<ul>
  <li>The general algorithm way (best)</li>
  <li>The algorithm way on a std::vector&lt;double&gt; (intermediate)</li>
  <li>The for-loop way on a std::vector&lt;double&gt; (worst)</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>The general algorithm way</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="Reciprocal.cpp, the general algorithm way" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppNumericH.htm">numeric</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppReciprocal.htm">Reciprocal</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> <a href="CppContainer.htm">Container</a>&gt;<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppReciprocal.htm">Reciprocal</a>(<a href="CppContainer.htm">Container</a>&amp; c)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(c.begin(),c.end(),c.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind1st.htm">std::bind1st</a>(<a href="CppDivides.htm">std::divides</a>&lt;<a href="CppContainer.htm">Container</a>::value_type&gt;(),1.0));&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>The algorithm way on a <a href="CppVector.htm">std::vector</a>&lt;double&gt;</h2>
<p>&nbsp;</p>
<p>This way is used as an answer in <a href="CppExerciseNoForLoops.htm">Exercise #9: No for-loops</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="Reciprocal, the algorithm way" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppNumericH.htm">numeric</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppReciprocal.htm">Reciprocal</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppReciprocal.htm">Reciprocal</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(v.begin(),v.end(),v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind1st.htm">std::bind1st</a>(<a href="CppDivides.htm">std::divides</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(),1.0));&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>The <a href="CppFor.htm">for</a>-loop way on a <a href="CppVector.htm">std::vector</a>&lt;<a href="CppDouble.htm">double</a>&gt;</h2>
<p>&nbsp;</p>
<p>Prefer <a href="CppAlgorithm.htm">algorithms</a> over loops [1,2].</p>
<p>&nbsp;</p>

<!-- start of code -->
<table summary="Recprocal, the for-loop way" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppReciprocal.htm">Reciprocal</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppReciprocal.htm">Reciprocal</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[i]=1.0/v[i];<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4. Chapter 18.12.1 : 'Prefer algorithms over loops'</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a> and <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Chapter 84: 'Prefer algorithm calls to handwritten loops.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
