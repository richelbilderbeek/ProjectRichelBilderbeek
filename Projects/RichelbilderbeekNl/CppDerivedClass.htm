<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Derived class</title>
  <meta name="description" content="C++ Derived class"/>
  <meta name="keywords" content="C++ Derived class code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppDerivedClass.htm">Derived class</a></h1>
<p>&nbsp;</p>
<p>A <a href="CppDerivedClass.htm">derived class</a> is a <a href="CppClass.htm">class</a> 
that has <a href="CppInheritance.htm">inherited</a> <a href="CppMemberVariable.htm">member variables</a> 
and <a href="CppMemberFunction.htm">member functions</a> from a <a href="CppBaseClass.htm">base class</a>.</p>
<p>&nbsp;</p>
<p>The code below shows how an Animal is used as a <a href="CppBaseClass.htm">base class</a> 
and Cat and Dog are <a href="CppDerivedClass.htm">derived classes</a> (of Animal).</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="Derived class.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Animal <a href="CppComment.htm">//</a>Animal is a (non-abstract) <a href="CppBaseClass.htm">base class</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>All animals have a name (consider making <b><a href="CppThis.htm">this</a></b> a <b><a href="CppConst.htm">const</a></b> member)<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_name; <br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> * <a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. <a href="Cpp.htm">C++</a> coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. <br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp; Item 50: 'Make <a href="CppBaseClass.htm">base class</a> <a href="CppDestructor.htm">destructor</a>s <b><a href="CppPublic.htm">public</a></b> and <b><a href="CppVirtual.htm">virtual</a></b>, or <b><a href="CppProtected.htm">protected</a></b> and non<b><a href="CppVirtual.htm">virtual</a></b>'.<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Animal() {} <a href="CppComment.htm">//</a>All animals have a <a href="CppDestructor.htm">destructor</a><br/>
};<br/>
 <br/>
<a href="CppComment.htm">//</a>A cat is a-kind-of animal<br/>
<b><a href="CppStruct.htm">struct</a></b> Cat : <b><a href="CppPublic.htm">public</a></b> Animal <br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Meow() <b><a href="CppConst.htm">const</a></b> { <a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Meow" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>; }<br/>
};<br/>
<br/>
<a href="CppComment.htm">//</a>A dog is a-kind-of animal<br/>
<b><a href="CppStruct.htm">struct</a></b> Dog : <b><a href="CppPublic.htm">public</a></b> Animal<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Bark() <b><a href="CppConst.htm">const</a></b> { <a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Bark" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_has_bone;<br/>
};<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
