<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>MeanAndStdDev</title>
  <meta name="description" content="C++ MeanAndStdDev"/>
  <meta name="keywords" content="C++ MeanAndStdDev"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMeanAndStdDev.htm">MeanAndStdDev</a></h1>
<p>&nbsp;</p>
<p><a href="CppMath.htm">Math</a> <a href="CppCodeSnippets.htm">code snippet</a> to
get the mean and standard deviation of a <a href="CppVector.htm">std::vector</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="s2l0.1k.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppMeanAndStdDev.htm<br/>
<b><a href="CppVoid.htm">void</a></b> MeanAndStdDev(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; myVector, <br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; mean, <br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; stdDev)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(myVector.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(size&gt;1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dSize <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(size);<br/>
&nbsp;&nbsp;mean <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> sumX <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> sumXsquared <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>size; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> value <a href="CppOperatorAssign.htm">=</a> myVector[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sumX<a href="CppOperatorPlusAssign.htm">+=</a>value;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sumXsquared<a href="CppOperatorPlusAssign.htm">+=</a>(value*value);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mean<a href="CppOperatorPlusAssign.htm">+=</a>value;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;mean<a href="CppOperatorDivideAssign.htm">/=</a>dSize;<br/>
&nbsp;&nbsp;stdDev <a href="CppOperatorAssign.htm">=</a> <a href="CppSqrt.htm">std::sqrt</a>(((dSize*sumXsquared)-(sumX*sumX))/(dSize *(dSize-1.0)));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
