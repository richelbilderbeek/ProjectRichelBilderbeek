#include <sstream>
#include <cassert>

//From http://www.richelbilderbeek.nl/CppHexStrIsInt.htm
//Checks whether a std::string containg hexadecimal 
//can be converted to an int. 
//Returns true if possible, also returning this integer by referencing.
//Returns false otherwise, setting the referenced int to zero.
bool IsHexInt(const std::string& s, int& rInt)
{
  std::istringstream i(s);
  i >> std::hex;
  if (!(i >> rInt))
  {
    rInt = 0; return false;
  }
  return true;
}

int main()
{
  int temp = -1;
  assert(IsHexInt("0",temp) == true);
  assert(IsHexInt("9",temp) == true);
  assert(IsHexInt("A",temp) == true);
  assert(IsHexInt("F",temp) == true);
  assert(IsHexInt("-F",temp) == true);
  assert(IsHexInt("-F85AE",temp) == true);
  assert(IsHexInt("80000000",temp) == true); //Maximal value
  assert(IsHexInt("80000001",temp) == false); //Out of range
  assert(IsHexInt("G",temp) == false);

  assert(IsHexInt("--80000000",temp) == false); 
  assert(IsHexInt("-800-00000",temp) == true); //Does not detect ill-formed numbers
  assert(IsHexInt("80000-000",temp) == true); //Does not detect ill-formed numbers
}
