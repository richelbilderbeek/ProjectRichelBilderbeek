<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestLazy_init</title>
  <meta name="description" content="C++ TestLazy_init"/>
  <meta name="keywords" content="C++ TestLazy_init "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestLazy_init.htm">TestLazy_init</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug  5 12:04:26 2014
 -->
<p>
  <a href="ToolTestLazy_init.htm">ToolTestLazy_init</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppLazy_init.htm">Lazy_init</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestLazy_initConsoleExe.zip">Download the 'TestLazy_init' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestLazy_initDesktopExe.zip">Download the 'TestLazy_init' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestLazy_initWebsiteExe.zip">Download the 'TestLazy_init' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.2.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestLazy_init/ToolTestLazy_init.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestLazy_init/ToolTestLazy_init.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -= gui<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += ../../<a href="CppClass.htm">Classes</a>/<a href="CppLazy_init.htm">CppLazy_init</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppLazy_init.htm">CppLazy_init</a>/<a href="CppLazy_init.htm">lazy_init</a>.h<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# <a href="CppBoost.htm">Boost</a><br/>
#<br/>
#<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestLazy_init/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestLazy_init/main.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestLazy_init.htm">TestLazy_init</a>. Tests the <a href="CppLazy_init.htm">Lazy_init</a> <b><a href="CppClass.htm">class</a></b>.<br/>
Copyright (C) 2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a><a href="ToolTestLazy_init.htm">TestLazy_init</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppLazy_init.htm">lazy_init</a>.h"<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> W<br/>
{<br/>
&nbsp;&nbsp;W() { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "W contructor\n"; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> f() <b><a href="CppConst.htm">const</a></b> { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "I am W" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> X<br/>
{<br/>
&nbsp;&nbsp;X(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x) : m_x(x) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "X contructor\n"; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> f() <b><a href="CppConst.htm">const</a></b> { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_x <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_x;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Y<br/>
{<br/>
&nbsp;&nbsp;Y(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) : m_s(s) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Y contructor\n"; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> f() <b><a href="CppConst.htm">const</a></b> { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> m_s;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Z<br/>
{<br/>
&nbsp;&nbsp;Z(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i) : m_s(s), m_i(i) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Z contructor\n"; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> f() <b><a href="CppConst.htm">const</a></b> { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_i <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> m_s;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_i;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Lazy <a href="CppConstructor.htm">construct</a>ion\n";<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::LazyInit0&lt;W&gt; w;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::LazyInit1&lt;X,<b><a href="CppInt.htm">int</a></b>&gt; x(314);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::LazyInit1&lt;Y,<a href="CppStdString.htm">std::string</a>&gt; y("<a href="CppHelloWorld.htm">Hello World</a>");<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::LazyInit2&lt;Z,<a href="CppStdString.htm">std::string</a>,<b><a href="CppInt.htm">int</a></b>&gt; z("Hell",0);<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Calling objects\n";<br/>
&nbsp;&nbsp;z.Get().f();<br/>
&nbsp;&nbsp;y.Get().f();<br/>
&nbsp;&nbsp;x.Get().f();<br/>
&nbsp;&nbsp;w.Get().f();<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output:<br/>
<br/>
Lazy <a href="CppConstructor.htm">construct</a>ion<br/>
Calling objects<br/>
Z contructor<br/>
Hell0<br/>
Y contructor<br/>
<a href="CppHelloWorld.htm">Hello World</a><br/>
X contructor<br/>
314<br/>
W contructor<br/>
I am W<br/>
Press &lt;RETURN&gt; to close <b><a href="CppThis.htm">this</a></b> window...<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
