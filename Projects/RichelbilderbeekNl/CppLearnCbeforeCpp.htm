<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Should I learn C before learning C++?</title>
  <meta name="description" content="C++ Should I learn C before learning C++?"/>
  <meta name="keywords" content="C++ Should I learn C before learning C++?"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppLearnCbeforeCpp.htm">Should I learn C before learning C++?</a></h1>
<p>&nbsp;</p>
<p>Both Bjarne Stroustrup and C++ FAQ LITE believe it is easier to directly start learning C++.</p>
<p>&nbsp;</p>
<p>Reasons are:</p>
<p>&nbsp;</p>
<ul>
  <li>C++ is safer [1], e.g. it has increased type safety, which makes the use of Hungarian notation unnesessary</li>
  <li>C++ is more expressive [1]. This is due to that C++ enables Object Oriented Programming</li>
  <li>C++ reduces need to focus on low-level techniques as there are better libraries [1] (the STL). For example, using a std::vector saves you a lot of time managing and writing functions for arrays</li>
  <li>C uses malloc instead of new, the latter being safer [3]</li>
  <li>C uses printf instead of cout, the latter being safer [3]</li>
  <li>C unnecessary uses type-dependent switch statements, where C++ can solve these using polymorphism [3]</li>
  <li>C++ has error-code exception handling, as it supports the keywords try and catch [3]</li>
  <li>C++ makes #define macros unnecessary, using template or inline functions [3]</li>
  <li>C++ can overload functions with the same name, if the compiler can distinguish them from the function its arguments</li>
</ul>
<p>&nbsp;</p>
<p>After having learned the common subset of C and C++, it is easier to find out the
trickier parts of C [1,2]. See <a href="CppKeyword.htm">C++ keywords</a> for a list of C++ keywords.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li>Bjarne Stroustrup. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4, chapter 1.2: 'Learning C++'</li>
  <li>http://new-brunswick.net/workshop/c++/faq/how-to-learn-cpp.html, topic [28.2]</li>
  <li>http://www.research.att.com/~bs/bs_faq.html#prerequisite</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
