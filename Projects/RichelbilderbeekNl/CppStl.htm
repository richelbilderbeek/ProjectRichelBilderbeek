<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>STL</title>
  <meta name="description" content="C++ STL"/>
  <meta name="keywords" content="C++ STL standard template library"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppStl.htm">STL</a></h1>
<p>&nbsp;</p>
<p>
  The <a href="CppStl.htm">STL</a> (an abbreviation of 'Standard Template Library') is the standard C++ <a href="CppLibrary.htm">library</a> 
  consisting of about twenty <a href="CppHeaderFile.htm">header files</a>. 
  For a list of all <a href="CppHeaderFile.htm">header files</a>, <a href="CppHeaderFile.htm">go to page about header files</a>.
  </p>
<p>&nbsp;</p>
<p>
  The <a href="CppStl.htm">STL</a> is a collection of <a href="CppDataType.htm">data types</a>, <a href="CppFunction.htm">functions</a>, 
  <a href="CppAlgorithm.htm">algorithms</a> and more as desctibed in the C++ Standard. To use a certain <a href="CppDataType.htm">data type</a>, 
  <a href="CppFunction.htm">function</a>, <a href="CppAlgorithm.htm">algorithm</a> or other, the right <a href="CppHeaderFile.htm">header file</a> 
  must be <a href="CppInclude.htm">#included</a>.
</p>
<p>&nbsp;</p>
<p>
  Although the working of all <a href="CppStl.htm">STL</a> elements is described in the C++ Standard, there are multiple 
  <a href="CppDefinition.htm">implementations</a> and thus multiple <a href="CppStl.htm">STL</a>s.
</p>
<p>&nbsp;</p>
<p>
  The <a href="CppStl.htm">STL</a> is general-purpose platform-independent <a href="CppLibrary.htm">library</a>. 
  For a list of other <a href="CppLibrary.htm">libraries</a>, <a href="CppLibrary.htm">go to the page about libraries</a>.
</p>
<p>&nbsp;</p>
<p>
  Some <a href="CppStl.htm">STL</a> elements of the <a href="CppStl.htm">STL</a>'s next 
  version can already be found in the 
  <a href="CppBoost.htm">Boost</a> <a href="CppLibrary.htm">library</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Familiarize yourself with the <a href="CppStl.htm">STL</a> [1,3] and the <a href="CppStl.htm">STL</a>-related web sites [2]
  </li>
  <li>
    Prefer the <a href="CppStl.htm">STL</a> to other <a href="CppLibrary.htm">libraries</a> and to handcrafted code [4,13]
  </li>
  <li>
    Use <a href="CppStl.htm">STL</a> facilities to maintain portability [5,14]
  </li>
  <li>
    Use <a href="CppStl.htm">STL</a> facilities to minimize maintenance costs [6]
  </li>
  <li>
    Using <a href="CppStl.htm">STL</a> functions and classes shortens program development time [13]
  </li>
  <li>
    Use <a href="CppStl.htm">STL</a> facilities as a base for more extensive and more specialized libraries [7]
  </li>
  <li>
    Use <a href="CppStl.htm">STL</a> facilities as a model for flexible, widely usable software [8]
  </li>
  <li>
    The <a href="CppStl.htm">STL</a> facilities are defined in namespace std and found in standard-library headers [9]
  </li>
  <li>
    A C standard-library header X.h is presented as a C++ standard-library header in &lt;cX&gt; [10]
  </li>
  <li>
    Do no try to use a <a href="CppStl.htm">STL</a> facility without #including its header [11]
  </li>
  <li>
    To use a range-for on a built-in array, #include&lt;iterator&gt; [12]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<p>(suggested list from [2])</p>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.sgi.com/tech/stl">SGI</a></li>
  <li><a href="http://www.stlport.org/">STLport</a></li>
  <li><a href="http://www.boost.org/">Boost</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 53: Familiarize yourself with the standard library, including TR1</li>
  <li><!--  2 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective STL. ISBN: 0-201-74962-9. Item 50: 'Familiarize yourself with STL-related web sites'.</li>
  <li><!--  3 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Page 32, 1.5 'Advice', item 12: 'Use libraries, especially the standard library, rather than trying to build everything from scratch'</li>
  <li><!--  4 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 10.6. Advice. page 271: '[1] Prefer the standard library to other libraries and to "handcrafted code"'</li>
  <li><!--  5 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[1] Use standard-library facilities to maintain portability'</li>
  <li><!--  6 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[2] Use standard-library facilities to minimize maintenance costs'</li>
  <li><!--  7 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[3] Use standard-library facilities as a base for more extensive and more specialized libraries'</li>
  <li><!--  8 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[4] Use standard-library facilities as a model for flexible, widely usable software'</li>
  <li><!--  9 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[5] The standard-library facilities are defined in namespace std and found in standard-library headers'</li>
  <li><!-- 10 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[6] A C standard-library header X.h is presented as a C++ standard-library header in &lt;cX&gt;'</li>
  <li><!-- 11 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[7] Do no try to use a standard-library facility without #including its header'</li>
  <li><!-- 12 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 883: '[8] To use a range-for on a built-in array, #include&lt;iterator&gt;'</li>
  <li><!-- 13 -->Paul Deitel, Harvey Deitel. C++11 for programmers (2nd edition). 2014. ISBN: 978-0-13-343985-4. Chapter 1.2, Performance Tip 1.1. page 3: 'Using C++ Standard Library functions and classes instead of writing your own versions van improve program performance, because they're written carefully to perform efficiently. This technique also shortens program development time.'</li>
  <li><!-- 14 -->Paul Deitel, Harvey Deitel. C++11 for programmers (2nd edition). 2014. ISBN: 978-0-13-343985-4. Chapter 1.2, Portability Tip 1.1. page 3: 'Using C++ Standard Library functions and classes instead of writing your own improves program portability, because they're included in every C++ implementation'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
