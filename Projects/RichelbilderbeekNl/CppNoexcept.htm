<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>noexcept</title>
  <meta name="description" content="C++ noexcept"/>
  <meta name="keywords" content="C++ noexcept keyword"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppNoexcept.htm">noexcept</a></h1>
<p>&nbsp;</p>
<p>
  <a href="CppNoexcept.htm">noexcept</a> is a <a href="CppKeyword.htm">keyword</a> to 
  indicate that a <a href="CppFunction.htm">function</a> may not 
  <a href="CppThrow.htm">throw</a> an <a href="CppException.htm">exception</a>.
  If the <a href="CppFunction.htm">function</a> does <a href="CppThrow.htm">throw</a> 
  an <a href="CppException.htm">exception</a>, <a href="CppTerminate.htm">std::terminate</a>
  is called.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppExample.htm">Example</a></h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppNoexceptExample1.htm">noexcept example 1: basics</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    If a <a href="CppFunction.htm">function</a> may not <a href="CppThrow.htm">throw</a>, 
    <a href="CppDeclaration.htm">declare</a> it <a href="CppNoexcept.htm">noexcept</a> [1]
  </li>
  <li>
    Generated <a href="CppDestructor.htm">destructors</a> are implicitly <a href="CppNoexcept.htm">noexcept</a>,
    as <a href="CppDestructor.htm">destructors</a> should not <a href="CppThrow.htm">throw</a> [2]
  </li>
  <li>
    A generated copy or move operation is implicitly <a href="CppNoexcept.htm">noexcept</a> if all 
    of the copy or move operations it uses on members of its class have 
    <a href="CppNoexcept.htm">noexcept</a> <a href="CppDestructor.htm">destructors</a> [3].
    Declare a move operation <a href="CppNoexcept.htm">noexcept</a>, as it should not throw [3]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 13.7. Advice, page 387: '[23] If your function may not throw, declare it noexcept'</li>
  <li><!--  2 --><a href="http://www.stroustrup.com/C++11FAQ.html#noexcept">Bjarne Stroustrup's C++11 FAQ</a>: 'A destructor shouldn't throw; a generated destructor is implicitly noexcept (independently of what code is in its body) if all of the members of its class have noexcept destructors.'</li>
  <li><!--  3 --><a href="http://www.stroustrup.com/C++11FAQ.html#noexcept">Bjarne Stroustrup's C++11 FAQ</a>: 'It is typically a bad idea to have a move operation throw, so declare those noexcept whereever possible. A generated copy or move operation is implicitly noexcept if all of the copy or move operations it uses on members of its class have noexcept destructors.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
