<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>IsDouble</title>
  <meta name="description" content="C++ IsDouble"/>
  <meta name="keywords" content="C++ IsDouble STL Builder std::string AnsiString code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIsDouble.htm">IsDouble</a></h1>
<p>&nbsp;</p>
<p><a href="CppIsDouble.htm">IsDouble</a> is a <a href="CppCheck.htm">check</a> <a href="CppCodeSnippets.htm">code snippet</a> to check if a <a href="CppString.htm">std::string</a> or <a href="CppAnsiString.htm">AnsiString</a> can be converted to a <a href="CppDouble.htm">double</a>.</p>
<p>&nbsp;</p>
<p><a href="CppIsDouble.htm">IsDouble</a> is shown in two flavors:</p>
<ul>
  <li><a href="CppIsDouble.htm">IsDouble</a> for <a href="CppString.htm">std::string</a></li>
  <li><a href="CppIsDouble.htm">IsDouble</a> for <a href="CppAnsiString.htm">AnsiString</a></li>
</ul>
<p>&nbsp;</p>
<p>For <a href="CppString.htm">std::strings</a>, <a href="CppCanCast.htm">CanCast</a> and <a href="CppCanLexicalCast.htm">CanLexicalCast</a> are more general versions of <a href="CppIsDouble.htm">IsDouble</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppIsDouble.htm">IsDouble</a> for <a href="CppString.htm">std::string</a></h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsDouble.htm">IsDouble</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsDouble.htm">IsDouble</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIstringstream.htm">std::istringstream</a> i(s);<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> temp;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ( (i <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> temp) ? <b><a href="CppTrue.htm">true</a></b> : <b><a href="CppFalse.htm">false</a></b> );<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsDouble.htm">IsDouble</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsDouble.htm">IsDouble</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s, <b><a href="CppDouble.htm">double</a></b>&amp; rDouble)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIstringstream.htm">std::istringstream</a> i(s);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> rDouble)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;rDouble <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsDouble.htm">IsDouble</a>("123.456")<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsDouble.htm">IsDouble</a>("abcdefg")<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> d <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppIsDouble.htm">IsDouble</a>("3.14",d) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d<a href="CppOperatorEqual.htm">==</a>3.14);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppIsDouble.htm">IsDouble</a> for <a href="CppAnsiString.htm">AnsiString</a></h2>
<p>&nbsp;</p>
<p>This code <a href="CppCompile.htm">compiles</a> cleanly under <a href="CppBuilder.htm">C++ Builder</a> 6.0</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsDouble.htm">IsDouble</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> <a href="CppIsDouble.htm">IsDouble</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppAnsiString.htm">AnsiString</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s.<a href="CppToDouble.htm">ToDouble</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (EConvertError&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>; <br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsDouble.htm">IsDouble</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> <a href="CppIsDouble.htm">IsDouble</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppAnsiString.htm">AnsiString</a>&amp; s, <b><a href="CppDouble.htm">double</a></b>&amp; rDouble)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;rDouble <a href="CppOperatorAssign.htm">=</a> s.<a href="CppToDouble.htm">ToDouble</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (EConvertError&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;rDouble <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>; <br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
