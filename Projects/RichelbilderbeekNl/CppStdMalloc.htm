<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::malloc</title>
  <meta name="description" content="C++ std::malloc"/>
  <meta name="keywords" content="C++ std::malloc std malloc STL code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMalloc.htm">std::malloc</a></h1>
<p>&nbsp;</p>
<p><a href="CppMalloc.htm">std::malloc</a> is an <a href="CppStl.htm">STL</a> <a href="CppFunction.htm">function</a> used in C-style memory management:</p>
<ul>
  <li><a href="CppMalloc.htm">std::malloc</a>: allocates memory</li>
  <li><a href="CppRealloc.htm">std::realloc</a>: reallocates memory</li>
  <li><a href="CppFree.htm">std::free</a>: releases memory</li>
</ul>
<p>&nbsp;</p>
<p>Prefer to use the <a href="Cpp.htm">C++</a> <a href="CppKeyword.htm">keyword</a> <a href="CppNew.htm">new</a> over <a href="CppMalloc.htm">std::malloc</a>, as <a href="CppMalloc.htm">std::malloc</a> does not call a <a href="CppConstructor.htm">constructor</a>. Prefer to use the <a href="Cpp.htm">C++</a> <a href="CppKeyword.htm">keyword</a> <a href="CppDelete.htm">delete</a> over <a href="CppFree.htm">std::free</a>, as <a href="CppFree.htm">std::free</a> does not call a <a href="CppDestructor.htm">destructor</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> 100;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a dynamically allocated array<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> * my_array <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>*&gt;(<a href="CppMalloc.htm">std::malloc</a>(size * <b><a href="CppSizeof.htm">sizeof</a></b>(<b><a href="CppInt.htm">int</a></b>)));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the <a href="CppMemory.htm">memory</a> <b><a href="CppFor.htm">for</a></b> the array could be allocated<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(my_array);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> new_size <a href="CppOperatorAssign.htm">=</a> 200;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Resize the array<br/>
&nbsp;&nbsp;my_array <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>*&gt;(<a href="CppRealloc.htm">std::realloc</a> (my_array, new_size * <b><a href="CppSizeof.htm">sizeof</a></b>(<b><a href="CppInt.htm">int</a></b>)));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the <a href="CppMemory.htm">memory</a> <b><a href="CppFor.htm">for</a></b> the array could be allocated<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(my_array);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Free the array<br/>
&nbsp;&nbsp;<a href="CppFree.htm">std::free</a>(my_array);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
