<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GameDasWahreSchlagerfestVcl</title>
  <meta name="description" content="C++ GameDasWahreSchlagerfestVcl"/>
  <meta name="keywords" content="C++ GameDasWahreSchlagerfestVcl "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GameDasWahreSchlagerfestVcl.htm">GameDasWahreSchlagerfestVcl</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Sun Aug 17 15:24:07 2014
 -->
<p><img src="PicVcl.png" alt="VCL"/><img src="PicCppBuilder.png" alt="C++ Builder"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="GameDasWahreSchlagerfestVcl.htm">Das Wahre Schlagerfest (VCL)</a> is a <a href="Games.htm">game</a> that was programmed on the 30th September 2003 during a 'Spass programmieren' session.
It is the one <a href="Games.htm">game</a> that can be played on a theme party with theme 'Germany', or as a substitute for the Oktoberfest. 
If you want a beer or bratwurst, you can just go fetching one without fear of losing the <a href="Games.htm">game</a>!</p>
<p>&nbsp;</p>
<p>in 2012, <a href="GameDasWahreSchlagerfestVcl.htm">Das Wahre Schlagerfest (VCL)</a> was renamed to <a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a> ported
to <a href="CppQtCreator.htm">Qt Creator</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li>Newer: <a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicCppBuilder.png" alt="C++ Builder"/> <a href="GameDasWahreSchlagerfestSource_1_0.zip">Download the source code of 'Das Wahre Schlagerfest' (version 1.0)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicCppBuilder.png" alt="C++ Builder"/> <a href="GameDasWahreSchlagerfest_1_0.png">View a screenshot of 'Das Wahre Schlagerfest' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicCppBuilder.png" alt="C++ Builder"/> <a href="GameDasWahreSchlagerfestExe_1_0.zip">Download a windows executable of 'Das Wahre Schlagerfest' (version 1.0)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/ProjectDasWahreSchlagerfest.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/ProjectDasWahreSchlagerfest.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
USEFORM("UnitMain<a href="CppImplementationFile.htm">.cpp</a>", FormMain);<br/>
USEFORM("UnitAboutBox<a href="CppImplementationFile.htm">.cpp</a>", Form<a href="CppAbout.htm">About</a>Box);<br/>
USEFORM("UnitThreeDotsChasing<a href="CppImplementationFile.htm">.cpp</a>", FormThreeDotsChasing);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, <b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;<a href="CppInitialize.htm">Initialize</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Title <a href="CppOperatorAssign.htm">=</a> "Das ware Schlagerfest";<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;CreateForm(__classid(TFormMain), &amp;FormMain);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Run();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppThrow.htm">throw</a></b> <a href="CppException.htm">Exception</a>("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitAboutBox.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitAboutBox.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitAboutBoxH<br/>
<a href="CppDefine.htm">#define</a> UnitAboutBoxH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;jpeg.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="CppAbout.htm">About</a>Box : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRichEdit *RichEdit1;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="CppAbout.htm">About</a>Box(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="CppAbout.htm">About</a>Box *Form<a href="CppAbout.htm">About</a>Box;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitAboutBox.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitAboutBox.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitAboutBox.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="CppAbout.htm">About</a>Box *Form<a href="CppAbout.htm">About</a>Box;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="CppAbout.htm">About</a>Box::TForm<a href="CppAbout.htm">About</a>Box(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitMain.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitMain.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitMainH<br/>
<a href="CppDefine.htm">#define</a> UnitMainH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;AppEvnts.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ActnList.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ActnMan.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Grids.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormMain : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBratWurst;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBiertje;<br/>
&nbsp;&nbsp;T<a href="CppApplication.htm">Application</a>Events *<a href="CppApplication.htm">Application</a>Events1;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBackGround;<br/>
&nbsp;&nbsp;TActionManager *ActionManager1;<br/>
&nbsp;&nbsp;TAction *Find3Row;<br/>
&nbsp;&nbsp;TAction *<a href="CppInitialize.htm">Initialize</a>;<br/>
&nbsp;&nbsp;TAction *DeletePlayer;<br/>
&nbsp;&nbsp;TAction *DrawPlayer;<br/>
&nbsp;&nbsp;TAction *DrawArea;<br/>
&nbsp;&nbsp;TAction *ShowGameOver;<br/>
&nbsp;&nbsp;T<a href="CppTime.htm">Time</a>r *<a href="CppTime.htm">Time</a>r1;<br/>
&nbsp;&nbsp;TRichEdit *RichEdit1;<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageRichel;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageAnimation;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageMessage;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImagePressKeyDown;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Find3RowExecute(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppInitialize.htm">Initialize</a>Execute(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall DeletePlayerExecute(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall DrawPlayerExecute(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall DrawAreaExecute(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppApplication.htm">Application</a>Events1Idle(TObject *Sender, <b><a href="CppBool.htm">bool</a></b> &amp;Done);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormClick(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TFormMain(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitMain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitMain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitMain.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitAboutBox.h"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMemoryH.htm">memory</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitThreeDotsChasing.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormMain *FormMain;<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> BACKGROUND <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> BRATWURST&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 1;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> BIERTJE&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 2;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> RICHEL&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> 3;<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx=9;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy=5;<br/>
<b><a href="CppInt.htm">int</a></b> area[maxx][maxy];<br/>
<b><a href="CppInt.htm">int</a></b> temparea[maxx][maxy];<br/>
<b><a href="CppInt.htm">int</a></b> playerX,playerY;<br/>
<b><a href="CppInt.htm">int</a></b> picture;<br/>
<b><a href="CppDouble.htm">double</a></b> morph=0.0;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormMain::TFormMain(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
&nbsp;&nbsp;RichEdit1-&gt;Top <a href="CppOperatorAssign.htm">=</a> (maxy * 100) <a href="CppOperatorPlus.htm">+</a> 5;<br/>
&nbsp;&nbsp;RichEdit1-&gt;Left <a href="CppOperatorAssign.htm">=</a> 25 <a href="CppOperatorPlus.htm">+</a> 25 <a href="CppOperatorPlus.htm">+</a> 100;<br/>
&nbsp;&nbsp;RichEdit1-&gt;Refresh();<br/>
&nbsp;&nbsp;ImageAnimation-&gt;Top <a href="CppOperatorAssign.htm">=</a> (maxy * 100) <a href="CppOperatorPlus.htm">+</a> 5;<br/>
&nbsp;&nbsp;ImageAnimation-&gt;Left <a href="CppOperatorAssign.htm">=</a> RichEdit1-&gt;Left <a href="CppOperatorPlus.htm">+</a> RichEdit1-&gt;Width <a href="CppOperatorPlus.htm">+</a> 25;<br/>
&nbsp;&nbsp;ImageMessage-&gt;Top <a href="CppOperatorAssign.htm">=</a> (maxy * 100) <a href="CppOperatorPlus.htm">+</a> 100 <a href="CppOperatorPlus.htm">+</a> 5;<br/>
&nbsp;&nbsp;ImageMessage-&gt;Left <a href="CppOperatorAssign.htm">=</a> ImageAnimation-&gt;Left;<br/>
&nbsp;&nbsp;ImageMessage-&gt;Refresh();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight <a href="CppOperatorAssign.htm">=</a> ImageMessage-&gt;Top <a href="CppOperatorPlus.htm">+</a> ImageMessage-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth <a href="CppOperatorAssign.htm">=</a> (maxx * 100);<br/>
&nbsp;&nbsp;ImagePressKeyDown-&gt;Left <a href="CppOperatorAssign.htm">=</a> (ClientWidth <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (ImagePressKeyDown-&gt;Width <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;ImagePressKeyDown-&gt;Top <a href="CppOperatorAssign.htm">=</a> ((maxy * 100) <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (ImagePressKeyDown-&gt;Height <a href="CppOperatorDivide.htm">/</a> 2);;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormKeyDown(TObject *Sender, WORD &amp;Key,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TShift<a href="CppState.htm">State</a> Shift)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppTime.htm">Time</a>r1-&gt;Enabled<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppInitialize.htm">Initialize</a>-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">Time</a>r1-&gt;Enabled=<b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ImagePressKeyDown-&gt;Visible <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Refresh();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DrawArea-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdAuto_ptr.htm">std::auto_ptr</a>&lt;TForm<a href="CppAbout.htm">About</a>Box&gt; <a href="CppAbout.htm">about</a>Box;<br/>
&nbsp;&nbsp;<a href="CppStdAuto_ptr.htm">std::auto_ptr</a>&lt;TFormThreeDotsChasing&gt; threeDotsChasing;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (Key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 73 : <a href="CppComment.htm">//</a>letter I<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>0 <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>6)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 76 : <a href="CppComment.htm">//</a>Letter L<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>1 <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>10)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>11)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Easter egg found!<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>Box.reset(<b><a href="CppNew.htm">new</a></b> TForm<a href="CppAbout.htm">About</a>Box(0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>Box-&gt;Hide();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>Box-&gt;ShowModal();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>Box.reset(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeDotsChasing.reset(<b><a href="CppNew.htm">new</a></b> TFormThreeDotsChasing(0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeDotsChasing-&gt;Hide();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeDotsChasing-&gt;ShowModal();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeDotsChasing.reset(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawArea-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 79 : <a href="CppComment.htm">//</a>Letter O<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 86 : <a href="CppComment.htm">//</a>Letter V<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>3)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 69 : <a href="CppComment.htm">//</a>Letter E<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>4 <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>9)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 82 : <a href="CppComment.htm">//</a>Letter R<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>5)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 67 : <a href="CppComment.htm">//</a>Letter C<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>7)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 72 : <a href="CppComment.htm">//</a>Letter H<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorEqual.htm">==</a>8)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppApplication.htm">Application</a>Events1-&gt;Tag<a href="CppOperatorIncrement.htm">++</a>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {<a href="CppApplication.htm">Application</a>Events1-&gt;Tag=0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_RIGHT :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerX&lt;maxx-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> area[playerX+1][playerY]<a href="CppOperatorEqual.htm">==</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorNotEqual.htm">!=</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX<a href="CppOperatorIncrement.htm">++</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerX&lt;maxx-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorEqual.htm">==</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[playerX][playerY]=BACKGROUND;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX<a href="CppOperatorIncrement.htm">++</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_LEFT :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerX&gt;0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> area[playerX-1][playerY]<a href="CppOperatorEqual.htm">==</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorNotEqual.htm">!=</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX<a href="CppOperatorDecrement.htm">--</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerX&gt;0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorEqual.htm">==</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[playerX][playerY]=BACKGROUND;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX<a href="CppOperatorDecrement.htm">--</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> VK_DOWN :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((playerY<a href="CppOperatorEqual.htm">==</a>maxy-1 <a href="CppOperatorLogicalOr.htm">||</a> area[playerX][playerY+1]&gt;0) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorNotEqual.htm">!=</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<a href="CppComment.htm">//</a>Block put on other block<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[playerX][playerY]=picture;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find3Row-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (area[4][1]<a href="CppOperatorNotEqual.htm">!=</a>BACKGROUND)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{picture=RICHEL;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> { picture <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 2) ;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX=4; playerY=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!(playerY<a href="CppOperatorEqual.htm">==</a>maxy-1 <a href="CppOperatorLogicalOr.htm">||</a> area[playerX][playerY+1]&gt;0) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorNotEqual.htm">!=</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerY<a href="CppOperatorIncrement.htm">++</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerY&lt;maxy-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorEqual.htm">==</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[playerX][playerY]=BACKGROUND;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeletePlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerY<a href="CppOperatorIncrement.htm">++</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (playerY<a href="CppOperatorEqual.htm">==</a>maxy-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> picture<a href="CppOperatorEqual.htm">==</a>RICHEL)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[playerX][playerY]=BACKGROUND;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(playerX*100,playerY*100,ImageBackGround-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (area[4][1]<a href="CppOperatorNotEqual.htm">!=</a>BACKGROUND)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{picture=RICHEL;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> {picture=1+(<a href="CppStdRand.htm">std::rand</a>()%2);}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;playerX=4; playerY=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppDefault.htm">default</a></b>: ShowMessage(Key); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<a href="CppComment.htm">//</a>End of: <b><a href="CppSwitch.htm">switch</a></b>(Key)<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::Find3RowExecute(TObject *Sender)<br/>
{<br/>
<b><a href="CppInt.htm">int</a></b> temparea[maxx][maxy];<br/>
<b><a href="CppBool.htm">bool</a></b> FoundOne=<b><a href="CppFalse.htm">false</a></b>;<br/>
<b><a href="CppInt.htm">int</a></b> y,x;<br/>
<br/>
<b><a href="CppDo.htm">do</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;FoundOne=<b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (y=0; y&lt;maxy; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (x=0; x&lt;maxx; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temparea[x][y]=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (y=0; y&lt;maxy; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (x=0; x&lt;maxx; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&gt;1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x-1][y]*area[x-2][y]<a href="CppOperatorEqual.htm">==</a>1)<a href="CppOperatorLogicalOr.htm">||</a> (area[x][y]*area[x-1][y]*area[x-2][y]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ temparea[x][y]=temparea[x-1][y]=temparea[x-2][y]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y&gt;1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x][y-1]*area[x][y-2]<a href="CppOperatorEqual.htm">==</a>1) <a href="CppOperatorLogicalOr.htm">||</a> (area[x][y]*area[x][y-1]*area[x][y-2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x][y-1]=temparea[x][y-2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&lt;maxx-2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x+1][y]*area[x+2][y]<a href="CppOperatorEqual.htm">==</a>1) <a href="CppOperatorLogicalOr.htm">||</a> (area[x][y]*area[x+1][y]*area[x+2][y]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x+1][y]=temparea[x+2][y]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y&lt;maxy-2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x][y+1]*area[x][y+2]<a href="CppOperatorEqual.htm">==</a>1) <a href="CppOperatorLogicalOr.htm">||</a> (area[x][y]*area[x][y+1]*area[x][y+2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x][y+1]=temparea[x][y+2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&gt;1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y&gt;1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x-1][y-1]*area[x-2][y-2]<a href="CppOperatorEqual.htm">==</a>1) <a href="CppOperatorLogicalOr.htm">||</a> (area[x][y]*area[x-1][y-1]*area[x-2][y-2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x-1][y-1]=temparea[x-2][y-2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&gt;1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y&lt;maxy-2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x-1][y+1]*area[x-2][y+2]<a href="CppOperatorEqual.htm">==</a>1)<a href="CppOperatorLogicalOr.htm">||</a>(area[x][y]*area[x-1][y+1]*area[x-2][y+2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x-1][y+1]=temparea[x-2][y+2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&lt;maxx-2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y&gt;1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x+1][y-1]*area[x+2][y-2]<a href="CppOperatorEqual.htm">==</a>1)<a href="CppOperatorLogicalOr.htm">||</a>(area[x][y]*area[x+1][y-1]*area[x+2][y-2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x+1][y-1]=temparea[x+2][y-2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x&lt;maxx-2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y&lt;maxy-2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((area[x][y]*area[x+1][y+1]*area[x+2][y+2]<a href="CppOperatorEqual.htm">==</a>1)<a href="CppOperatorLogicalOr.htm">||</a>(area[x][y]*area[x+1][y+1]*area[x+2][y+2]<a href="CppOperatorEqual.htm">==</a>8))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{temparea[x][y]=temparea[x+1][y+1]=temparea[x+2][y+2]=-1; FoundOne=<b><a href="CppTrue.htm">true</a></b>;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (y=0; y&lt;maxy; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (x=0; x&lt;maxx; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (temparea[x][y]<a href="CppOperatorEqual.htm">==</a>-1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temparea[x][y]=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> i; <b><a href="CppFor.htm">for</a></b> (i=y; i&gt;0; i<a href="CppOperatorDecrement.htm">--</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[x][i]=area[x][i-1];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>Next i<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[x][0]=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
&nbsp;&nbsp;}<a href="CppComment.htm">//</a>End of <b><a href="CppDo.htm">do</a></b><br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (FoundOne<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
DrawArea-&gt;Execute();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::<a href="CppInitialize.htm">Initialize</a>Execute(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y,x;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (y=0; y&lt;maxy; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (x=0; x&lt;maxx; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area[x][y]=BACKGROUND;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temparea[x][y]=0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(x*100, y*100,ImageBackGround-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
&nbsp;&nbsp;playerX=4;<br/>
&nbsp;&nbsp;playerY=0;<br/>
&nbsp;&nbsp;picture=1+(<a href="CppStdRand.htm">std::rand</a>()%2);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::DeletePlayerExecute(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(playerX*100, playerY*100,ImageBackGround-&gt;Picture-&gt;Graphic);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::DrawPlayerExecute(TObject *Sender)<br/>
{<br/>
<b><a href="CppSwitch.htm">switch</a></b> (picture)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> BRATWURST : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(playerX*100, playerY*100,ImageBratWurst-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> BIERTJE&nbsp;&nbsp; : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(playerX*100, playerY*100,ImageBiertje-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> RICHEL&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(playerX*100, playerY*100,ImageRichel-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<a href="CppComment.htm">//</a>End of <b><a href="CppSwitch.htm">switch</a></b><br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::DrawAreaExecute(TObject *Sender)<br/>
{<br/>
<b><a href="CppInt.htm">int</a></b> y,x;<br/>
<b><a href="CppFor.htm">for</a></b> (y=0; y&lt;maxy; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (x=0; x&lt;maxx; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (area[x][y])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> BACKGROUND : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(x*100, y*100,ImageBackGround-&gt;Picture-&gt;Graphic); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> BRATWURST : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(x*100, y*100,ImageBratWurst-&gt;Picture-&gt;Graphic); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> BIERTJE : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(x*100, y*100,ImageBiertje-&gt;Picture-&gt;Graphic); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> RICHEL : <b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(x*100, y*100,ImageRichel-&gt;Picture-&gt;Graphic); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b> : ShowMessage("Error!");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>End of: <b><a href="CppSwitch.htm">switch</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>StringGrid1-&gt;Cells[x][y]=area[x][y];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::<a href="CppApplication.htm">Application</a>Events1Idle(TObject *Sender, <b><a href="CppBool.htm">bool</a></b> &amp;Done)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y&lt;ImageAnimation-&gt;Height; y<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * MyLineResult=(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *) ImageAnimation-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * MyLineBiertje=(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *) ImageBiertje-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * MyLineBratWurst=(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *) ImageBratWurst-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x&lt;ImageAnimation-&gt;Width; x<a href="CppOperatorIncrement.htm">++</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyLineResult[x*3]<a href="CppOperatorAssign.htm">=</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBiertje[x*3]*morph <a href="CppOperatorPlus.htm">+</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBratWurst[x*3]*(1.0-morph);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyLineResult[x*3+1]<a href="CppOperatorAssign.htm">=</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBiertje[x*3+1]*morph <a href="CppOperatorPlus.htm">+</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBratWurst[x*3+1]*(1.0-morph);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyLineResult[x*3+2]<a href="CppOperatorAssign.htm">=</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBiertje[x*3+2]*morph <a href="CppOperatorPlus.htm">+</a> (<b><a href="CppDouble.htm">double</a></b>)MyLineBratWurst[x*3+2]*(1.0-morph);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<a href="CppComment.htm">//</a>next y<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ImageAnimation-&gt;Tag<a href="CppOperatorEqual.htm">==</a>0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;morph<a href="CppOperatorPlusAssign.htm">+=</a>0.01;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (morph&gt;1.0) {ImageAnimation-&gt;Tag=1; morph=1.0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;morph<a href="CppOperatorMinusAssign.htm">-=</a>0.01;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (morph&lt;0.0) {ImageAnimation-&gt;Tag=0; morph=0.0;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(ImageAnimation-&gt;Left,ImageAnimation-&gt;Top,ImageAnimation-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(25,ImageAnimation-&gt;Top,ImageAnimation-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;<a href="CppApplication.htm">Application</a>-&gt;ProcessMessages();<br/>
&nbsp;&nbsp;Done=<b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::FormClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;DrawArea-&gt;Execute();<br/>
&nbsp;&nbsp;DrawPlayer-&gt;Execute();<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitThreeDotsChasing.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitThreeDotsChasing.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitThreeDotsChasingH<br/>
<a href="CppDefine.htm">#define</a> UnitThreeDotsChasingH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;AppEvnts.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppDefine.htm">#define</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAssert.htm">assert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;math&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppTime.htm">time</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormThreeDotsChasing : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *Image1;<br/>
&nbsp;&nbsp;T<a href="CppApplication.htm">Application</a>Events *<a href="CppApplication.htm">Application</a>Events1;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall <a href="CppApplication.htm">Application</a>Events1Idle(TObject *Sender, <b><a href="CppBool.htm">bool</a></b> &amp;Done);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormClick(TObject *Sender);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormResize(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TFormThreeDotsChasing(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppInt.htm">int</a></b> count;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&gt; &gt; distance;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppPoint.htm">Point</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppShort.htm">short</a></b> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppShort.htm">short</a></b> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppChar.htm">char</a></b> dx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppChar.htm">char</a></b> dy;<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<b><a href="CppShort.htm">short</a></b> abs(<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b>&amp; i) { <b><a href="CppReturn.htm">return</a></b> (i&lt;0 ? <a href="CppOperatorMinus.htm">-</a>i : i); }<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppPoint.htm">Point</a> &gt; <a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> reset<a href="CppPoint.htm">Point</a>s();<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormThreeDotsChasing *FormThreeDotsChasing;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameDasWahreSchlagerfestVcl/UnitThreeDotsChasing.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameDasWahreSchlagerfestVcl/UnitThreeDotsChasing.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
 *&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>. A simple game.<br/>
 *&nbsp;&nbsp;Copyright (C) 2003&nbsp;&nbsp;Richel Bilderbeek<br/>
 *<br/>
 *&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
 *&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
 *&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
 *&nbsp;&nbsp;(at your option) any later version.<br/>
 *<br/>
 *&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
 *&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
 *&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
 *&nbsp;&nbsp;GNU General Public License for more details.<br/>
 *<br/>
 *&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
 *&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
 <a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitThreeDotsChasing.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormThreeDotsChasing *FormThreeDotsChasing;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormThreeDotsChasing::TFormThreeDotsChasing(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s.resize(4);<br/>
&nbsp;&nbsp;<a href="CppStdSrand.htm">std::srand</a>(clock());<br/>
<br/>
&nbsp;&nbsp;FormResize(0);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormThreeDotsChasing::<a href="CppApplication.htm">Application</a>Events1Idle(TObject *Sender, <b><a href="CppBool.htm">bool</a></b> &amp;Done)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> n<a href="CppPoint.htm">Point</a>s <a href="CppOperatorAssign.htm">=</a> <a href="CppPointer.htm">point</a>s.size();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> maxy <a href="CppOperatorAssign.htm">=</a> Image1-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> maxx <a href="CppOperatorAssign.htm">=</a> Image1-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppChar.htm">char</a></b> i=0; i&lt;n<a href="CppPoint.htm">Point</a>s; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> other <a href="CppOperatorAssign.htm">=</a> (i+1)%n<a href="CppPoint.htm">Point</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(other<a href="CppOperatorGreaterEqual.htm">&gt;=</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(other&lt;n<a href="CppPoint.htm">Point</a>s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].x &lt; <a href="CppPointer.htm">point</a>s[other].x) <a href="CppOperatorIncrement.htm">++</a>(<a href="CppPointer.htm">point</a>s[i].dx);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <a href="CppOperatorDecrement.htm">--</a>(<a href="CppPointer.htm">point</a>s[i].dx);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].y &lt; <a href="CppPointer.htm">point</a>s[other].y) <a href="CppOperatorIncrement.htm">++</a>(<a href="CppPointer.htm">point</a>s[i].dy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <a href="CppOperatorDecrement.htm">--</a>(<a href="CppPointer.htm">point</a>s[i].dy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].x<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppPointer.htm">point</a>s[i].dx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].x&lt;0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppPointer.htm">point</a>s[i].x=0; <a href="CppPointer.htm">point</a>s[i].dx <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppPointer.htm">point</a>s[i].dx; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].x<a href="CppOperatorGreaterEqual.htm">&gt;=</a>maxx)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppPointer.htm">point</a>s[i].x=maxx-1; <a href="CppPointer.htm">point</a>s[i].dx <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppPointer.htm">point</a>s[i].dx; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].y<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppPointer.htm">point</a>s[i].dy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].y&lt;0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppPointer.htm">point</a>s[i].y=0; <a href="CppPointer.htm">point</a>s[i].dy <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppPointer.htm">point</a>s[i].dy; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (<a href="CppPointer.htm">point</a>s[i].y<a href="CppOperatorGreaterEqual.htm">&gt;=</a>maxy)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppPointer.htm">point</a>s[i].y=maxy-1; <a href="CppPointer.htm">point</a>s[i].dy <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppPointer.htm">point</a>s[i].dy; }<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * pLine;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppShort.htm">short</a></b> y=0; y&lt;maxy; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pLine=<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *&gt;(Image1-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppShort.htm">short</a></b> x=0; x&lt;maxx; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexRedX&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> abs(x-<a href="CppPointer.htm">point</a>s[0].x)%maxx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexRedY&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> abs(y-<a href="CppPointer.htm">point</a>s[0].y)%maxy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexGreenX <a href="CppOperatorAssign.htm">=</a> abs(x-<a href="CppPointer.htm">point</a>s[1].x)%maxx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexGreenY <a href="CppOperatorAssign.htm">=</a> abs(y-<a href="CppPointer.htm">point</a>s[1].y)%maxy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexBlueX&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> abs(x-<a href="CppPointer.htm">point</a>s[2].x)%maxx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> indexBlueY&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> abs(y-<a href="CppPointer.htm">point</a>s[2].y)%maxy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexRedX&nbsp;&nbsp; <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexGreenX <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexBlueX&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexRedY&nbsp;&nbsp; <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexGreenY <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexBlueY&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexRedX&nbsp;&nbsp; &lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexGreenX &lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexBlueX&nbsp;&nbsp;&lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexRedY&nbsp;&nbsp; &lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexGreenY &lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(indexBlueY&nbsp;&nbsp;&lt; <b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pLine[x*3+0]<a href="CppOperatorAssign.htm">=</a> distance[indexBlueX ][indexBlueY ]; <a href="CppComment.htm">//</a>Blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pLine[x*3+1]<a href="CppOperatorAssign.htm">=</a> distance[indexGreenX][indexGreenY]; <a href="CppComment.htm">//</a>Green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pLine[x*3+2]<a href="CppOperatorAssign.htm">=</a> distance[indexRedX&nbsp;&nbsp;][indexRedY&nbsp;&nbsp;]; <a href="CppComment.htm">//</a>Red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(0,0,Image1-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;Done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormThreeDotsChasing::FormClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;reset<a href="CppPoint.htm">Point</a>s();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> TFormThreeDotsChasing::reset<a href="CppPoint.htm">Point</a>s()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> height <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> n<a href="CppPoint.htm">Point</a>s <a href="CppOperatorAssign.htm">=</a> <a href="CppPointer.htm">point</a>s.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i&lt;n<a href="CppPoint.htm">Point</a>s; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>()%width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>()%height;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].dx <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>()%5)-2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s[i].dy <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>()%5)-2;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormThreeDotsChasing::FormResize(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Generate vectors <b><a href="CppFor.htm">for</a></b> look-up table<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;ClientWidth;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppShort.htm">short</a></b> height <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;ClientHeight;<br/>
<br/>
&nbsp;&nbsp;distance.resize(width);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i&lt;width; <a href="CppOperatorIncrement.htm">++</a>i) distance[i].resize(height);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x&lt;width; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y&lt;height; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> xD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> yD <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dist <a href="CppOperatorAssign.htm">=</a> sqrt( (xD*xD) <a href="CppOperatorPlus.htm">+</a> (yD*yD) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distance[x][y] <a href="CppOperatorAssign.htm">=</a> 255.0 * <a href="CppStdExp.htm">std::exp</a>(-dist/150.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppPoint.htm">Point</a>s<br/>
&nbsp;&nbsp;reset<a href="CppPoint.htm">Point</a>s();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create image<br/>
&nbsp;&nbsp;Image1-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> width;<br/>
&nbsp;&nbsp;Image1-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> height;<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
