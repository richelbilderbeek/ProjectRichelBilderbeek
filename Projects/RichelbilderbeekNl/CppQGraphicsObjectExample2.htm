<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QGraphicsObjectExample2</title>
  <meta name="description" content="C++ QGraphicsObjectExample2"/>
  <meta name="keywords" content="C++ QGraphicsObjectExample2 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQGraphicsObjectExample2.htm">QGraphicsObjectExample2</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:03:09 2015
 -->
<p>
  <a href="CppQGraphicsObjectExample2.htm">QGraphicsObject example 2: flashing</a> is a <a href="CppQGraphicsObject.htm">QGraphicsObject</a>
  <a href="CppExample.htm">example</a>.
  It demonstrates how to use an internal <a href="CppQTimer.htm">QTimer</a> to make the item flash.
</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppQGraphicsObjectExample2.png">View a screenshot of 'CppQGraphicsObjectExample2' (png)</a></li>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQGraphicsObjectExample2.zip">Download the Qt Creator project 'CppQGraphicsObjectExample2' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>
  <a href="CppQGraphicsObjectExample3.htm">QGraphicsObject example 3: flashing only</a> is a simplification of this example.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppQGraphicsObjectExample2/CppQGraphicsObjectExample2.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/CppQGraphicsObjectExample2.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtitem.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtitem.h<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CppQGraphicsObjectExample2.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQGraphicsObjectExample2/qtitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/qtitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTITEM_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsObject.htm">QGraphicsObject</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQPixmap.htm">QPixmap</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<a href="CppComment.htm">///</a>A <a href="CppQGraphicsObject.htm">QGraphicsObject</a> that<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> loads its pixmap from resources<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> is clickable<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> is movable<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> changes the cursor<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> can flash<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsObject.htm">QGraphicsObject</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Item(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Item(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Item&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Item&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Item&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Lets <b><a href="CppThis.htm">this</a></b> item flash<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Flash();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> <a href="CppEmit.htm">emitted</a> when clicked<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQt.htm">Qt</a>Item*)&gt; m_clicked_signal;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *event);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F boundingRect() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *option, <a href="CppQWidget.htm">QWidget</a> *<a href="CppWidget.htm">widget</a>);<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The number of flashes since flashing started<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_n_flashes;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pixmap<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQPixmap.htm">QPixmap</a>&gt; m_pixmap;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Use <a href="CppQTimer.htm">QTimer</a> because of its <b><a href="CppQtSignals.htm">signals</a></b><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Deleted by its parent (which is <b><a href="CppThis.htm">this</a></b> item itself)<br/>
&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The event called when the item must flicker<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> FlashEvent();<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQGraphicsObjectExample2/qtitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/qtitem.cpp" border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQCursor.htm">QCursor</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPixmap.htm">QPixmap</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtitem.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppQt.htm">Qt</a>Item::<a href="CppQt.htm">Qt</a>Item(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsObject.htm">QGraphicsObject</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_clicked_signal{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_n_flashes{0},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_pixmap{<b><a href="CppNew.htm">new</a></b> <a href="CppQPixmap.htm">QPixmap</a>(":/images/PicR.png")},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r{<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>(<b><a href="CppThis.htm">this</a></b>)}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_pixmap-&gt;isNull()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Assume pixmap is loaded successfully");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Without <b><a href="CppThis.htm">this</a></b> line, hoverMoveEvent will not be called<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAcceptHoverEvents(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the interval between the flickers<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(100); <a href="CppComment.htm">//</a>100 ms<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r,<a href="CppSignalMacro.htm">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(FlashEvent()));<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppQt.htm">Qt</a>Item::boundingRect() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F targetRect <a href="CppOperatorAssign.htm">=</a> m_pixmap-&gt;rect().translated(-m_pixmap-&gt;rect().center());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().y() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().y() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;1.0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> targetRect;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Item::Flash()<br/>
{<br/>
&nbsp;&nbsp;m_n_flashes <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Item::FlashEvent()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_n_flashes;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_n_flashes <a href="CppOperatorEqual.htm">==</a> 10) { m_<a href="CppTime.htm">time</a>r-&gt;stop(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Item::hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setCursor(<a href="CppQCursor.htm">QCursor</a>(<a href="CppQt.htm">Qt</a>::<a href="CppPoint.htm">Point</a>ingHandCursor));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Item::mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppEmit.htm">Emit</a> the <a href="CppBoost.htm">Boost</a> <a href="CppSignal.htm">signal</a><br/>
&nbsp;&nbsp;m_clicked_signal(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Item::paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.htm">QWidget</a> *)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F targetRect <a href="CppOperatorAssign.htm">=</a> m_pixmap-&gt;rect().translated(-m_pixmap-&gt;rect().center());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().x() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().x() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().y() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(targetRect.center().y() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;1.0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_n_flashes <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Inverted pixmap<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image <a href="CppOperatorAssign.htm">=</a> m_pixmap-&gt;toImage();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image.invertPixels();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>::fromImage(image);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawPixmap(targetRect,pixmap,m_pixmap-&gt;rect());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Regular pixmap<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawPixmap(targetRect,*m_pixmap,m_pixmap-&gt;rect());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw a red line around the pixmap when it is selected<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;isSelected())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(255,0,0),1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRect(<b><a href="CppThis.htm">this</a></b>-&gt;boundingRect().adjusted(1.0,1.0,-1.0,-1.0));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQGraphicsObjectExample2/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a> w;<br/>
&nbsp;&nbsp;w.setGeometry(100,100,400,400);<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQGraphicsObjectExample2/qtwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/qtwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTWIDGET_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Item;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a click on a <a href="CppQt.htm">Qt</a>Item<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnItemClick(<a href="CppQt.htm">Qt</a>Item * <b><a href="CppConst.htm">const</a></b> item);<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQGraphicsObjectExample2/qtwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQGraphicsObjectExample2/qtwidget.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/bind.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsScene.htm">QGraphicsScene</a> * <b><a href="CppConst.htm">const</a></b> scene <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setScene(scene);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_items <a href="CppOperatorAssign.htm">=</a> 64;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_items; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;m_clicked_signal.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::OnItemClick,<b><a href="CppThis.htm">this</a></b>, <a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Scatter those items around a bit<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 128 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 256),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 128 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 256));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;scene-&gt;addItem(item);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::OnItemClick(<a href="CppQt.htm">Qt</a>Item * <b><a href="CppConst.htm">const</a></b> item)<br/>
{<br/>
&nbsp;&nbsp;item-&gt;Flash();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
