<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GameMaziak</title>
  <meta name="description" content="C++ GameMaziak"/>
  <meta name="keywords" content="C++ GameMaziak "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GameMaziak.htm">GameMaziak</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.663 at Sat Jun 21 23:25:29 2014
 -->
<p>Maziak is a simple maze retro <a href="Games.htm">game</a> (and a clone of the Sinclair ZX Spectrum/MSX <a href="Games.htm">game</a> Maziak/Maziacs/Mazoggs), in which you have to find a maze's exit. But there are also enemies in the maze that can be beaten by a sword. There are also prisoners, that temporarily show the way to the exit upon freeing them.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ol>
  <li><a href="GameMaziak_2_0.png">View a screenshot of 'Maziak' (v.2.0)(png)</a></li>
  <li><a href="GameMaziakMenu_2_0.png">View a screenshot of the 'Maziak' menu screen (v.2.0)(png)</a></li>
  <li><a href="GameMaziakInstructions_2_0.png">View a screenshot of the 'Maziak' instructions screen (v.2.0)(png)</a></li>
  <li><a href="GameMaziakSprites_2_0.zip">Download the 'Maziak' (png) sprites (v.2.0)(zip)</a></li>
  <li>Older: <a href="GameMaziakVcl.htm">Maziak (VCL)</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="GameMaziak.htm">Maziak</a> history</h2>
<p>&nbsp;</p>
<ul>
  <li>YYYY-MM-DD: [description]</li>
  <li>1987-xx-xx: Maziak was one of my favorite MSX games</li>
  <li>2007-10-20: I wanted to developed a Windows clone of Maziak, because the original was nowhere to be found, so I programmed Maziak v. 1.0.</li>
  <li>2010-02-05: Discovered that the original game name was 'Maziacs' or 'Mazogs'. And that my clone was not that identical at all</li>
  <li>2010-02-16: Maziak v. 1.1: changed graphics to resemble original more</li>
  <li>2010-02-17: Maziak v. 1.2: added animated sprites</li>
  <li>2010-02-18: Maziak v. 1.3: added animated fights</li>
  <li>2010-02-25: Maziak v. 1.4: small improvements</li>
  <li>2010-07-31: Maziak v. 2.0: Maziak is now cross-platform!</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://en.wikipedia.org/wiki/Maziacs">View the WikiPedia page on the original Maziacs</a></li>
  <li><a href="http://www.youtube.com/watch?v=MQE3VK1Bdh4">View a YouTube video of the original Maziacs on the Sinclair ZX Spectrum</a></li>
  <li><a href="http://www.classic-retro-games.com/Mazogs-%28and-Maziacs%29_124.html">Another Maziacs PC clone</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameMaziak/GameMaziakConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakConsole.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">CppAbout</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">CppFileIo</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppHelp.htm">CppHelp</a>/<a href="CppHelp.htm">CppHelp</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppTextCanvas/CppTextCanvas.pri)<br/>
include(../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">GameMaziak</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameMaziak/GameMaziakDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>/<a href="CppDotMatrix.htm">CppDotMatrix</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppGeometry/CppGeometry.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppPlane/CppPlane.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppTextCanvas/CppTextCanvas.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppWidget.htm">CppWidget</a>/<a href="CppWidget.htm">CppWidget</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppQtCanvas/CppQtCanvas.pri)<br/>
include(<a href="GameMaziak.htm">GameMaziak</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameMaziak/GameMaziakWebsite.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakWebsite.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">CppAbout</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">CppFileIo</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppHelp.htm">CppHelp</a>/<a href="CppHelp.htm">CppHelp</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.pri)<br/>
<br/>
include(<a href="GameMaziak.htm">GameMaziak</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/GameMaziakConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>menudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>playerdirection.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>playermove.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>mazesquare.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>difficulty.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>helper.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>intmaze.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>sprites.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>sprite.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>maze.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>distancesmaze.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>solutionmaze.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a><a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>key.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>receiver.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>menudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>playerdirection.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>playermove.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>mazesquare.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>difficulty.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>helper.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>intmaze.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>fwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>sprites.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>sprite.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>maze.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>distancesmaze.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>solutionmaze.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a><a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>key.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">maziak</a>receiver.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/Licence.txt<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">GameMaziak</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/GameMaziakDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">GameMaziak</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>menudialog2.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a><a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gamewondialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>canvas.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>menudialog2.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a><a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gamewondialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>canvas.h<br/>
<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>menudialog2.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a><a href="CppMain.htm">main</a>dialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gamewondialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/GameMaziakWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/GameMaziakWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">GameMaziak</a>Console.pri)<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameMaziak.htm">GameMaziak</a>/<a href="GameMaziak.htm">GameMaziak</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>menudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; args { <a href="CppRibi.htm">ribi</a>::MenuDialog::<a href="CppConvert.htm">Convert</a>Arguments(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>) };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog().Execute(args);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakdifficulty.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakdifficulty.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKDIFFICULTY_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKDIFFICULTY_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> Difficulty { easy, medium, hard };<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKDIFFICULTY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakdifficulty.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakdifficulty.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>difficulty.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakdistancesmaze.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakdistancesmaze.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKDISTANCESMAZE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKDISTANCESMAZE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>DistancesMaze displays the distances from a goal<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
 456789<br/>
 3<br/>
 21012 8<br/>
&nbsp;&nbsp; 1 3 7<br/>
 4323456<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<b><a href="CppStruct.htm">struct</a></b> DistancesMaze<br/>
{<br/>
&nbsp;&nbsp;DistancesMaze(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> goal_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> goal_y);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSize() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_distances.size()); }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_distances;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> CalculateDistances(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKDISTANCESMAZE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakdistancesmaze.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakdistancesmaze.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>distancesmaze.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::DistancesMaze(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;: m_distances(CalculateDistances(maze,x,y))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::CalculateDistances(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume maze is square<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze-&gt;<a href="CppIsSquare.htm">IsSquare</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze-&gt;Get(x,y) <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>Assume starting <a href="CppPointer.htm">point</a> is no wall<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> maze-&gt;GetSize();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> area <a href="CppOperatorAssign.htm">=</a> size * size;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxDistance <a href="CppOperatorAssign.htm">=</a> area;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; distances(size, <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(size,maxDistance));<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calculate the distances<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> distance <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;distances[y][x] <a href="CppOperatorAssign.htm">=</a> 0; <a href="CppComment.htm">//</a>Set <b><a href="CppFinal.htm">final</a></b> <a href="CppPointer.htm">point</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; found;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;found.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(found.empty() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppFalse.htm">false</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>distance;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; <b><a href="CppNew.htm">new</a></b>Found;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt;::<a href="CppIterator.htm">iterator</a> j <a href="CppOperatorAssign.htm">=</a> found.end();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdVector.htm">std::vector</a>&lt; <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt;::<a href="CppIterator.htm">iterator</a> i <a href="CppOperatorAssign.htm">=</a> found.begin(); i<a href="CppOperatorNotEqual.htm">!=</a>j; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> (*i).first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> (*i).second;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (maze-&gt;Get(x,y-1) <a href="CppOperatorEqual.htm">==</a> 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No wall<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances[y-1][x] <a href="CppOperatorEqual.htm">==</a> maxDistance) <a href="CppComment.htm">//</a>Not already in solution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distances[y-1][x] <a href="CppOperatorAssign.htm">=</a> distance;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b>Found.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y-1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (maze-&gt;Get(x,y+1) <a href="CppOperatorEqual.htm">==</a> 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No wall<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances[y+1][x] <a href="CppOperatorEqual.htm">==</a> maxDistance) <a href="CppComment.htm">//</a>Not already in solution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distances[y+1][x] <a href="CppOperatorAssign.htm">=</a> distance;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b>Found.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y+1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (maze-&gt;Get(x+1,y) <a href="CppOperatorEqual.htm">==</a> 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No wall<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances[y][x+1] <a href="CppOperatorEqual.htm">==</a> maxDistance) <a href="CppComment.htm">//</a>Not already in solution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distances[y][x+1] <a href="CppOperatorAssign.htm">=</a> distance;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b>Found.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x+1,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (maze-&gt;Get(x-1,y) <a href="CppOperatorEqual.htm">==</a> 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No wall<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances[y][x-1] <a href="CppOperatorEqual.htm">==</a> maxDistance) <a href="CppComment.htm">//</a>Not already in solution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distances[y][x-1] <a href="CppOperatorAssign.htm">=</a> distance;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b>Found.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x-1,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;found <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b>Found;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> distances;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> x &lt; GetSize()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y &lt; GetSize();<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanGet(x,y));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_distances[y][x];<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakfwd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakfwd.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKFWD_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKFWD_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> DistancesMaze;<br/>
<b><a href="CppStruct.htm">struct</a></b> IntMaze;<br/>
<b><a href="CppStruct.htm">struct</a></b> MainDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> Maze;<br/>
<b><a href="CppStruct.htm">struct</a></b> Sprites;<br/>
<b><a href="CppStruct.htm">struct</a></b> SolutionMaze;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKFWD_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakhelper.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakhelper.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKHELPER_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKHELPER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; GetShuffledDeadEnds(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; <b><a href="CppInt.htm">int</a></b>Maze);<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; GetShuffledNonDeadEnds(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; <b><a href="CppInt.htm">int</a></b>Maze);<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> CanMoveTo(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;MazeSquare&gt; &gt;&amp; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> hasSword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> showSolution);<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetDeadEnds.htm">GetDeadEnds</a>.htm<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppGetDeadEnds.htm">GetDeadEnds</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze);<br/>
<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetMazeDistances.htm">GetMazeDistances</a>.htm<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppGetMazeDistances.htm">GetMazeDistances</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y);<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; GetShuffledDeadEnds(<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; <b><a href="CppInt.htm">int</a></b>Maze);<br/>
<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKHELPER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakhelper.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakhelper.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>helper.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakintmaze.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakintmaze.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKINTMAZE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKINTMAZE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>A maze <b><a href="CppUsing.htm">using</a></b> <a href="CppInt.htm">integer</a>s<br/>
/<a href="CppComment.htm">//</a> 0 : path<br/>
/<a href="CppComment.htm">//</a> 1 : wall<br/>
<b><a href="CppStruct.htm">struct</a></b> IntMaze<br/>
{<br/>
&nbsp;&nbsp;IntMaze(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz) : IntMaze(<a href="CppCreateMaze.htm">CreateMaze</a>(sz)) {}<br/>
&nbsp;&nbsp;IntMaze(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> GetMaze() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_maze; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSize() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_maze.size()); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Already shuffled, m_dead_ends[0] is the suggested initial coordinat <b><a href="CppFor.htm">for</a></b> the player<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppGetDeadEnds.htm">GetDeadEnds</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_dead_ends; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Find the distances to (x,y) in walking squared<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;DistancesMaze&gt; <a href="CppGetDistance.htm">GetDistance</a>sMaze(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Adapted from http://www.richelbilderbeek.nl/Cpp<a href="CppIsSquare.htm">IsSquare</a>.htm<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; m_dead_ends;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_maze;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppGetDeadEnds.htm">GetDeadEnds</a>.htm<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; CreateDeadEnds(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Creates a maze<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> 0 : path<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> 1 : wall<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppCreateMaze.htm">CreateMaze</a>.htm<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppCreateMaze.htm">CreateMaze</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKINTMAZE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakintmaze.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakintmaze.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>distancesmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>helper.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::IntMaze(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a>&amp; maze)<br/>
&nbsp;&nbsp;: m_dead_ends{CreateDeadEnds(maze)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_maze{maze}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> x &lt; GetSize()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y &lt; GetSize();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::CreateDeadEnds(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> maze.size();<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; dead_ends;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=1; y<a href="CppOperatorNotEqual.htm">!=</a>size-1; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=1; x<a href="CppOperatorNotEqual.htm">!=</a>size-1; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (maze[y][x] <a href="CppOperatorNotEqual.htm">!=</a> 0) <b><a href="CppContinue.htm">continue</a></b>; <a href="CppComment.htm">//</a>Continue <b><a href="CppIf.htm">if</a></b> here is a wall<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nWalls<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (maze[y+1][x&nbsp;&nbsp;] <a href="CppOperatorEqual.htm">==</a> 1 ? 1 : 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (maze[y-1][x&nbsp;&nbsp;] <a href="CppOperatorEqual.htm">==</a> 1 ? 1 : 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (maze[y&nbsp;&nbsp;][x+1] <a href="CppOperatorEqual.htm">==</a> 1 ? 1 : 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (maze[y&nbsp;&nbsp;][x-1] <a href="CppOperatorEqual.htm">==</a> 1 ? 1 : 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (nWalls <a href="CppOperatorEqual.htm">==</a> 3) dead_ends.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Shuffle them<br/>
&nbsp;&nbsp;<a href="CppStdRandom_shuffle.htm">std::random_shuffle</a>(dead_ends.begin(), dead_ends.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> dead_ends;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::<a href="CppCreateMaze.htm">CreateMaze</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume correct size dimensions<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( sz &gt; 4 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> sz <a href="CppOperatorModulus.htm">%</a> 4 <a href="CppOperatorEqual.htm">==</a> 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Size must be 3 <a href="CppOperatorPlus.htm">+</a> (n * 4) <b><a href="CppFor.htm">for</a></b> n &gt; 0");<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start with a wall-only maze<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; maze(sz, <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(sz,1));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Prepare maze, remove paths<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> XXXXXXX&nbsp;&nbsp;&nbsp;&nbsp;1111111<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> X X X X&nbsp;&nbsp;&nbsp;&nbsp;1212121<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> XXXXXXX&nbsp;&nbsp;&nbsp;&nbsp;1111111<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> X XOX X <a href="CppOperatorMinus.htm">-</a>&gt; 1210121<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> XXXXXXX&nbsp;&nbsp;&nbsp;&nbsp;1111111<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> X X X X&nbsp;&nbsp;&nbsp;&nbsp;1212121<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> XXXXXXX&nbsp;&nbsp;&nbsp;&nbsp;1111111<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw open spaces<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=1; y&lt;sz; y<a href="CppOperatorPlusAssign.htm">+=</a>2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=1; x&lt;sz; x<a href="CppOperatorPlusAssign.htm">+=</a>2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> 2; <a href="CppComment.htm">//</a>2: unexplored<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mid <a href="CppOperatorAssign.htm">=</a> sz/2;<br/>
<br/>
&nbsp;&nbsp;maze[mid][mid] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; v;<br/>
&nbsp;&nbsp;v.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(mid,mid));<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (!v.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set a random explorer square at the back<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(v.back(),v[ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size())]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check possible adjacent squares<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> v.back().first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> v.back().second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; next;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x &gt; 0 <a href="CppOperatorPlus.htm">+</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> maze[y][x-2] <a href="CppOperatorEqual.htm">==</a> 2) next.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x-2,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y &gt; 0 <a href="CppOperatorPlus.htm">+</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> maze[y-2][x] <a href="CppOperatorEqual.htm">==</a> 2) next.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y-2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x &lt; sz <a href="CppOperatorMinus.htm">-</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> maze[y][x+2] <a href="CppOperatorEqual.htm">==</a> 2) next.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x+2,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y &lt; sz <a href="CppOperatorMinus.htm">-</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> maze[y+2][x] <a href="CppOperatorEqual.htm">==</a> 2) next.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(x,y+2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Dead end?<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (next.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.pop_back();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Select a random next adjacent square<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nextIndex <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(next.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nextX <a href="CppOperatorAssign.htm">=</a> next[nextIndex].first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nextY <a href="CppOperatorAssign.htm">=</a> next[nextIndex].second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Clear next square<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maze[nextY][nextX] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Clear path towards next square<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maze[(y <a href="CppOperatorPlus.htm">+</a> nextY)/2][(x <a href="CppOperatorPlus.htm">+</a> nextX)/2] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> next square to stack<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(nextX,nextY));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> maze;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanGet(x,y));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_maze[y][x];<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::DistancesMaze&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::<a href="CppGetDistance.htm">GetDistance</a>sMaze(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
&nbsp;&nbsp;) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; int_maze {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> IntMaze(m_maze)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(int_maze);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;DistancesMaze&gt; maze {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> DistancesMaze(int_maze,x,y)<br/>
&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> maze;<br/>
}<br/>
<br/>
<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::<a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_maze.empty());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; row: m_maze)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row.size()<a href="CppOperatorNotEqual.htm">!=</a>m_maze.size()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakkey.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakkey.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKKEY_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKKEY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> Key<br/>
{<br/>
&nbsp;&nbsp;up, right, down, left<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKKEY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakkey.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakkey.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>key.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmaindialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSetH.htm">set</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>key.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playerdirection.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playermove.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprite.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Text<a href="CppCanvas.htm">Canvas</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> MainDialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnumClass.htm">enum class</a></b> <a href="CppState.htm">State</a> { playing, has_won, game_over };<br/>
<br/>
&nbsp;&nbsp;MainDialog(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maze_size);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AnimateEnemiesAndPrisoners(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AnimateFighting() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GetDoShowSolution() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_do_show_solution; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Play the game<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Execute() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Maze&gt; GetMaze() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_maze; }<br/>
<br/>
&nbsp;&nbsp;PlayerDirection GetPlayerDirection() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_direction; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetPlayerFightingFrame() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_fighting_frame; }<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GetPlayerHasSword() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_has_sword; }<br/>
&nbsp;&nbsp;PlayerMove GetPlayerMove() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_move_now; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; GetSolution() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_solution; }<br/>
<br/>
&nbsp;&nbsp;Sprite GetSpriteFloor(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetSpriteFloor(m_maze,x,y,m_do_show_solution,m_solution); }<br/>
&nbsp;&nbsp;Sprite GetSpriteAboveFloor(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetSpriteAboveFloor(x,y,m_maze); }<br/>
&nbsp;&nbsp;Sprite GetSpritePlayer() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetSpritePlayer(m_direction,m_move_now,m_has_sword,m_fighting_frame); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppState.htm">State</a> Get<a href="CppState.htm">State</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_state; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_x; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_y; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a key<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnKeyPress(<b><a href="CppConst.htm">const</a></b> Key key);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Press all active keys<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rPressKeys();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Remove a key<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnKeyRelease(<b><a href="CppConst.htm">const</a></b> Key key);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> RespondToCurrentSquare() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetShowSolution(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> do_show_solution) <b><a href="CppNoexcept.htm">noexcept</a></b> { m_do_show_solution <a href="CppOperatorAssign.htm">=</a> do_show_solution; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Text<a href="CppCanvas.htm">Canvas</a>&gt; ToText<a href="CppCanvas.htm">Canvas</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width<br/>
&nbsp;&nbsp;) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt; m_signal_game_over;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt; m_signal_game_won;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt; m_signal_start_showing_solution;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt; m_signal_stop_showing_solution;<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
<br/>
&nbsp;&nbsp;PlayerDirection m_direction;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> DistancesMaze&gt; m_distances;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_do_show_solution;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_fighting_frame;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_has_sword;<br/>
&nbsp;&nbsp;<a href="CppStdSet.htm">std::set</a>&lt;Key&gt; m_keys;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Maze&gt; m_maze;<br/>
&nbsp;&nbsp;PlayerMove m_move_now;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; m_solution;<br/>
&nbsp;&nbsp;<a href="CppState.htm">State</a> m_state;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_x;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_y;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; CreateNewSolution() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> Sprite GetSpriteFloor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Maze&gt; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> show_solution,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; solution<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> Sprite GetSpriteAboveFloor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Maze&gt; m_maze<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> Sprite GetSpritePlayer(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> PlayerDirection direction,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> PlayerMove moveNow,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> m_has_sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_fighting_frame<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmaindialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>key.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>receiver.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>solutionmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprites.h"<br/>
<a href="CppInclude.htm">#include</a> "textcanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::MainDialog(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maze_size)<br/>
&nbsp;&nbsp;: m_signal_game_over{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_game_won{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_start_showing_solution{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_stop_showing_solution{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_direction(PlayerDirection::pdDown),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_distances{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_do_show_solution(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_fighting_frame(0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_has_sword(<b><a href="CppTrue.htm">true</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_keys{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_maze{<b><a href="CppNew.htm">new</a></b> Maze(maze_size)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_move_now(PlayerMove::none),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_solution{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_state{<a href="CppState.htm">State</a>::playing},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_x(-1),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_y(-1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; exit <a href="CppOperatorAssign.htm">=</a> m_maze-&gt;FindExit();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_distances <a href="CppOperatorAssign.htm">=</a> m_maze-&gt;GetIntMaze()-&gt;<a href="CppGetDistance.htm">GetDistance</a>sMaze(exit.first,exit.second);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; start <a href="CppOperatorAssign.htm">=</a> m_maze-&gt;FindStart();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_x <a href="CppOperatorAssign.htm">=</a> start.first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_y <a href="CppOperatorAssign.htm">=</a> start.second;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze_size <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Maze size must be 7 <a href="CppOperatorPlus.htm">+</a> (4 * n) <b><a href="CppFor.htm">for</a></b> n e [0,-<a href="CppOperatorStreamIn.htm">&gt;&gt;</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_maze-&gt;<a href="CppIsSquare.htm">IsSquare</a>());<br/>
<br/>
&nbsp;&nbsp;m_solution <a href="CppOperatorAssign.htm">=</a> CreateNewSolution();<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::AnimateEnemiesAndPrisoners(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_maze-&gt;AnimateEnemiesAndPrisoners(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;view_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;view_height<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::AnimateFighting() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_fighting_frame &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_fighting_frame;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_fighting_frame <a href="CppOperatorEqual.htm">==</a> 13)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_has_sword)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_state <a href="CppOperatorAssign.htm">=</a> <a href="CppState.htm">State</a>::game_over;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_game_over();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_fighting_frame <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_has_sword <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::CreateNewSolution() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; solution {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> SolutionMaze(m_distances,m_x,m_y)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(solution);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> solution;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::Execute() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;Receiver r;<br/>
&nbsp;&nbsp;m_signal_game_over.connect(<a href="CppBoostBind.htm">boost::bind</a>(&amp;Receiver::OnGameOver,r));<br/>
&nbsp;&nbsp;m_signal_game_won.connect(<a href="CppBoostBind.htm">boost::bind</a>(&amp;Receiver::OnGameWon,r));<br/>
&nbsp;&nbsp;m_signal_start_showing_solution.connect(<a href="CppBoostBind.htm">boost::bind</a>(&amp;Receiver::OnStartShowingSolution,r));<br/>
&nbsp;&nbsp;m_signal_stop_showing_solution.connect(<a href="CppBoostBind.htm">boost::bind</a>(&amp;Receiver::OnStopShowingSolution,r));<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 20;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> 20;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*ToText<a href="CppCanvas.htm">Canvas</a>(width,height)) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppChar.htm">char</a></b> c;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCin.htm">std::cin</a> <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> c;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppStdCin.htm">std::cin</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Please enter one of the following <a href="CppChar.htm">character</a>s:" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "a: move right" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "s: move down" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "d: move right" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "w: move up" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "q: quit" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "other: wait" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (c)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'w': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyPress(Key::up); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'd': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyPress(Key::right); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 's': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyPress(Key::down); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'a': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyPress(Key::left); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'q': <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;On<a href="CppTime.htm">Time</a>rPressKeys();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (c)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'w': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyRelease(Key::up); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'd': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyRelease(Key::right); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 's': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyRelease(Key::down); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'a': <b><a href="CppThis.htm">this</a></b>-&gt;OnKeyRelease(Key::left); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;RespondToCurrentSquare();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;AnimateEnemiesAndPrisoners(width,height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(m_fighting_frame &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AnimateFighting();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::GetSpriteFloor(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Maze&gt; maze,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> do_show_solution,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> SolutionMaze&gt; solution<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(do_show_solution <a href="CppOperatorEqual.htm">==</a> <b><a href="CppFalse.htm">false</a></b> <a href="CppOperatorLogicalOr.htm">||</a> solution-&gt;GetSize() <a href="CppOperatorEqual.htm">==</a> maze-&gt;GetSize());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!maze-&gt;CanGet(x,y)) { <b><a href="CppReturn.htm">return</a></b> Sprite::wall; }<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (do_show_solution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> solution-&gt;Get(x,y) <a href="CppOperatorEqual.htm">==</a> 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> ( maze-&gt;Get(x,y) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> maze-&gt;Get(x,y) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEnemy1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> maze-&gt;Get(x,y) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEnemy2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Sprite::path;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Sprite::empty;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::GetSpriteAboveFloor(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Maze&gt; maze<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!maze-&gt;CanGet(x,y)) { <b><a href="CppReturn.htm">return</a></b> Sprite::wall; }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>What <b><a href="CppElse.htm">else</a></b> here?<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(maze-&gt;Get(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msStart&nbsp;&nbsp;&nbsp;&nbsp; :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msEmpty&nbsp;&nbsp;&nbsp;&nbsp; : <b><a href="CppReturn.htm">return</a></b> Sprite::transparent;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msWall&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b> Sprite::wall;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msEnemy1&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b> Sprite::enemy1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msEnemy2&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b> Sprite::enemy2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msPrisoner1 : <b><a href="CppReturn.htm">return</a></b> Sprite::prisoner1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msPrisoner2 : <b><a href="CppReturn.htm">return</a></b> Sprite::prisoner2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msSword&nbsp;&nbsp;&nbsp;&nbsp; : <b><a href="CppReturn.htm">return</a></b> Sprite::sword;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msExit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b> Sprite::exit;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unexpected MazeSquare at mMaze");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::GetSpritePlayer(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> PlayerDirection direction,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> PlayerMove move,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> has_sword,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> fighting_frame<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (fighting_frame)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;0: <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;1: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_sword1 : Sprite::fight_no_sword1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;2: <b><a href="CppReturn.htm">return</a></b> Sprite::fight2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;3: <b><a href="CppReturn.htm">return</a></b> Sprite::fight3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;4: <b><a href="CppReturn.htm">return</a></b> Sprite::fight4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;5: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_sword1 : Sprite::fight_no_sword1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;6: <b><a href="CppReturn.htm">return</a></b> Sprite::fight2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;7: <b><a href="CppReturn.htm">return</a></b> Sprite::fight3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;8: <b><a href="CppReturn.htm">return</a></b> Sprite::fight4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b>&nbsp;&nbsp;9: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_won1 : Sprite::fight_lost1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 10: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_won2 : Sprite::fight_lost2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 11: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_won1 : Sprite::fight_lost1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 12: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::fight_won2 : Sprite::fight_lost2;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (direction)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerDirection::pdUp:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (move)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::none: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_look_up_sword : Sprite::player_look_up;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::up1:&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_up_sword1 : Sprite::player_walk_up1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::up2:&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_up_sword2 : Sprite::player_walk_up2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>("!Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported PlayerMove mMoveNow <b><a href="CppFor.htm">for</a></b> mDirection <a href="CppOperatorEqual.htm">==</a> up");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppBreak.htm">break</a></b>; Unreachable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerDirection::pdRight:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (move)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::none:&nbsp;&nbsp; <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_look_right_sword : Sprite::player_look_right;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::right1: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_right_sword1 : Sprite::player_walk_right1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::right2: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_right_sword2 : Sprite::player_walk_right2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>("!Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported PlayerMove mMoveNow <b><a href="CppFor.htm">for</a></b> mDirection <a href="CppOperatorEqual.htm">==</a> right");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppBreak.htm">break</a></b>; Unreachable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerDirection::pdDown:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (move)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::none:&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_look_down_sword : Sprite::player_look_down;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::down1: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_down_sword1 : Sprite::player_walk_down1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::down2: <b><a href="CppReturn.htm">return</a></b> has_sword ? Sprite::player_walk_down_sword2 : Sprite::player_walk_down2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>("!Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported PlayerMove mMoveNow <b><a href="CppFor.htm">for</a></b> mDirection <a href="CppOperatorEqual.htm">==</a> down");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppBreak.htm">break</a></b>; Unreachable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerDirection::pdLeft:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (move)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::none:&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (has_sword ? Sprite::player_look_left_sword : Sprite::player_look_left);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::left1: <b><a href="CppReturn.htm">return</a></b> (has_sword ? Sprite::player_walk_left_sword1 : Sprite::player_walk_left1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> PlayerMove::left2: <b><a href="CppReturn.htm">return</a></b> (has_sword ? Sprite::player_walk_left_sword2 : Sprite::player_walk_left2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>("!Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported PlayerMove mMoveNow <b><a href="CppFor.htm">for</a></b> mDirection <a href="CppOperatorEqual.htm">==</a> left");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppBreak.htm">break</a></b>; Unreachable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>("!Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported PlayerDirection");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Unreachable<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::OnKeyPress(<b><a href="CppConst.htm">const</a></b> <a href="GameMaziak.htm">maziak</a>::Key key)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (m_fighting_frame &gt; 0) repaint();<br/>
&nbsp;&nbsp;m_keys.insert(key);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::left : m_keys.erase(Key::right); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::right: m_keys.erase(Key::left ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::up&nbsp;&nbsp; : m_keys.erase(Key::down ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::down : m_keys.erase(Key::up&nbsp;&nbsp; ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::OnKeyRelease(<b><a href="CppConst.htm">const</a></b> <a href="GameMaziak.htm">maziak</a>::Key key)<br/>
{<br/>
&nbsp;&nbsp;m_keys.erase(key);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::On<a href="CppTime.htm">Time</a>rPressKeys()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_fighting_frame &gt; 0) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_keys.empty()) { m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none; <b><a href="CppReturn.htm">return</a></b>; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> Key key: m_keys)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check the keys pressed<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (key)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::left:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_direction <a href="CppOperatorAssign.htm">=</a> PlayerDirection::pdLeft;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_maze-&gt;CanMoveTo(m_x-1,m_y,m_has_sword,m_do_show_solution))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> (m_move_now <a href="CppOperatorEqual.htm">==</a> PlayerMove::left1 ? PlayerMove::left2 : PlayerMove::left1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>m_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::right:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_direction <a href="CppOperatorAssign.htm">=</a> PlayerDirection::pdRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_maze-&gt;CanMoveTo(m_x+1,m_y,m_has_sword,m_do_show_solution))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> (m_move_now <a href="CppOperatorEqual.htm">==</a> PlayerMove::right1 ? PlayerMove::right2 : PlayerMove::right1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::up:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_direction <a href="CppOperatorAssign.htm">=</a> PlayerDirection::pdUp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_maze-&gt;CanMoveTo(m_x,m_y-1,m_has_sword,m_do_show_solution))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> (m_move_now <a href="CppOperatorEqual.htm">==</a> PlayerMove::up1 ? PlayerMove::up2 : PlayerMove::up1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>m_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Key::down:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_direction <a href="CppOperatorAssign.htm">=</a> PlayerDirection::pdDown;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_maze-&gt;CanMoveTo(m_x,m_y+1,m_has_sword,m_do_show_solution))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> (m_move_now <a href="CppOperatorEqual.htm">==</a> PlayerMove::down1 ? PlayerMove::down2 : PlayerMove::down1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_move_now <a href="CppOperatorAssign.htm">=</a> PlayerMove::none;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::RespondToCurrentSquare() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_maze-&gt;CanGet(m_x,m_y));<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_maze-&gt;Get(m_x,m_y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msStart:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msEmpty:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msWall:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Player cannot be in wall");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msEnemy1: <b><a href="CppCase.htm">case</a></b> MazeSquare::msEnemy2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_fighting_frame <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_maze-&gt;Set(m_x,m_y,MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msPrisoner1: <b><a href="CppCase.htm">case</a></b> MazeSquare::msPrisoner2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_maze-&gt;Set(m_x,m_y,MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_solution <a href="CppOperatorAssign.htm">=</a> CreateNewSolution();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGetDistancesPath.htm">GetDistancesPath</a>(m_distances,m_x,m_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_solution-&gt;<a href="CppIsSquare.htm">IsSquare</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_do_show_solution <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppTime.htm">time</a>r_show_solution-&gt;start();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_start_showing_solution();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msSword:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_maze-&gt;Set(m_x,m_y,MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_has_sword <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> MazeSquare::msExit:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_state <a href="CppOperatorAssign.htm">=</a> <a href="CppState.htm">State</a>::has_won;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_game_won();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Text<a href="CppCanvas.htm">Canvas</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog::ToText<a href="CppCanvas.htm">Canvas</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width<br/>
) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Text<a href="CppCanvas.htm">Canvas</a>&gt; canvas {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Text<a href="CppCanvas.htm">Canvas</a>(view_height,view_width)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Get<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppState.htm">State</a>::has_won)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,1,"You");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,2,"won");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,3,"the");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,4,"game");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> canvas;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (Get<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppState.htm">State</a>::game_over)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,1,"GAME");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutText(1,2,"OVER");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> canvas;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw maze<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>view_height; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>view_width; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>xVector and yVector are the indices in the non-visual maze 2D <a href="CppStdVector.htm">std::vector</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> xVector <a href="CppOperatorAssign.htm">=</a> GetX() <a href="CppOperatorMinus.htm">-</a> (view_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorPlus.htm">+</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> yVector <a href="CppOperatorAssign.htm">=</a> GetY() <a href="CppOperatorMinus.htm">-</a> (view_height <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorPlus.htm">+</a> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the floor tile<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> pixmap_floor {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sprites::ToChar(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetSpriteFloor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMaze(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xVector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yVector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetDoShowSolution(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetSolution()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutChar(x,y,pixmap_floor);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw what's moving or standing on the floor<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Sprite sprite_above_floor {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetSpriteAboveFloor(xVector,yVector,GetMaze())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sprite_above_floor <a href="CppOperatorNotEqual.htm">!=</a> Sprite::transparent)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> pixmap_above_floor {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sprites::ToChar(sprite_above_floor)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutChar(x,y,pixmap_above_floor);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw player<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> player {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sprites::ToChar(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetSpritePlayer(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetPlayerDirection(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetPlayerMove(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetPlayerHasSword(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetPlayerFightingFrame()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(player);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;canvas-&gt;PutChar(view_width/2,view_height <a href="CppOperatorDivide.htm">/</a> 2,player);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> canvas;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmaze.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmaze.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKMAZE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKMAZE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Maze<br/>
{<br/>
&nbsp;&nbsp;Maze(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size) : Maze(CreateIntMaze(size)) {}<br/>
&nbsp;&nbsp;Maze(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; int_maze);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Animate the enemies and prisoners in sight<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/(all others are just standing still)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AnimateEnemiesAndPrisoners(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanSet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y, <b><a href="CppConst.htm">const</a></b> MazeSquare s) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Can a player move to coordinat (x,y) ?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanMoveTo(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> hasSword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> showSolution) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; FindExit() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; FindStart() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;MazeSquare Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; GetIntMaze() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_int_maze; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSize() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_maze.size()); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Adapted from http://www.richelbilderbeek.nl/Cpp<a href="CppIsSquare.htm">IsSquare</a>.htm<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y, <b><a href="CppConst.htm">const</a></b> MazeSquare s) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; m_int_maze;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;MazeSquare&gt; &gt; m_maze;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; CreateIntMaze(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;MazeSquare&gt; &gt; <a href="CppCreateMaze.htm">CreateMaze</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; int_maze) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKMAZE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmaze.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmaze.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maze.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> Source, <b><a href="CppClass.htm">class</a></b> Target&gt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;Target&gt; &gt; <a href="CppConvert.htm">Convert</a><a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;Source&gt; &gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxy&gt;0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v[0].size());<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;Target&gt; &gt; t(maxy,<a href="CppStdVector.htm">std::vector</a>&lt;Target&gt;(maxx));<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>maxy; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>maxx; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[y][x] <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;Target&gt;(v[y][x]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> t;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Maze(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; int_maze)<br/>
&nbsp;&nbsp;: m_int_maze(int_maze),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_maze(<a href="CppCreateMaze.htm">CreateMaze</a>(int_maze))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(int_maze-&gt;<a href="CppIsSquare.htm">IsSquare</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsSquare.htm">IsSquare</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(FindExit().first&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(FindStart().first <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::AnimateEnemiesAndPrisoners(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_width,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> view_height<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move them<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> minx <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(0,x <a href="CppOperatorMinus.htm">-</a> view_width );<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> miny <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(0,y <a href="CppOperatorMinus.htm">-</a> view_height);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsSquare.htm">IsSquare</a>());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(GetSize(),y <a href="CppOperatorPlus.htm">+</a> view_height);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(GetSize(),x <a href="CppOperatorPlus.htm">+</a> view_width);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(miny <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(miny <a href="CppOperatorLessEqual.htm">&lt;=</a> GetSize());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxy <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxy <a href="CppOperatorLessEqual.htm">&lt;=</a> GetSize());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(minx <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(minx <a href="CppOperatorLessEqual.htm">&lt;=</a> GetSize());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxx <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maxx <a href="CppOperatorLessEqual.htm">&lt;=</a> GetSize());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(miny <a href="CppOperatorLessEqual.htm">&lt;=</a> maxy);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(minx <a href="CppOperatorLessEqual.htm">&lt;=</a> maxx);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> row=miny; row<a href="CppOperatorNotEqual.htm">!=</a>maxy; <a href="CppOperatorIncrement.htm">++</a>row)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row &lt; GetSize());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> col=minx; col<a href="CppOperatorNotEqual.htm">!=</a>maxx; <a href="CppOperatorIncrement.htm">++</a>col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>msEnemy1 changes to msEnemy2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Only msEnemy2 moves, after moving turning to msEnemy1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(col <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(col &lt; GetSize());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> MazeSquare s <a href="CppOperatorAssign.htm">=</a> Get(col,row);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEnemy1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>msEnemy1 changes to msEnemy2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(col,row,MazeSquare::msEnemy2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEnemy2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>msEnemy 2 tries to walk and becomes msEnemy1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; moves;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row &gt; y <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> row &gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get(col,row-1) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty) moves.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(col,row-1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (col &lt; x <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> col &lt; maxx <a href="CppOperatorMinus.htm">-</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get(col+1,row) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty) moves.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(col+1,row));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row &lt; y <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> row &lt; maxy <a href="CppOperatorMinus.htm">-</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get(col,row+1) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty) moves.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(col,row+1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (col &gt; x <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> col &gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get(col-1,row) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty) moves.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(col-1,row));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nMoves <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(moves.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (nMoves <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(moves[0].first,moves[0].second,MazeSquare::msEnemy1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(col,row,MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (nMoves &gt; 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(nMoves <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> moveIndex <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> nMoves;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(moves[moveIndex].first,moves[moveIndex].second,MazeSquare::msEnemy1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(col,row,MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (s<a href="CppOperatorEqual.htm">==</a>MazeSquare::msPrisoner1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Animate prisoners<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(col,row,MazeSquare::msPrisoner2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (s<a href="CppOperatorEqual.htm">==</a>MazeSquare::msPrisoner2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Animate prisoners<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(col,row,MazeSquare::msPrisoner1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::CanGet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> x &lt; GetSize()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> y &lt; GetSize();<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::CanMoveTo(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> hasSword,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> showSolution) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bump into edge<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x &lt; 0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y &lt; 0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_maze.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> maxy) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_maze[y].size())) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> MazeSquare s <a href="CppOperatorAssign.htm">=</a> m_maze[y][x];<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bump into wall<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msWall) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bump into sword<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msSword <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> hasSword) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bump into prisoner<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (showSolution<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msPrisoner1<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a> s <a href="CppOperatorEqual.htm">==</a> MazeSquare::msPrisoner2) ) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bump into empty/enemy/exit, so player can move there<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::CanSet(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y, <b><a href="CppConst.htm">const</a></b> MazeSquare <a href="CppComment.htm">/*</a> s <a href="CppComment.htm">*/</a>) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> CanGet(x,y);<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::CreateIntMaze(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( size &gt; 4 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> size <a href="CppOperatorModulus.htm">%</a> 4 <a href="CppOperatorEqual.htm">==</a> 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Size must be 3 <a href="CppOperatorPlus.htm">+</a> (n * 4) <b><a href="CppFor.htm">for</a></b> n &gt; 0");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> IntMaze(size)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> maze;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MazeSquare&gt; &gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::<a href="CppCreateMaze.htm">CreateMaze</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; int_maze) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(int_maze);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> int_maze-&gt;GetSize();<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MazeSquare&gt; &gt; maze {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppConvert.htm">Convert</a><a href="CppMatrix.htm">Matrix</a>&lt;<b><a href="CppInt.htm">int</a></b>,MazeSquare&gt;(int_maze-&gt;GetMaze())<br/>
&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt; dead_ends <a href="CppOperatorAssign.htm">=</a> int_maze-&gt;<a href="CppGetDeadEnds.htm">GetDeadEnds</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nDeadEnds <a href="CppOperatorAssign.htm">=</a> dead_ends.size();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(nDeadEnds <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 2);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nSwords&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (nDeadEnds <a href="CppOperatorMinus.htm">-</a> 2) <a href="CppOperatorDivide.htm">/</a> 3;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nPrisoners <a href="CppOperatorAssign.htm">=</a> (nDeadEnds <a href="CppOperatorMinus.htm">-</a> 2) <a href="CppOperatorDivide.htm">/</a> 10;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> nEnemies&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> (nDeadEnds <a href="CppOperatorMinus.htm">-</a> 2) <a href="CppOperatorDivide.htm">/</a> 4;<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set a minimum distance <b><a href="CppFor.htm">for</a></b> the player to travel<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(dead_ends[0].first );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(dead_ends[0].second);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(dead_ends[1].first );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(dead_ends[1].second);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> a <a href="CppOperatorAssign.htm">=</a> x1 <a href="CppOperatorMinus.htm">-</a> x2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> b <a href="CppOperatorAssign.htm">=</a> y1 <a href="CppOperatorMinus.htm">-</a> y2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> minDist <a href="CppOperatorAssign.htm">=</a> 0.75 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sz);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdSqrt.htm">std::sqrt</a>( (a * a) <a href="CppOperatorPlus.htm">+</a> (b * b) ) &gt; minDist)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(dead_ends[0],dead_ends[<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> nDeadEnds]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdSwap.htm">std::swap</a>(dead_ends[1],dead_ends[<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> nDeadEnds]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set start<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> dead_ends[0].first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> dead_ends[0].second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y][x] <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> MazeSquare::msStart;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set exit<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> dead_ends[1].first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> dead_ends[1].second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y][x] <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> MazeSquare::msExit;<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; &gt;::const_iterator deadEnd<a href="CppIterator.htm">Iterator</a> <a href="CppOperatorAssign.htm">=</a> dead_ends.begin() <a href="CppOperatorPlus.htm">+</a> 2;<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Place swords in maze, only in dead ends<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>nSwords; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(deadEnd<a href="CppIterator.htm">Iterator</a> <a href="CppOperatorNotEqual.htm">!=</a> dead_ends.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y][x] <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> MazeSquare::msSword;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>deadEnd<a href="CppIterator.htm">Iterator</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Place prisoners in maze, only in dead ends<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>nPrisoners; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(deadEnd<a href="CppIterator.htm">Iterator</a> <a href="CppOperatorNotEqual.htm">!=</a> dead_ends.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y][x] <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> MazeSquare::msPrisoner1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>deadEnd<a href="CppIterator.htm">Iterator</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>nEnemies; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(deadEnd<a href="CppIterator.htm">Iterator</a> <a href="CppOperatorNotEqual.htm">!=</a> dead_ends.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> (*deadEnd<a href="CppIterator.htm">Iterator</a>).second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y][x] <a href="CppOperatorEqual.htm">==</a> MazeSquare::msEmpty);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maze[y][x] <a href="CppOperatorAssign.htm">=</a> MazeSquare::msEnemy1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>deadEnd<a href="CppIterator.htm">Iterator</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> maze;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::FindExit() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; p: GetIntMaze()-&gt;<a href="CppGetDeadEnds.htm">GetDeadEnds</a>())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Get(p.first,p.second) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msExit) <b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Cannot find exit");<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::FindStart() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; p: GetIntMaze()-&gt;<a href="CppGetDeadEnds.htm">GetDeadEnds</a>())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Get(p.first,p.second) <a href="CppOperatorEqual.htm">==</a> MazeSquare::msStart) <b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Cannot find start");<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MazeSquare <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanGet(x,y));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_maze[y][x];<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::<a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_maze.empty());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<a href="CppStdVector.htm">std::vector</a>&lt;MazeSquare&gt; row: m_maze)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row.size()<a href="CppOperatorNotEqual.htm">!=</a>m_maze.size()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Set(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y, <b><a href="CppConst.htm">const</a></b> MazeSquare s) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanSet(x,y,s));<br/>
&nbsp;&nbsp;m_maze[y][x] <a href="CppOperatorAssign.htm">=</a> s;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(Get(x,y) <a href="CppOperatorEqual.htm">==</a> s);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Maze::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmazesquare.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmazesquare.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKMAZESQUARE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKMAZESQUARE_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> MazeSquare<br/>
{<br/>
&nbsp;&nbsp;msEmpty,<br/>
&nbsp;&nbsp;msWall,<br/>
&nbsp;&nbsp;msEnemy1,<br/>
&nbsp;&nbsp;msEnemy2,<br/>
&nbsp;&nbsp;msPrisoner1,<br/>
&nbsp;&nbsp;msPrisoner2,<br/>
&nbsp;&nbsp;msSword,<br/>
&nbsp;&nbsp;msExit,<br/>
&nbsp;&nbsp;msStart <a href="CppComment.htm">//</a>Initial starting position<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKMAZESQUARE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmazesquare.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmazesquare.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> MenuDialog : <b><a href="CppPublic.htm">public</a></b> ::<a href="CppRibi.htm">ribi</a>::MenuDialog<br/>
{<br/>
&nbsp;&nbsp;MenuDialog();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "textcanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::MenuDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorNotEqual.htm">!=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MainDialog&gt; dialog {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> MainDialog( 7 <a href="CppOperatorPlus.htm">+</a> (4 * 2) )<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;dialog-&gt;Execute();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Maziak",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"a simple maze game",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 28th of January 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2007-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtDialWidget.htm">QtDialWidget</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtDialWidget.htm">QtDialWidget</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> ProgramMaziak<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "3.0";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2007-10-22: <a href="CppVersion.htm">version</a> 1.0: Initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-02-16: <a href="CppVersion.htm">version</a> 1.1: Changed graphics to resemble the original Maziacs more. Changed manu screen. Changed 'Game Over' screen. Changed 'Congratulations' screen.",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-02-17: <a href="CppVersion.htm">version</a> 1.2: Animated prisoners. Animated enemies. Animated player. Improved 'Menu' screen. Improved '<a href="CppAbout.htm">About</a>' screen. <a href="CppAdd.htm">Add</a>ed 'What's New?' screen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-02-18: <a href="CppVersion.htm">version</a> 1.3: Animated fights. Prevent overlapping sprites. <a href="CppAdd.htm">Add</a> 'Instructions' screen in menu. Improved 'Menu' screen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-02-25: <a href="CppVersion.htm">version</a> 1.4: Improved 'Game Over' screen. <a href="CppAdd.htm">Add</a>ed animation in 'Congratulations' screen. Improved enemies' intelligence. Improved maze creation <a href="CppAlgorithm.htm">algorithm</a>. Ensured the player is not placed too close to the exit.",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-07-31: <a href="CppVersion.htm">version</a> 2.0: Reprogrammed in <a href="CppQtCreator.htm">Qt Creator</a>, so Maziak is now cross-platform!",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-03-06: <a href="CppVersion.htm">version</a> 2.1: Conformized architecture and naming <b><a href="CppFor.htm">for</a></b> <a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-01-06: <a href="CppVersion.htm">version</a> 3.0: Seperated GUI from game logic, allow console gaming"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakplayerdirection.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakplayerdirection.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKPLAYERDIRECTION_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKPLAYERDIRECTION_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> PlayerDirection { pdLeft, pdRight, pdUp, pdDown };<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKPLAYERDIRECTION_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakplayerdirection.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakplayerdirection.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playerdirection.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakplayermove.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakplayermove.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKPLAYERMOVE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKPLAYERMOVE_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> PlayerMove { none, left1, left2, right1, right2, up1, up2, down1, down2 };<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKPLAYERMOVE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakplayermove.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakplayermove.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playermove.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakreceiver.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakreceiver.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKRECEIVER_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKRECEIVER_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Class used by MainDialog to receive its own <b><a href="CppQtSignals.htm">signals</a></b><br/>
<b><a href="CppStruct.htm">struct</a></b> Receiver<br/>
{<br/>
&nbsp;&nbsp;Receiver();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Has the game been lost?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> IsGameOver() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_is_game_over; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Has the game been won?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> IsGameWon() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_is_game_won; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameOver() <b><a href="CppNoexcept.htm">noexcept</a></b> { m_is_game_over <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameWon()&nbsp;&nbsp;<b><a href="CppNoexcept.htm">noexcept</a></b> { m_is_game_won <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnStartShowingSolution() <b><a href="CppNoexcept.htm">noexcept</a></b> { m_show_solution <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnStopShowingSolution()&nbsp;&nbsp;<b><a href="CppNoexcept.htm">noexcept</a></b> { m_show_solution <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Should the solution stop being shown<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> StopShowingSolution() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_stop_showing_solution; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Indicate the solution has already stopped being shown<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> StoppedShowingSolution() <b><a href="CppNoexcept.htm">noexcept</a></b> { m_stop_showing_solution <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_is_game_over;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_is_game_won;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_show_solution;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_stop_showing_solution;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKRECEIVER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziakreceiver.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziakreceiver.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>receiver.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Receiver::Receiver()<br/>
&nbsp;&nbsp;: m_is_game_over(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_is_game_won(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_show_solution(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_stop_showing_solution(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksolutionmaze.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksolutionmaze.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKSOLUTIONMAZE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKSOLUTIONMAZE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>SolutionMaze displays the solution from a goal (as obtained<br/>
<a href="CppComment.htm">///</a>from a DistanceMaze) and a current position<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
* : solution<br/>
. : other <a href="GameCorridor.htm">corridor</a>s<br/>
<br/>
 ***...<br/>
 *<br/>
 ***.. .<br/>
 . . . .<br/>
 . .....<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> SolutionMaze<br/>
{<br/>
&nbsp;&nbsp;SolutionMaze(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> DistancesMaze&gt; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSize() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; m_maze;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; CreateSolution(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> DistancesMaze&gt; maze,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKSOLUTIONMAZE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksolutionmaze.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksolutionmaze.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>solutionmaze.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>distancesmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::SolutionMaze(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> DistancesMaze&gt; maze,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y<br/>
) : m_maze(CreateSolution(maze,x,y))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppGetDistancesPath.htm">GetDistancesPath</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::IntMaze&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::CreateSolution(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> DistancesMaze&gt; distances,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> player_x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> player_y<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> distances-&gt;GetSize();<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; solution(size, <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(size,0));<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> player_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> player_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> distance <a href="CppOperatorAssign.htm">=</a> distances-&gt;Get(x,y) <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (distance <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>We must be where we are now<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solution[y][x] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( x<a href="CppOperatorNotEqual.htm">!=</a>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances-&gt;Get(x-1,y) <a href="CppOperatorEqual.htm">==</a> distance ) { <a href="CppOperatorDecrement.htm">--</a>x; <a href="CppOperatorDecrement.htm">--</a>distance; <b><a href="CppContinue.htm">continue</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( x<a href="CppOperatorNotEqual.htm">!=</a>size-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances-&gt;Get(x+1,y) <a href="CppOperatorEqual.htm">==</a> distance ) { <a href="CppOperatorIncrement.htm">++</a>x; <a href="CppOperatorDecrement.htm">--</a>distance; <b><a href="CppContinue.htm">continue</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( y<a href="CppOperatorNotEqual.htm">!=</a>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances-&gt;Get(x,y-1) <a href="CppOperatorEqual.htm">==</a> distance ) { <a href="CppOperatorDecrement.htm">--</a>y; <a href="CppOperatorDecrement.htm">--</a>distance; <b><a href="CppContinue.htm">continue</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( y<a href="CppOperatorNotEqual.htm">!=</a>size-1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> distances-&gt;Get(x,y+1) <a href="CppOperatorEqual.htm">==</a> distance ) { <a href="CppOperatorIncrement.htm">++</a>y; <a href="CppOperatorDecrement.htm">--</a>distance; <b><a href="CppContinue.htm">continue</a></b>; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> IntMaze&gt; maze {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> IntMaze(solution)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> maze;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::Get(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_maze-&gt;Get(x,y);<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::GetSize() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_maze-&gt;GetSize();<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::<a href="CppIsSquare.htm">IsSquare</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_maze);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_maze-&gt;<a href="CppIsSquare.htm">IsSquare</a>();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::SolutionMaze::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksprite.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksprite.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKSPRITE_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKSPRITE_H<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> Sprite<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Floor<br/>
&nbsp;&nbsp;empty,<br/>
&nbsp;&nbsp;wall,<br/>
&nbsp;&nbsp;path,<br/>
&nbsp;&nbsp;transparent,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player sprites<br/>
&nbsp;&nbsp;player_look_down,<br/>
&nbsp;&nbsp;player_look_down_sword,<br/>
&nbsp;&nbsp;player_look_left,<br/>
&nbsp;&nbsp;player_look_left_sword,<br/>
&nbsp;&nbsp;player_look_right,<br/>
&nbsp;&nbsp;player_look_right_sword,<br/>
&nbsp;&nbsp;player_look_up,<br/>
&nbsp;&nbsp;player_look_up_sword,<br/>
&nbsp;&nbsp;player_walk_left1,<br/>
&nbsp;&nbsp;player_walk_left2,<br/>
&nbsp;&nbsp;player_walk_left_sword1,<br/>
&nbsp;&nbsp;player_walk_left_sword2,<br/>
&nbsp;&nbsp;player_walk_right1,<br/>
&nbsp;&nbsp;player_walk_right2,<br/>
&nbsp;&nbsp;player_walk_right_sword1,<br/>
&nbsp;&nbsp;player_walk_right_sword2,<br/>
&nbsp;&nbsp;player_walk_down1,<br/>
&nbsp;&nbsp;player_walk_down2,<br/>
&nbsp;&nbsp;player_walk_down_sword1,<br/>
&nbsp;&nbsp;player_walk_down_sword2,<br/>
&nbsp;&nbsp;player_walk_up1,<br/>
&nbsp;&nbsp;player_walk_up2,<br/>
&nbsp;&nbsp;player_walk_up_sword1,<br/>
&nbsp;&nbsp;player_walk_up_sword2,<br/>
&nbsp;&nbsp;player_won1,<br/>
&nbsp;&nbsp;player_won2,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fighting sprites<br/>
&nbsp;&nbsp;fight_sword1,<br/>
&nbsp;&nbsp;fight_no_sword1,<br/>
&nbsp;&nbsp;fight2,<br/>
&nbsp;&nbsp;fight3,<br/>
&nbsp;&nbsp;fight4,<br/>
&nbsp;&nbsp;fight_won1,<br/>
&nbsp;&nbsp;fight_won2,<br/>
&nbsp;&nbsp;fight_lost1,<br/>
&nbsp;&nbsp;fight_lost2,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Non-player sprites<br/>
&nbsp;&nbsp;enemy1,<br/>
&nbsp;&nbsp;enemy2,<br/>
&nbsp;&nbsp;prisoner1,<br/>
&nbsp;&nbsp;prisoner2,<br/>
&nbsp;&nbsp;sword,<br/>
&nbsp;&nbsp;exit,<br/>
<br/>
&nbsp;&nbsp;n_sprites <a href="CppComment.htm">//</a>Never use, used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKSPRITE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksprite.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksprite.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprite.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksprites.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksprites.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MAZIAKSPRITES_H<br/>
<a href="CppDefine.htm">#define</a> MAZIAKSPRITES_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprite.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQPixmap.htm">QPixmap</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Sprites<br/>
{<br/>
&nbsp;&nbsp;Sprites();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; Get(<b><a href="CppConst.htm">const</a></b> Sprite sprite) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/ASCII art<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppChar.htm">char</a></b> ToChar(<b><a href="CppConst.htm">const</a></b> Sprite) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdMap.htm">std::map</a>&lt;Sprite,<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_sprites;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> CamelCasify(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdMap.htm">std::map</a>&lt;Sprite,<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> CreateSprites();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Sprite&gt; GetAllSprites() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> ToStr(<b><a href="CppConst.htm">const</a></b> Sprite) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MAZIAKSPRITES_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/maziaksprites.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/maziaksprites.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprites.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPixmap.htm">QPixmap</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::Sprites()<br/>
&nbsp;&nbsp;: m_sprites(CreateSprites())<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::CamelCasify(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> s.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<a href="CppStdSize_t.htm">std::size_t</a> i <a href="CppOperatorAssign.htm">=</a> 0;i<a href="CppOperatorNotEqual.htm">!=</a>sz;<a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> c <a href="CppOperatorAssign.htm">=</a> s[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> '_')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorPlus.htm">+</a> 1 &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>i;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> d <a href="CppOperatorAssign.htm">=</a> <a href="CppStdToupper.htm">std::toupper</a>(s[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t <a href="CppOperatorPlusAssign.htm">+=</a> d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t <a href="CppOperatorPlusAssign.htm">+=</a> c;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> t;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite,<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::CreateSprites()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite,<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Sprite&gt; v { GetAllSprites() };<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> Sprite sprite: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> spritename { ToStr(sprite) };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;spritename[0] <a href="CppOperatorAssign.htm">=</a> <a href="CppStdToupper.htm">std::toupper</a>(spritename[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;spritename <a href="CppOperatorAssign.htm">=</a> CamelCasify(spritename);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;":/images/" <a href="CppOperatorPlus.htm">+</a> spritename <a href="CppOperatorPlus.htm">+</a> ".png"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; pixmap {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQPixmap.htm">QPixmap</a>(filename.c_str())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (pixmap-&gt;width() <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Pixmap not found");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap-&gt;width() &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap-&gt;height() &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(sprite,pixmap));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::Get(<b><a href="CppConst.htm">const</a></b> Sprite sprite) <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_sprites.find(sprite) <a href="CppOperatorNotEqual.htm">!=</a> m_sprites.end());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; pixmap {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprites.find(sprite)-&gt;second<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> pixmap;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::GetAllSprites() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Sprite&gt; v {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::empty,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::wall,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::path,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::transparent,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_down,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_down_sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_left_sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_right,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_right_sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_up,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_look_up_sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_left1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_left2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_left_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_left_sword2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_right1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_right2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_right_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_right_sword2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_down1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_down2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_down_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_down_sword2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_up1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_up2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_up_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_walk_up_sword2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_won1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::player_won2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_no_sword1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight3,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight4,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_won1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_won2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_lost1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::fight_lost2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::enemy1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::enemy2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::prisoner1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::prisoner2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::sword,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Sprite::exit<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(Sprite::n_sprites)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "All Sprite values (except Sprite::n_sprites) must be in");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::Test");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CamelCasify("player_look_down_sword") <a href="CppOperatorEqual.htm">==</a> "playerLookDownSword");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppChar.htm">char</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::ToChar(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite sprite) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (sprite)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::empty: <b><a href="CppReturn.htm">return</a></b> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::wall: <b><a href="CppReturn.htm">return</a></b> 'X';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::path: <b><a href="CppReturn.htm">return</a></b> '.';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::transparent: <b><a href="CppReturn.htm">return</a></b> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_down: <b><a href="CppReturn.htm">return</a></b> 'v';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_down_sword: <b><a href="CppReturn.htm">return</a></b> 'w';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_left: <b><a href="CppReturn.htm">return</a></b> '&lt;';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_left_sword: <b><a href="CppReturn.htm">return</a></b> 'E';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_right: <b><a href="CppReturn.htm">return</a></b> '&gt;';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_right_sword: <b><a href="CppReturn.htm">return</a></b> '3';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_up: <b><a href="CppReturn.htm">return</a></b> 'A';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_up_sword: <b><a href="CppReturn.htm">return</a></b> 'M';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left1: <b><a href="CppReturn.htm">return</a></b> '\\';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left2: <b><a href="CppReturn.htm">return</a></b> '/';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left_sword1: <b><a href="CppReturn.htm">return</a></b> '=';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left_sword2: <b><a href="CppReturn.htm">return</a></b> 'E';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right1: <b><a href="CppReturn.htm">return</a></b> '\\';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right2: <b><a href="CppReturn.htm">return</a></b> '/';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right_sword1: <b><a href="CppReturn.htm">return</a></b> '=';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right_sword2: <b><a href="CppReturn.htm">return</a></b> '3';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down1: <b><a href="CppReturn.htm">return</a></b> '\\';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down2: <b><a href="CppReturn.htm">return</a></b> '/';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down_sword1: <b><a href="CppReturn.htm">return</a></b> 'W';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down_sword2: <b><a href="CppReturn.htm">return</a></b> 'w';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up1: <b><a href="CppReturn.htm">return</a></b> '/';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up2: <b><a href="CppReturn.htm">return</a></b> '\\';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up_sword1: <b><a href="CppReturn.htm">return</a></b> 'm';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up_sword2: <b><a href="CppReturn.htm">return</a></b> 'M';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_won1: <b><a href="CppReturn.htm">return</a></b> '!';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_won2: <b><a href="CppReturn.htm">return</a></b> '!';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_sword1: <b><a href="CppReturn.htm">return</a></b> '#';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_no_sword1: <b><a href="CppReturn.htm">return</a></b> '+';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight2: <b><a href="CppReturn.htm">return</a></b> '*';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight3: <b><a href="CppReturn.htm">return</a></b> '%';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight4: <b><a href="CppReturn.htm">return</a></b> '@';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_won1: <b><a href="CppReturn.htm">return</a></b> 'W';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_won2: <b><a href="CppReturn.htm">return</a></b> 'w';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_lost1: <b><a href="CppReturn.htm">return</a></b> 'Z';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_lost2: <b><a href="CppReturn.htm">return</a></b> 'z';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::enemy1: <b><a href="CppReturn.htm">return</a></b> 'Z';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::enemy2: <b><a href="CppReturn.htm">return</a></b> 'z';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::prisoner1: <b><a href="CppReturn.htm">return</a></b> ':';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::prisoner2: <b><a href="CppReturn.htm">return</a></b> ';';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::sword: <b><a href="CppReturn.htm">return</a></b> '+';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::exit: <b><a href="CppReturn.htm">return</a></b> '!';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::n_sprites:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should never use Sprite::n_sprites");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Never use Sprite::n_sprites");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unknown Sprite");<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprites::ToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Sprite sprite) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (sprite)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::empty: <b><a href="CppReturn.htm">return</a></b> "empty";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::wall: <b><a href="CppReturn.htm">return</a></b> "wall";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::path: <b><a href="CppReturn.htm">return</a></b> "path";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::transparent: <b><a href="CppReturn.htm">return</a></b> "transparent";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_down: <b><a href="CppReturn.htm">return</a></b> "player_look_down";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_down_sword: <b><a href="CppReturn.htm">return</a></b> "player_look_down_sword";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_left: <b><a href="CppReturn.htm">return</a></b> "player_look_left";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_left_sword: <b><a href="CppReturn.htm">return</a></b> "player_look_left_sword";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_right: <b><a href="CppReturn.htm">return</a></b> "player_look_right";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_right_sword: <b><a href="CppReturn.htm">return</a></b> "player_look_right_sword";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_up: <b><a href="CppReturn.htm">return</a></b> "player_look_up";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_look_up_sword: <b><a href="CppReturn.htm">return</a></b> "player_look_up_sword";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left1: <b><a href="CppReturn.htm">return</a></b> "player_walk_left1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left2: <b><a href="CppReturn.htm">return</a></b> "player_walk_left2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left_sword1: <b><a href="CppReturn.htm">return</a></b> "player_walk_left_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_left_sword2: <b><a href="CppReturn.htm">return</a></b> "player_walk_left_sword2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right1: <b><a href="CppReturn.htm">return</a></b> "player_walk_right1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right2: <b><a href="CppReturn.htm">return</a></b> "player_walk_right2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right_sword1: <b><a href="CppReturn.htm">return</a></b> "player_walk_right_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_right_sword2: <b><a href="CppReturn.htm">return</a></b> "player_walk_right_sword2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down1: <b><a href="CppReturn.htm">return</a></b> "player_walk_down1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down2: <b><a href="CppReturn.htm">return</a></b> "player_walk_down2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down_sword1: <b><a href="CppReturn.htm">return</a></b> "player_walk_down_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_down_sword2: <b><a href="CppReturn.htm">return</a></b> "player_walk_down_sword2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up1: <b><a href="CppReturn.htm">return</a></b> "player_walk_up1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up2: <b><a href="CppReturn.htm">return</a></b> "player_walk_up2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up_sword1: <b><a href="CppReturn.htm">return</a></b> "player_walk_up_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_walk_up_sword2: <b><a href="CppReturn.htm">return</a></b> "player_walk_up_sword2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_won1: <b><a href="CppReturn.htm">return</a></b> "player_won1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::player_won2: <b><a href="CppReturn.htm">return</a></b> "player_won2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_sword1: <b><a href="CppReturn.htm">return</a></b> "fight_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_no_sword1: <b><a href="CppReturn.htm">return</a></b> "fight_no_sword1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight2: <b><a href="CppReturn.htm">return</a></b> "fight2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight3: <b><a href="CppReturn.htm">return</a></b> "fight3";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight4: <b><a href="CppReturn.htm">return</a></b> "fight4";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_won1: <b><a href="CppReturn.htm">return</a></b> "fight_won1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_won2: <b><a href="CppReturn.htm">return</a></b> "fight_won2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_lost1: <b><a href="CppReturn.htm">return</a></b> "fight_lost1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::fight_lost2: <b><a href="CppReturn.htm">return</a></b> "fight_lost2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::enemy1: <b><a href="CppReturn.htm">return</a></b> "enemy1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::enemy2: <b><a href="CppReturn.htm">return</a></b> "enemy2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::prisoner1: <b><a href="CppReturn.htm">return</a></b> "prisoner1";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::prisoner2: <b><a href="CppReturn.htm">return</a></b> "prisoner2";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::sword: <b><a href="CppReturn.htm">return</a></b> "sword";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::exit: <b><a href="CppReturn.htm">return</a></b> "exit";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Sprite::n_sprites:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should never use Sprite::n_sprites");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Never use Sprite::n_sprites");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unknown Sprite");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>menudialog2.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2 w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakcanvas.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakcanvas.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKCANVAS_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKCANVAS_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtcanvas.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Text<a href="CppCanvas.htm">Canvas</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> MainDialog;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQt.htm">Qt</a><a href="CppCanvas.htm">Canvas</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyReleaseEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MainDialog&gt; m_dialog;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Text<a href="CppCanvas.htm">Canvas</a>&gt; m_text_canvas; <a href="CppComment.htm">//</a>Same as <a href="CppCanvas.htm">Canvas</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_enemy;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_press_key;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_show_solution;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_view_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_view_width;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppCanvas.htm">Canvas</a>&gt; Create<a href="CppCanvas.htm">Canvas</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MainDialog&gt; Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameOver();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameWon();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rStartShowingSolution();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rPressKey();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rEnemy();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rStopShowingSolution();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKCANVAS_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakcanvas.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakcanvas.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>canvas.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtcanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "textcanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size)<br/>
&nbsp;&nbsp;: <a href="CppQt.htm">Qt</a><a href="CppCanvas.htm">Canvas</a>(Create<a href="CppCanvas.htm">Canvas</a>(size,size)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog(Create<a href="CppWidget.htm">Widget</a>(size)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text_canvas{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_height(9),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_width(9)<br/>
{<br/>
&nbsp;&nbsp;m_text_canvas <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;Text<a href="CppCanvas.htm">Canvas</a>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppCanvas.htm">Canvas</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_text_canvas);<br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_game_over.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::OnGameOver,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_game_won.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::OnGameWon,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_start_showing_solution.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rStartShowingSolution,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;setInterval(100);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;setInterval(1000);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;setInterval(5000);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_press_key.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rPressKey);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_enemy.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rEnemy);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_show_solution.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rStopShowingSolution);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;start();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;start();<br/>
<br/>
&nbsp;&nbsp;On<a href="CppTime.htm">Time</a>rPressKey();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::~<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppCanvas.htm">Canvas</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::Create<a href="CppCanvas.htm">Canvas</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppCanvas.htm">Canvas</a>&gt; canvas {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Text<a href="CppCanvas.htm">Canvas</a>(width,height)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(canvas);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> canvas;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::MainDialog&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MainDialog&gt; w {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> MainDialog(size)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(e-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_W:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyPress(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::up);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_S:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyPress(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::down);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_A:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyPress(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::left);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_D:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyPress(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::right);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Escape: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Q:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::keyReleaseEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(e-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_W:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyRelease(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::up);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_S:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyRelease(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::down);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_A:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyRelease(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::left);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_D:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;OnKeyRelease(<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key::right);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rPressKey()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;On<a href="CppTime.htm">Time</a>rPressKeys();<br/>
&nbsp;&nbsp;m_dialog-&gt;AnimateFighting();<br/>
&nbsp;&nbsp;m_dialog-&gt;RespondToCurrentSquare();<br/>
&nbsp;&nbsp;Set<a href="CppCanvas.htm">Canvas</a>(m_dialog-&gt;ToText<a href="CppCanvas.htm">Canvas</a>(m_view_width,m_view_height));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rEnemy()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;AnimateFighting();<br/>
&nbsp;&nbsp;m_dialog-&gt;AnimateEnemiesAndPrisoners(m_view_width,m_view_height);<br/>
&nbsp;&nbsp;Set<a href="CppCanvas.htm">Canvas</a>(m_dialog-&gt;ToText<a href="CppCanvas.htm">Canvas</a>(m_view_width,m_view_height));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rStopShowingSolution()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;SetShowSolution(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
&nbsp;&nbsp;Set<a href="CppCanvas.htm">Canvas</a>(m_dialog-&gt;ToText<a href="CppCanvas.htm">Canvas</a>(m_view_width,m_view_height));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::On<a href="CppTime.htm">Time</a>rStartShowingSolution()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;start();<br/>
&nbsp;&nbsp;Set<a href="CppCanvas.htm">Canvas</a>(m_dialog-&gt;ToText<a href="CppCanvas.htm">Canvas</a>(m_view_width,m_view_height));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::OnGameOver()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_text_canvas-&gt;PutText(1,1,"GAME");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_text_canvas-&gt;PutText(1,2,"OVER");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set<a href="CppCanvas.htm">Canvas</a>(m_text_canvas);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>::OnGameWon()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_text_canvas-&gt;PutText(1,1,"WELL");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_text_canvas-&gt;PutText(1,2,"DONE");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set<a href="CppCanvas.htm">Canvas</a>(m_text_canvas);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakgameoverdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakgameoverdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKGAMEOVERDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKGAMEOVERDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakGameOverDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakGameOverDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>MaziakGameOverDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>*);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_allow_close;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on<a href="CppTime.htm">Time</a>r();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKGAMEOVERDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakgameoverdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakgameoverdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTime.htm">time</a>r.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPaintEvent.htm">QPaintEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog),<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;m_allow_close(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(2500);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r.get(),<a href="CppSignalMacro.htm">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(on<a href="CppTime.htm">Time</a>r()));<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::~<a href="CppQt.htm">Qt</a>MaziakGameOverDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::on<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;m_allow_close <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/GameOver.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_top-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Rip.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_center-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/GameOver.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_bottom-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_allow_close) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameOverDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_allow_close) close();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakgamewondialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakgamewondialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKGAMEWONDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKGAMEWONDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakGameWonDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakGameWonDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>MaziakGameWonDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>*);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_allow_close;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on<a href="CppTime.htm">Time</a>r();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKGAMEWONDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakgamewondialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakgamewondialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>gamewondialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTime.htm">time</a>r.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPaintEvent.htm">QPaintEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameMaziak.htm">maziak</a>gamewondialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog),<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;m_allow_close(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(2500);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r.get(),<a href="CppSignalMacro.htm">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(on<a href="CppTime.htm">Time</a>r()));<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::~<a href="CppQt.htm">Qt</a>MaziakGameWonDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::on<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;m_allow_close <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Congratulations.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_top-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/PlayerWon1.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_center-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Bottom<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Congratulations.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_bottom-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_allow_close) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakGameWonDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_allow_close) close();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakinstructionsdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakinstructionsdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKINSTRUCTIONSDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKINSTRUCTIONSDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKINSTRUCTIONSDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakinstructionsdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakinstructionsdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog::<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog)<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog::~<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakmaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakmaindialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>mazesquare.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprite.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>key.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playerdirection.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>playermove.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQPixmap.htm">QPixmap</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maze_size, <a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakMainDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakMainDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>MaziakMainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppInt.htm">int</a></b> WORD;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MainDialog&gt; m_dialog;<br/>
&nbsp;&nbsp;<a href="CppStdMap.htm">std::map</a>&lt;WORD,Key&gt; m_keys;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Sprites&gt; m_sprites;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_enemy;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_press_key;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r_show_solution;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_view_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_view_width;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdMap.htm">std::map</a>&lt;WORD,Key&gt; CreateDefaultKeys() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameOver();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnGameWon();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rStartShowingSolution();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyReleaseEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> * event);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rPressKey();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rEnemy();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rStopShowingSolution();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakmaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakmaindialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>helper.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>intmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>sprites.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>gameoverdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>gamewondialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>solutionmaze.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::<a href="CppQt.htm">Qt</a>MaziakMainDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maze_size,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent<br/>
)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog{<b><a href="CppNew.htm">new</a></b> MainDialog(maze_size)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_keys{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprites(<b><a href="CppNew.htm">new</a></b> Sprites),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_height(9),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_width(9)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_game_over.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::OnGameOver,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_game_won.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::OnGameWon,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_dialog-&gt;m_signal_start_showing_solution.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rStartShowingSolution,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze_size <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Maze size must be 7 <a href="CppOperatorPlus.htm">+</a> (4 * n) <b><a href="CppFor.htm">for</a></b> n e [0,-<a href="CppOperatorStreamIn.htm">&gt;&gt;</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog-&gt;GetMaze()-&gt;<a href="CppIsSquare.htm">IsSquare</a>());<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;setInterval(100);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;setInterval(1000);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;setInterval(5000);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_press_key.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rPressKey);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_enemy.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rEnemy);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(m_<a href="CppTime.htm">time</a>r_show_solution.get(),&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rStopShowingSolution);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;start();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;start();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen center at 75<a href="CppOperatorModulus.htm">%</a> of fullscreen size<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(0,0,screen.width() * 75 <a href="CppOperatorDivide.htm">/</a> 100,screen.height() * 75 <a href="CppOperatorDivide.htm">/</a> 100);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::~<a href="CppQt.htm">Qt</a>MaziakMainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::WORD,<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::Key&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::CreateDefaultKeys() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdMap.htm">std::map</a>&lt;WORD,Key&gt; m;<br/>
&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(<a href="CppQt.htm">Qt</a>::Key_Up&nbsp;&nbsp; ,Key::up&nbsp;&nbsp; ));<br/>
&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(<a href="CppQt.htm">Qt</a>::Key_Right,Key::right));<br/>
&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(<a href="CppQt.htm">Qt</a>::Key_Down ,Key::down ));<br/>
&nbsp;&nbsp;m.insert(<a href="CppStdMake_pair.htm">std::make_pair</a>(<a href="CppQt.htm">Qt</a>::Key_Left ,Key::left ));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (e-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left : m_dialog-&gt;OnKeyPress(Key::left); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right: m_dialog-&gt;OnKeyPress(Key::right); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up&nbsp;&nbsp; : m_dialog-&gt;OnKeyPress(Key::up); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down : m_dialog-&gt;OnKeyPress(Key::down); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_F1&nbsp;&nbsp; : OnGameOver(); close(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_F2&nbsp;&nbsp; : OnGameWon(); close(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Escape: close(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::keyReleaseEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (e-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left : m_dialog-&gt;OnKeyRelease(Key::left); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right: m_dialog-&gt;OnKeyRelease(Key::right); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up&nbsp;&nbsp; : m_dialog-&gt;OnKeyRelease(Key::up); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down : m_dialog-&gt;OnKeyRelease(Key::down); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rPressKey()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;On<a href="CppTime.htm">Time</a>rPressKeys();<br/>
&nbsp;&nbsp;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rEnemy()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;AnimateEnemiesAndPrisoners(m_view_width,m_view_height);<br/>
&nbsp;&nbsp;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rStopShowingSolution()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;SetShowSolution(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::On<a href="CppTime.htm">Time</a>rStartShowingSolution()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;start();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> block_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorPlus.htm">+</a> ((ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;width()&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> 4) <a href="CppOperatorDivide.htm">/</a> m_view_width);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> block_height <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorPlus.htm">+</a> ((ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;height() <a href="CppOperatorMinus.htm">-</a> 4) <a href="CppOperatorDivide.htm">/</a> m_view_height);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> block_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> width()&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> m_view_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> block_height <a href="CppOperatorAssign.htm">=</a> height() <a href="CppOperatorDivide.htm">/</a> m_view_height;<br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;AnimateFighting();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Player-environment interactions<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(painter.isActive());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Clean painter<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>?Really needed?<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; temp { m_sprites-&gt;Get(Sprite::empty) };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(temp);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;rect(),*temp);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;RespondToCurrentSquare();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw maze<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>m_view_height; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>m_view_width; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>xVector and yVector are the indices in the non-visual maze 2D <a href="CppStdVector.htm">std::vector</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> xVector <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetX() <a href="CppOperatorMinus.htm">-</a> (m_view_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorPlus.htm">+</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> yVector <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetY() <a href="CppOperatorMinus.htm">-</a> (m_view_height <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorPlus.htm">+</a> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the floor tile<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; pixmap_floor {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sprites-&gt;Get(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteFloor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xVector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yVector<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap_floor);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(x * block_width )+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(y * block_height)+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*pixmap_floor);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw what's moving or standing on the floor<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pixmap_above_floor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sprites-&gt;Get(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteAboveFloor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xVector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yVector<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pixmap_above_floor);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(x * block_width )+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(y * block_height)+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*pixmap_above_floor<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw player<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQPixmap.htm">QPixmap</a>&gt; player {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sprites-&gt;Get(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpritePlayer()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(player);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((m_view_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2) * block_width )+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((m_view_height <a href="CppOperatorDivide.htm">/</a> 2) * block_height)+0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *player<br/>
&nbsp;&nbsp;&nbsp;&nbsp; );<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::OnGameOver()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakGameOverDialog&gt; f(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakGameOverDialog(0));<br/>
&nbsp;&nbsp;f-&gt;exec();<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::OnGameWon()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_press_key-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_enemy-&gt;stop();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r_show_solution-&gt;stop();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakGameWonDialog&gt; f(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakGameWonDialog);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;f-&gt;exec();<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakMainDialog(99);<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMainDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakmenudialog2.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakmenudialog2.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTMAZIAKMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTMAZIAKMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>difficulty.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> QKeyPressEvent;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQPaintEvent.htm">QPaintEvent</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakMenuDialog2;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>MaziakMenuDialog2 : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>MaziakMenuDialog2(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakMenuDialog2(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakMenuDialog2&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>MaziakMenuDialog2&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>MaziakMenuDialog2&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>MaziakMenuDialog2() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2 *ui;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetMazeSize() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;Difficulty m_difficulty;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnStart();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnStartRetro();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnInstructions();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppAbout.htm">About</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="GameMaziak.htm">maziak</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTMAZIAKMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameMaziak/qtmaziakmenudialog2.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameMaziak/qtmaziakmenudialog2.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Maziak, a simple maze game<br/>
Copyright (C) 2007-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameMaziak.htm">GameMaziak</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>menudialog2.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameMaziak.htm">maziak</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtcanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "qtcanvasdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>canvas.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>instructionsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameMaziak.htm">maziak</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameMaziak.htm">maziak</a>menudialog2.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_difficulty(Difficulty::easy)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen's center<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::~<a href="CppQt.htm">Qt</a>MaziakMenuDialog2() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_easy-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::easy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;repaint();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_medium-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::medium;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;repaint();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_hard-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::hard;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;repaint();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_start-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;OnStart(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_start_retro-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;OnStartRetro(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_instructions-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;OnInstructions();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_about-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;On<a href="CppAbout.htm">About</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;<a href="CppWidget.htm">widget</a>_quit-&gt;<a href="CppGeometry.htm">geometry</a>().contains(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;event-&gt;x(), event-&gt;y()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (event-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_difficulty)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::easy: <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::medium: m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::easy; repaint(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::hard: m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::medium; repaint(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down: <b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_difficulty)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::easy: m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::medium; repaint(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::medium: m_difficulty <a href="CppOperatorAssign.htm">=</a> Difficulty::hard; repaint(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::hard: <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_S: OnStart(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_I: OnInstructions(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_A: On<a href="CppAbout.htm">About</a>(); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Q:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Escape:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close(); <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a>*)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> background(":/images/<a href="GameMaziak.htm">GameMaziak</a>Background.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(rect(),background);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Top left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_difficulty)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::easy:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/PlayerWon1.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::medium:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/PlayerLookDown.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::hard:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/PlayerScared.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_top_left-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Top right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_difficulty)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::easy:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/Fight2.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::medium:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/Fight3.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::hard:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>(":/images/Fight4.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_top_right-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Easy<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(m_difficulty <a href="CppOperatorEqual.htm">==</a> Difficulty::easy<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? ":/images/Easy_selected.png"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: ":/images/Easy_not_selected.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_easy-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Medium<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(m_difficulty <a href="CppOperatorEqual.htm">==</a> Difficulty::medium<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? ":/images/Medium_selected.png"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: ":/images/Medium_not_selected.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_medium-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Hard<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(m_difficulty <a href="CppOperatorEqual.htm">==</a> Difficulty::hard<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? ":/images/Hard_selected.png"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: ":/images/Hard_not_selected.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_hard-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Start.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_start-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Instructions<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Instructions.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_instructions-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAbout.htm">About</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/<a href="CppAbout.htm">About</a>.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_about-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Quit<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> pixmap(":/images/Quit.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pixmap.isNull());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawPixmap(ui-&gt;<a href="CppWidget.htm">widget</a>_quit-&gt;<a href="CppGeometry.htm">geometry</a>(),pixmap);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::GetMazeSize() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_difficulty)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::easy&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b>&nbsp;&nbsp;99;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::medium: <b><a href="CppReturn.htm">return</a></b> 499;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Difficulty::hard&nbsp;&nbsp;: <b><a href="CppReturn.htm">return</a></b> 999;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unsupported value of mDifficulty");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::On<a href="CppAbout.htm">About</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a <a href="CppOperatorAssign.htm">=</a> MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQtAboutDialog.htm">QtAboutDialog</a>(a));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::OnInstructions()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::OnStart()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakMainDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog(GetMazeSize()));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::OnStartRetro()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppCanvas.htm">Canvas</a> * <b><a href="CppConst.htm">const</a></b> qtcanvas {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Maziak<a href="CppCanvas.htm">Canvas</a>(GetMazeSize())<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppCanvas.htm">Canvas</a>Dialog&gt; d {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppCanvas.htm">Canvas</a>Dialog(qtcanvas)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen center<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;setGeometry(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,0,256,256);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Maziak");<br/>
&nbsp;&nbsp;ShowChild(d.get());<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::Test");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakMainDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakMainDialog(99));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQt.htm">Qt</a>MaziakInstructionsDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>MaziakInstructionsDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppAbout.htm">About</a> a <a href="CppOperatorAssign.htm">=</a> MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQtAboutDialog.htm">QtAboutDialog</a>(a));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameMaziak.htm">maziak</a>::<a href="CppQt.htm">Qt</a>MaziakMenuDialog2::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
