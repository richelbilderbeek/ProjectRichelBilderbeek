<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestConceptMap</title>
  <meta name="description" content="C++ TestConceptMap"/>
  <meta name="keywords" content="C++ TestConceptMap "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestConceptMap.htm">TestConceptMap</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:07:53 2015
 -->
<p>
  <a href="ToolTestConceptMap.htm">TestConceptMap</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppConceptMap.htm">ConceptMap</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestConceptMap_1_0.png">View a screenshot of 'TestConceptMap' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestConceptMapConsoleExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestConceptMapDesktopExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestConceptMapWebsiteExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestConceptMap/ToolTestConceptMapConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapConsole.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppApfloat.htm">Apfloat</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppContainer.htm">CppContainer</a>/<a href="CppContainer.htm">CppContainer</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCoordinat.htm">CppCoordinat</a>/<a href="CppCoordinat.htm">CppCoordinat</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCounter.htm">CppCounter</a>/<a href="CppCounter.htm">CppCounter</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
# gcov<br/>
# <a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -f<a href="CppProFile.htm">profile</a>-arcs -ftest-coverage<br/>
# QMAKE_LFLAGS += -lgcov -coverage<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestConceptMap/ToolTestConceptMapDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapDesktop.pro" border = "1"><tr><td><code>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a>_DEBUG += -pg<br/>
QMAKE_LFLAGS_DEBUG += -pg<br/>
<br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>NoWeffcpp.pri)<br/>
<br/>
#Libs<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppApfloat.htm">Apfloat</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppFparser.htm">Fparser</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppContainer.htm">CppContainer</a>/<a href="CppContainer.htm">CppContainer</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCoordinat.htm">CppCoordinat</a>/<a href="CppCoordinat.htm">CppCoordinat</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCounter.htm">CppCounter</a>/<a href="CppCounter.htm">CppCounter</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppGeometry.htm">CppGeometry</a>/<a href="CppGeometry.htm">CppGeometry</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppPlane.htm">CppPlane</a>/<a href="CppPlane.htm">CppPlane</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>/<a href="CppRibiRegex.htm">CppRibiRegex</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppGrabber/CppGrabber.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppQtImage/CppQtImage.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
#include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/testconceptmapmenudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/testconceptmapmenudialog.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapconceptdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamp<a href="CppLed.htm">led</a>ialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamplesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtnodedialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtconceptdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapnodedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapedgedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.h<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapconceptdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamp<a href="CppLed.htm">led</a>ialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamplesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtnodedialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtconceptdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapnodedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapedgedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.cpp<br/>
<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapconceptdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamp<a href="CppLed.htm">led</a>ialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapexamplesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtnodedialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtconceptdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapnodedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapedgedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapqtedgedialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> +=<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> +=<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; args { <a href="CppRibi.htm">ribi</a>::MenuDialog::<a href="CppConvert.htm">Convert</a>Arguments(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>) };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().Execute(args);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_<b><a href="CppCompl.htm">compl</a></b>exity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_dialog_1;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_dialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Concept via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; GetChosenConcept();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtconceptdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestqtconceptdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view_1-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;m_display_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node and <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_node::m_concept, <a href="CppQt.htm">Qt</a>DisplayStrategy::m_node::m_concept and <a href="CppQt.htm">Qt</a>ConceptMapConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node, <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_node<br/>
&nbsp;&nbsp;m_edit_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>EditStrategy(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;m_rate_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateStrategy(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>ConceptMapConceptItems are not aware of their surroundings, so put them into place manually<br/>
&nbsp;&nbsp;m_display_concept-&gt;SetPos(0.0,-40.0);<br/>
&nbsp;&nbsp;m_edit_concept-&gt;SetPos(&nbsp;&nbsp; 0.0,&nbsp;&nbsp;0.0);<br/>
&nbsp;&nbsp;m_rate_concept-&gt;SetPos(&nbsp;&nbsp; 0.0, 40.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_display_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edit_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_rate_concept-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_display_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edit_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_rate_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[1]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[2]));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(Competencies().ToStrDutch(v[i]).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_<b><a href="CppCompl.htm">compl</a></b>exity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::GetChosenConcept()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ui-&gt;box_edit-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> m_concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>EditStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>EditStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>EditStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>RateStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>RateStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::GetChosenConcept: chosen concept unknown");<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;cmap::Competency&gt;(index);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetChosenConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetName(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_<b><a href="CppCompl.htm">compl</a></b>exity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingComplexity(rating_<b><a href="CppCompl.htm">compl</a></b>exity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingConcreteness(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingSpecificity(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmapviewtestsdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmapviewtestsdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> ComplexHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_c;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_h;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> SimpleHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> Tha <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; &gt; m_<a href="CppWidget.htm">widget</a>s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBVIEWTESTSDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmapviewtestsdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmapviewtestsdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapviewtestsdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QGridLayout&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmapviewtestsdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_c(cmap::ConceptMapFactory::GetComplexHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_h(cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_s(cmap::ConceptMapFactory::GetSimpleHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s{}<br/>
{<br/>
<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> type=0; type<a href="CppOperatorNotEqual.htm">!=</a>3; <a href="CppOperatorIncrement.htm">++</a>type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * contents <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;display_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;rate_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!contents-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQVBoxLayout.htm">QVBoxLayout</a> * <b><a href="CppConst.htm">const</a></b> mylayout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;contents-&gt;setLayout(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(contents-&gt;layout());<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> all concept maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Heteromorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> extra_height <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(extra_height &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Simple homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_s[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_s[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Complex homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_c[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_c[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::~<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>: unimplemented type");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(100,100);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(200,200);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.close();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapconceptdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapconceptdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestConceptDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestConceptDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestConceptDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_<b><a href="CppCompl.htm">compl</a></b>exity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestConceptDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_qtconceptdialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_qtconceptdialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Concept via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; GetChosenConcept();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapconceptdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapconceptdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>conceptdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>conceptdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestConceptDialog::<a href="CppQt.htm">Qt</a>TestConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestConceptDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptDialog}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(ConceptFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(layout());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(grid_layout);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(m_qtconceptdialog_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtconceptdialog_1.get(),2,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(m_qtconceptdialog_2.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtconceptdialog_2.get(),2,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setMinimumWidth(100);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestConceptDialog::~<a href="CppQt.htm">Qt</a>TestConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestConceptDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestConceptDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestConceptDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ConceptFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> concept <a href="CppOperatorAssign.htm">=</a> ConceptFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;SetConcept(concept);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;SetConcept(concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtconceptdialog_1-&gt;GetConcept() <a href="CppOperatorEqual.htm">==</a> concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtconceptdialog_2-&gt;GetConcept() <a href="CppOperatorEqual.htm">==</a> concept);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapedgedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapedgedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEdgeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEdgeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestEdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEdgeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEdgeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestEdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_<b><a href="CppCompl.htm">compl</a></b>exity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEdgeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_from_node;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_qtedgedialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_qtedgedialog_2;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_to_node;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Node via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; GetChosenNode();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapedgedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapedgedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>edgedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>edgedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEdgeDialog::<a href="CppQt.htm">Qt</a>TestEdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_from_node(NodeFactory().GetTest(0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_1(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_2(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_to_node(NodeFactory().GetTest(0))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(EdgeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;layout());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(label,0,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_qtedgedialog_1.get(),1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(label,0,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_qtedgedialog_2.get(),1,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;setMinimumHeight(500);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;setMinimumHeight(500);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEdgeDialog::~<a href="CppQt.htm">Qt</a>TestEdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEdgeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEdgeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEdgeDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; EdgeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> edge <a href="CppOperatorAssign.htm">=</a> EdgeFactory().GetTest(i,m_from_node,m_to_node);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;SetEdge(edge);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;SetEdge(edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtedgedialog_1-&gt;GetEdge() <a href="CppOperatorEqual.htm">==</a> edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtedgedialog_2-&gt;GetEdge() <a href="CppOperatorEqual.htm">==</a> edge);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapexampledialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapexampledialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestExampleDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests <a href="CppQt.htm">Qt</a>ExampleDialog<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestExampleDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestExampleDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExampleDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestExampleDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExampleDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestExampleDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestExampleDialog();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_example_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestExampleDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExampleDialog&gt; m_example_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExampleDialog&gt; m_example_2;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapexampledialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapexampledialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>exampledialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapexampledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>exampledialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExampleDialog::<a href="CppQt.htm">Qt</a>TestExampleDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestExampleDialog),<br/>
&nbsp;&nbsp;m_example_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExampleDialog},<br/>
&nbsp;&nbsp;m_example_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExampleDialog}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label_1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label_1-&gt;setText("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(label_1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_example_1.get());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label_2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label_2-&gt;setText("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(label_2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_example_2.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> ExampleFactory().GetNumberOfTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_tests; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_example-&gt;addItem(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_example-&gt;setCurrentIndex(0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_button_load_example_clicked();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExampleDialog::~<a href="CppQt.htm">Qt</a>TestExampleDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExampleDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExampleDialog::on_button_load_example_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_load_example-&gt;currentIndex();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ExampleFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> example <a href="CppOperatorAssign.htm">=</a> ExampleFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_example_1-&gt;SetExample(example);<br/>
&nbsp;&nbsp;m_example_2-&gt;SetExample(example);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_example_1-&gt;GetExample() <a href="CppOperatorEqual.htm">==</a> example);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_example_2-&gt;GetExample() <a href="CppOperatorEqual.htm">==</a> example);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapexamplesdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapexamplesdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestExamplesDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestExamplesDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestExamplesDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExamplesDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExamplesDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestExamplesDialog();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_examples_clicked();<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestExamplesDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExamplesDialog&gt; m_examples_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExamplesDialog&gt; m_examples_2;<br/>
<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapexamplesdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapexamplesdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>examplesdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>examplesdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExamplesDialog::<a href="CppQt.htm">Qt</a>TestExamplesDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestExamplesDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_examples_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExamplesDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_examples_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExamplesDialog}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_examples_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_examples_2.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetNumberOfTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_tests; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_examples-&gt;addItem(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_examples-&gt;setCurrentIndex(0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_button_load_examples_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExamplesDialog::~<a href="CppQt.htm">Qt</a>TestExamplesDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExamplesDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestExamplesDialog::on_button_load_examples_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_load_examples-&gt;currentIndex();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ExamplesFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> examples <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_examples_1-&gt;SetExamples(examples);<br/>
&nbsp;&nbsp;m_examples_2-&gt;SetExamples(examples);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_examples_1-&gt;GetExamples() <a href="CppOperatorEqual.htm">==</a> examples);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_examples_2-&gt;GetExamples() <a href="CppOperatorEqual.htm">==</a> examples);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestMenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestMenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_concept_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_conceptmap<a href="CppWidget.htm">widget</a>_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_edge_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_edit_conceptmap_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_example_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_examples_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_node_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_qtedge_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_qtnode_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_rate_conceptmap_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_readonly_conceptmap_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_view_concept_maps_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapviewtestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>conceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>edgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>exampledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>examplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>nodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::<a href="CppQt.htm">Qt</a>TestMenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestMenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::~<a href="CppQt.htm">Qt</a>TestMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().GetAbout());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tests I am most interested in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (sm_test_qtnode) { <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tests in order from small elements to bigger<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExampleDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExamplesDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestConceptDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestNodeDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEdgeDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (sm_test_qtdisplayconceptmap) { <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (sm_test_qteditconceptmap) { <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>TestRateConceptMapDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>Test<a href="CppWidget.htm">Widget</a>Dialog();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>No tests...<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_readonly_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_edit_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_rate_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_concept_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestConceptDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_node_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestNodeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_edge_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEdgeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_view_concept_maps_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_conceptmap<a href="CppWidget.htm">widget</a>_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_example_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExampleDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_examples_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestExamplesDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_qtnode_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestMenuDialog::on_button_qtedge_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapnodedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapnodedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestNodeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestNodeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestNodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestNodeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestNodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestNodeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestNodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestNodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestNodeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>NodeDialog&gt; m_qtnodedialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>NodeDialog&gt; m_qtnodedialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapnodedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapnodedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>nodedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>nodedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestNodeDialog::<a href="CppQt.htm">Qt</a>TestNodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestNodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>NodeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>NodeDialog}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(NodeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(layout());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(grid_layout);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(m_qtnodedialog_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtnodedialog_1.get(),2,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(m_qtnodedialog_2.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtnodedialog_2.get(),2,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;setMinimumWidth(100);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestNodeDialog::~<a href="CppQt.htm">Qt</a>TestNodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestNodeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestNodeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestNodeDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; NodeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> node <a href="CppOperatorAssign.htm">=</a> NodeFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;SetNode(node);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;SetNode(node);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtnodedialog_1-&gt;GetNode() <a href="CppOperatorEqual.htm">==</a> node);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtnodedialog_2-&gt;GetNode() <a href="CppOperatorEqual.htm">==</a> node);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapqtedgedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapqtedgedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items when being a member of a cmap::<a href="CppQt.htm">Qt</a>Edge,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Edge&gt; Get<a href="CppQt.htm">Qt</a>Edge() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the GUI's value of test index. This might differ from<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/the currently active test, as the user needs to press 'Load Test'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/to <a href="CppMake.htm">make</a> it active<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetUiTestIndex() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> GetUiView() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the X coordinat of the Node on the Edge from the GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the Y coordinat of the Node on the Edge from the GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQt.htm">Qt</a>Edge(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Edge&gt;&amp; qtnode) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog *ui;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_dialog_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_dialog_right;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt; m_from;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt; m_to;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt; ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>&gt; m_view_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt; ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>&gt; m_view_right;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapqtedgedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapqtedgedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtedgedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "grabber.h"<br/>
<a href="CppInclude.htm">#include</a> "qtimage.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtedgedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog(<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_left{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_right{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_from{<a href="CppQt.htm">Qt</a>NodeFactory().GetTest(1)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_to{<a href="CppQt.htm">Qt</a>NodeFactory().GetTest(1)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left{<b><a href="CppNew.htm">new</a></b> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_right{<b><a href="CppNew.htm">new</a></b> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;m_from-&gt;SetCenterPos(0.0,0.0);<br/>
&nbsp;&nbsp;m_to-&gt;SetCenterPos(10.0,100.0);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsScene.htm">QGraphicsScene</a> * <b><a href="CppConst.htm">const</a></b> my_scene <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left-&gt;setScene(my_scene);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_right-&gt;setScene(my_scene);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_scene-&gt;addItem(m_from.get()); <a href="CppComment.htm">//</a>Remove in <a href="CppDestructor.htm">destructor</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_scene-&gt;addItem(m_to.get()); <a href="CppComment.htm">//</a>Remove in <a href="CppDestructor.htm">destructor</a><br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;here-&gt;layout());<br/>
&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;ui-&gt;here-&gt;setLayout(my_layout);<br/>
<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(ui-&gt;<a href="CppWidget.htm">widget</a>_top,0,0,1,4);<br/>
<br/>
&nbsp;&nbsp;m_view_left-&gt;setMinimumWidth(300);<br/>
&nbsp;&nbsp;m_view_right-&gt;setMinimumWidth(300);<br/>
&nbsp;&nbsp;m_view_left-&gt;setMaximumHeight(300);<br/>
&nbsp;&nbsp;m_view_right-&gt;setMaximumHeight(300);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_left.get(),1,0,1,1,<a href="CppQt.htm">Qt</a>::AlignTop);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_right.get(),1,1,1,1,<a href="CppQt.htm">Qt</a>::AlignTop);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_left.get(),1,2);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_right.get(),1,3);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>my_layout-&gt;addItem(<b><a href="CppNew.htm">new</a></b> QSpacerItem(1,1),2,0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>my_layout-&gt;addItem(<b><a href="CppNew.htm">new</a></b> QSpacerItem(1,1),2,1);<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setMaximum(<a href="CppQt.htm">Qt</a>EdgeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1 because first index has [0]<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setValue(0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;on_button_load_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetFrom()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("From");<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetTo()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("To");<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::~<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;Set<a href="CppQt.htm">Qt</a>Edge(<b><a href="CppNullptr.htm">nullptr</a></b>);<br/>
&nbsp;&nbsp;m_view_left-&gt;scene()-&gt;removeItem(m_from.get()); <a href="CppComment.htm">//</a>Remove in <a href="CppDestructor.htm">destructor</a><br/>
&nbsp;&nbsp;m_view_left-&gt;scene()-&gt;removeItem(m_to.get());&nbsp;&nbsp; <a href="CppComment.htm">//</a>Remove in <a href="CppDestructor.htm">destructor</a><br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Edge&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::Get<a href="CppQt.htm">Qt</a>Edge() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge() <a href="CppOperatorEqual.htm">==</a> m_dialog_right-&gt;Get<a href="CppQt.htm">Qt</a>Edge());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge();<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::GetUiTestIndex() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;box_test_index-&gt;value();<br/>
}<br/>
<br/>
<a href="CppQImage.htm">QImage</a> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::GetUiView() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> scene <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;m_view_left-&gt;scene();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Create the image with the exact size of the shrunk scene<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image(scene-&gt;sceneRect().size().toSize(), <a href="CppQImage.htm">QImage</a>::Format_ARGB32);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Start all pixels transparent<br/>
&nbsp;&nbsp;image.fill(<a href="CppQt.htm">Qt</a>::transparent);<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(&amp;image);<br/>
&nbsp;&nbsp;scene-&gt;render(&amp;painter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> image;<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog_left-&gt;GetUiX();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog_left-&gt;GetUiX();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::Set<a href="CppQt.htm">Qt</a>Edge(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Edge&gt;&amp; qtedge) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_right);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_right-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left-&gt;scene() <a href="CppOperatorEqual.htm">==</a> m_view_right-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge() <a href="CppOperatorEqual.htm">==</a> m_dialog_right-&gt;Get<a href="CppQt.htm">Qt</a>Edge());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_qtedge <a href="CppOperatorAssign.htm">=</a> m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (old_qtedge)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left-&gt;scene()-&gt;removeItem(old_qtedge.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (qtedge)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_left-&gt;Set<a href="CppQt.htm">Qt</a>Edge(qtedge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_right-&gt;Set<a href="CppQt.htm">Qt</a>Edge(qtedge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_view_left-&gt;scene()-&gt;addItem(qtedge.get());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_left-&gt;setMinimumHeight(<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog::GetMinimumHeight(*qtedge));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_right-&gt;setMinimumHeight(<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>EdgeDialog::GetMinimumHeight(*qtedge));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Image();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog dialog;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Edge&gt; qtedge{dialog.Get<a href="CppQt.htm">Qt</a>Edge()};<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_test_index-&gt;maximum();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Number of tests in GUI must be equal to the number of actual tests"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>EdgeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If there are x tests, the maximum test index is x-1");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Test index in GUI must be lower than the number of actual tests"); }<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>10; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_test_index-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.GetUiTestIndex() &lt; <a href="CppQt.htm">Qt</a>EdgeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting all test edges"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog dialog;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n{<a href="CppQt.htm">Qt</a>EdgeFactory().GetNumberOfTests()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_test_index-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.on_button_load_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;dialog.Set<a href="CppQt.htm">Qt</a>Edge(qtedge); <a href="CppComment.htm">//</a>Put <a href="CppQt.htm">Qt</a>Edge in back again<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the text of an <a href="CppQt.htm">Qt</a>Edge its center <a href="CppQt.htm">Qt</a>Node is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("A");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetText()[0] <a href="CppOperatorEqual.htm">==</a> "A");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("B");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetText()[0] <a href="CppOperatorEqual.htm">==</a> "B");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("There is one item in the <a href="CppQGraphicsView.htm">QGraphicsView</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_view_left-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("X of <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog and <a href="CppQt.htm">Qt</a>Edge must match at creation"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ui_x{dialog.m_dialog_left-&gt;GetUiX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> qtedge_x{qtedge-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetCenterX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(ui_x <a href="CppOperatorMinus.htm">-</a> qtedge_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If X is set via <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog, <a href="CppQt.htm">Qt</a>Edge must sync"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_x{dialog.m_dialog_left-&gt;GetUiX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x{old_x <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_x <a href="CppOperatorMinus.htm">-</a> qtedge-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetCenterX()) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If X is set via <a href="CppQt.htm">Qt</a>Edge, <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog must sync"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_x{dialog.m_dialog_left-&gt;GetUiX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x{old_x <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtedge-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;SetCenterX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_x <a href="CppOperatorMinus.htm">-</a> dialog.m_dialog_left-&gt;GetUiX()) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Grabbing <a href="CppQt.htm">Qt</a>Edge of <a href="CppQGraphicsView.htm">QGraphicsView</a> twice, results in an identical picture"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>If the line below is needed, update() is not called automatically<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorEqual.htm">==</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the text of an <a href="CppQt.htm">Qt</a>Edge its center <a href="CppQt.htm">Qt</a>Node is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>If the line below is needed, update() is not called automatically<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("A");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("B");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> NOT_NOW_20141208<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the head arrow head of an <a href="CppQt.htm">Qt</a>Edge its Edge is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;SetHeadArrow(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;SetHeadArrow(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the tail arrow head of an <a href="CppQt.htm">Qt</a>Edge its Edge is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;SetTailArrow(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetEdge()-&gt;SetTailArrow(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> NOT_NOW_20141208<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the source/'from' of an <a href="CppQt.htm">Qt</a>Edge is made invisible, <b><a href="CppThis.htm">this</a></b> will show in a screenshot"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_from-&gt;isVisible());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_from-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the target/'to' of an <a href="CppQt.htm">Qt</a>Edge is made invisible, <b><a href="CppThis.htm">this</a></b> will show in a screenshot"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_to-&gt;isVisible());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_to-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the <a href="CppQt.htm">Qt</a>Node an <a href="CppQt.htm">Qt</a>Edge is made invisible, <b><a href="CppThis.htm">this</a></b> will show in a screenshot"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;isVisible());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the source/'from' of an <a href="CppQt.htm">Qt</a>Edge its Edge is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt; from{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt;(dialog.m_from)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;from-&gt;setX(from-&gt;x() <a href="CppOperatorPlus.htm">+</a> 100.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_before.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_before.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_after.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_after.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> result{<a href="CppQt.htm">Qt</a>Image().Difference(image_before,image_after)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_difference.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the target/'to' of an <a href="CppQt.htm">Qt</a>Edge its Edge is changed by a <a href="CppMemberFunction.htm">member function</a>, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt; to{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt;(dialog.m_to)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;to-&gt;setX(to-&gt;x() <a href="CppOperatorPlus.htm">+</a> 100.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_before.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_before.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_after.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_after.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> result{<a href="CppQt.htm">Qt</a>Image().Difference(image_before,image_after)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_difference.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the target/'to' of an <a href="CppQt.htm">Qt</a>Edge its Edge is changed by a drag event, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt; to{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>&gt;(dialog.m_to)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;to-&gt;setX(to-&gt;x() <a href="CppOperatorPlus.htm">+</a> 100.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If <a href="CppQt.htm">Qt</a>Node of <a href="CppQt.htm">Qt</a>Edge is made visible, <b><a href="CppThis.htm">this</a></b> will look different"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;isVisible());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;setVisible(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If arrow of <a href="CppQt.htm">Qt</a>Edge is made visible, <b><a href="CppThis.htm">this</a></b> will look different"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetArrow()-&gt;isVisible());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetArrow()-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If X is set via <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog, <a href="CppQt.htm">Qt</a>Edge it center node must change"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;setVisible(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Edge()-&gt;GetArrow()-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_x{dialog.m_dialog_left-&gt;GetUiX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x{old_x <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_before.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_before.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_after.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_after.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> result{<a href="CppQt.htm">Qt</a>Image().Difference(image_before,image_after)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialogTest1_difference.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!"Refactor");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>EdgeDialog::on_button_load_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test_index-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_from);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_to);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <a href="CppQt.htm">Qt</a>EdgeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> qtedge <a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>EdgeFactory().GetTest(index,m_from,m_to);<br/>
<br/>
&nbsp;&nbsp;Set<a href="CppQt.htm">Qt</a>Edge(qtedge);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapqtnodedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapqtnodedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items when being a member of a <a href="CppQt.htm">Qt</a>Node,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt; Get<a href="CppQt.htm">Qt</a>Node() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> GetUiView() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQt.htm">Qt</a>Node(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;&amp; qtnode) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog&gt; m_dialog_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog&gt; m_dialog_right;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt; ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>&gt; m_view_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt; ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>&gt; m_view_right;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapqtnodedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapqtnodedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtnodedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtimage.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>qtnodedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog(<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_left{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_right{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left{<b><a href="CppNew.htm">new</a></b> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_right{<b><a href="CppNew.htm">new</a></b> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsScene.htm">QGraphicsScene</a> * <b><a href="CppConst.htm">const</a></b> my_scene <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left-&gt;setScene(my_scene);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_right-&gt;setScene(my_scene);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;here-&gt;layout());<br/>
&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;ui-&gt;here-&gt;setLayout(my_layout);<br/>
<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(ui-&gt;<a href="CppWidget.htm">widget</a>_top,0,0,1,4);<br/>
<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_left.get(),1,0);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_right.get(),1,1);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_left.get(),1,2);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_right.get(),1,3);<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setMaximum(NodeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setValue(0);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::~<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Node&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::Get<a href="CppQt.htm">Qt</a>Node() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node() <a href="CppOperatorEqual.htm">==</a> m_dialog_right-&gt;Get<a href="CppQt.htm">Qt</a>Node());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node();<br/>
}<br/>
<br/>
<a href="CppQImage.htm">QImage</a> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::GetUiView() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> scene <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;m_view_left-&gt;scene();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Create the image with the exact size of the shrunk scene<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image(scene-&gt;sceneRect().size().toSize(), <a href="CppQImage.htm">QImage</a>::Format_ARGB32);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Start all pixels transparent<br/>
&nbsp;&nbsp;image.fill(<a href="CppQt.htm">Qt</a>::transparent);<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(&amp;image);<br/>
&nbsp;&nbsp;scene-&gt;render(&amp;painter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> image;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::Set<a href="CppQt.htm">Qt</a>Node(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;&amp; qtnode) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_right);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_right-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left-&gt;scene() <a href="CppOperatorEqual.htm">==</a> m_view_right-&gt;scene());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_view_left-&gt;scene()-&gt;items().isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> m_view_left-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left-&gt;scene()-&gt;removeItem(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_view_left-&gt;scene()-&gt;items().isEmpty());<br/>
&nbsp;&nbsp;m_dialog_left-&gt;Set<a href="CppQt.htm">Qt</a>Node(qtnode);<br/>
&nbsp;&nbsp;m_dialog_right-&gt;Set<a href="CppQt.htm">Qt</a>Node(qtnode);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_view_left-&gt;scene()-&gt;addItem(qtnode.get());<br/>
<br/>
&nbsp;&nbsp;m_dialog_left-&gt;setMinimumHeight(<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog::GetMinimumHeight(*qtnode));<br/>
&nbsp;&nbsp;m_dialog_right-&gt;setMinimumHeight(<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog::GetMinimumHeight(*qtnode));<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Image();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog dialog;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("Loading all tests, three <a href="CppTime.htm">time</a>s");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n{dialog.ui-&gt;box_test_index-&gt;maximum()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_test_index-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.on_button_load_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_test_index-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.on_button_load_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_test_index-&gt;setValue(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.on_button_load_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("<a href="CppQt.htm">Qt</a>Node must be the same in both dialogs");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node() <a href="CppOperatorEqual.htm">==</a> dialog.m_dialog_right-&gt;Get<a href="CppQt.htm">Qt</a>Node());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("<a href="CppQGraphicsView.htm">QGraphicsView</a> must contain exactly one item");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_view_left-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("<a href="CppQGraphicsItem.htm">QGraphicsItem</a> in <a href="CppQGraphicsView.htm">QGraphicsView</a> must be <a href="CppConvert.htm">convert</a>ible to a <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("<a href="CppQGraphicsItem.htm">QGraphicsItem</a> in <a href="CppQGraphicsView.htm">QGraphicsView</a> must be <a href="CppConvert.htm">convert</a>ible to a <a href="CppQt.htm">Qt</a>Node");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node * qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("<a href="CppQt.htm">Qt</a>Node its <a href="CppBaseClass.htm">base class</a> in the <a href="CppQGraphicsView.htm">QGraphicsView</a> must contain one line of text");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtrectitem-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorNotEqual.htm">!=</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; s: v) { <a href="CppTRACE.htm">TRACE</a>(s); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("Text of Node must be equal to that of the <a href="CppQt.htm">Qt</a>Node in the <a href="CppQGraphicsView.htm">QGraphicsView</a>");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetNode()-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtrectitem-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> t <a href="CppOperatorAssign.htm">=</a> v[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s <a href="CppOperatorEqual.htm">==</a> t);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("When changing the concept's name via <a href="CppQt.htm">Qt</a>Node, the <a href="CppQt.htm">Qt</a>NodeDialog must be changed as well");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> dialog.m_dialog_left-&gt;Get<a href="CppQt.htm">Qt</a>Node();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> old_name{qtnode-&gt;GetNode()-&gt;GetConcept()-&gt;GetName()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> new_name{old_name <a href="CppOperatorPlus.htm">+</a> " (modified)"};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtnode-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(new_name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> t <a href="CppOperatorAssign.htm">=</a> dialog.m_dialog_left-&gt;GetUiName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(t <a href="CppOperatorEqual.htm">==</a> new_name);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) {<a href="CppTRACE.htm">TRACE</a>("When changing the concept's name via <a href="CppQt.htm">Qt</a>NodeDialog, the <a href="CppQt.htm">Qt</a>Node must be changed as well");}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_name <a href="CppOperatorAssign.htm">=</a> dialog.m_dialog_left-&gt;GetUiName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> new_name{old_name <a href="CppOperatorPlus.htm">+</a> " (modified)"};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiName(new_name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> new_name_again <a href="CppOperatorAssign.htm">=</a> qtrectitem-&gt;GetText()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(new_name_again <a href="CppOperatorEqual.htm">==</a> new_name);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Grabbing <a href="CppQt.htm">Qt</a>Nodeof <a href="CppQGraphicsView.htm">QGraphicsView</a> twice, results in an identical picture"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>If the line below is needed, update() is not called automatically<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp1{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp2{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorEqual.htm">==</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("If the text of an <a href="CppQt.htm">Qt</a>Node its center <a href="CppQt.htm">Qt</a>Node is changed, the Item must be updated"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>If the line below is needed, update() is not called automatically<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp1{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_tmp2{dialog.GetUiView()}; <a href="CppComment.htm">//</a>Needed to force something more thorough than update and repaint<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_before{dialog.GetUiView()};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("A");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.Get<a href="CppQt.htm">Qt</a>Node()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("B");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> image_after{dialog.GetUiView()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (image_before <a href="CppOperatorEqual.htm">==</a> image_after)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> a{"<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialogTest1_before.png"};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> b{"<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialogTest1_after.png"};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_before.save(a.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_after.save(b.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQImage.htm">QImage</a> result{<a href="CppQt.htm">Qt</a>Image().Difference(image_before,image_after)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.save("<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialogTest1_difference.png");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image_before <a href="CppOperatorNotEqual.htm">!=</a> image_after);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("<a href="CppQGraphicsScene.htm">QGraphicsScene</a> must have one item"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.m_view_left-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting X via UI should result in an update of the <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> in the <a href="CppQGraphicsScene.htm">QGraphicsScene</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_x{dialog.m_dialog_left-&gt;GetUiX()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x{old_x <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(qtrectitem-&gt;GetCenterX() <a href="CppOperatorMinus.htm">-</a> new_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting Y via UI should result in an update of the <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> in the <a href="CppQGraphicsScene.htm">QGraphicsScene</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_y{dialog.m_dialog_left-&gt;GetUiY()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_y{old_y <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiY(new_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(qtrectitem-&gt;GetCenterY() <a href="CppOperatorMinus.htm">-</a> new_y) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Setting Name via UI should result in an update of the <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> in the <a href="CppQGraphicsScene.htm">QGraphicsScene</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> old_name{dialog.m_dialog_left-&gt;GetUiName()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> new_name{old_name <a href="CppOperatorPlus.htm">+</a> " (modified)"};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.m_dialog_left-&gt;SetUiName(new_name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> dialog.m_view_left-&gt;scene()-&gt;items()[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> * qtrectitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtrectitem-&gt;GetText()[0] <a href="CppOperatorEqual.htm">==</a> new_name);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Test<a href="CppQt.htm">Qt</a>NodeDialog::on_button_load_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index{ui-&gt;box_test_index-&gt;value()};<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostMake_shared.htm">boost::make_shared</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NodeFactory().GetTest(index)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;Set<a href="CppQt.htm">Qt</a>Node(qtnode);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapwidgetdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapwidgetdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanUndo() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoUndo() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetNumberOfButtons() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()); }<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called when user clicks a button<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnClick determines the clicked button its index<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/by finding the focused button. Then it<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/calls DoClick<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClick();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPushButton.htm">QPushButton</a> *&gt; m_buttons;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; m_qt<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; Create<a href="CppWidget.htm">Widget</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Click the ith button<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoClick(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapwidgetdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapwidgetdialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPushButton.htm">QPushButton</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcommand.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcommandfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_buttons{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>())<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the three conceptmap <a href="CppWidget.htm">widget</a>s<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QFrame * <b><a href="CppConst.htm">const</a></b> frame <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_edit;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!frame-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;frame-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> m_qt<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Command buttons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QFrame * <b><a href="CppConst.htm">const</a></b> frame <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_buttons;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> frame-&gt;layout();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>frame-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Command&gt; command: CommandFactory::CreateTestCommands())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQPushButton.htm">QPushButton</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_buttons.push_back(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button-&gt;setText(command-&gt;ToStr().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(button,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnClick()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_buttons.size() <a href="CppOperatorEqual.htm">==</a> CommandFactory::CreateTestCommands().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_buttons[0]-&gt;setFocus();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::CanUndo() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_qt<a href="CppWidget.htm">widget</a>-&gt;CanUndo();<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Create<a href="CppWidget.htm">Widget</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Each <a href="CppWidget.htm">Widget</a> must have its own ConceptMap<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[17] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(m));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Edit<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[0] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(m,<a href="CppQt.htm">Qt</a>EditConceptMap::Mode::simple));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rate<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[17] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(m));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 3 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "There are three display strategies of <a href="CppQt.htm">Qt</a>ConceptMap");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::DoClick(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> button_index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; GetNumberOfButtons());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;m_buttons[button_index];<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> button-&gt;text().toStdString();<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Command<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> commands(CommandFactory::CreateTestCommands());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> command_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(commands.begin(),commands.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[text](<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Command&gt; command)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(command);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> command-&gt;ToStr() <a href="CppOperatorEqual.htm">==</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(command_iter <a href="CppOperatorNotEqual.htm">!=</a> commands.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*command_iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_qt<a href="CppWidget.htm">widget</a>-&gt;CanDoCommand(*command_iter))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;DoCommand(*command_iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Nothing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::DoUndo() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>-&gt;CanUndo());<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;Undo();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mouse<a href="CppDouble.htm">Double</a>ClickEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mouseMoveEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mousePressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::OnClick()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>_FUNC();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> button_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(m_buttons.begin(),m_buttons.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button) { <b><a href="CppReturn.htm">return</a></b> button-&gt;hasFocus(); }<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (button_iter <a href="CppOperatorEqual.htm">==</a> m_buttons.end()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> button_index {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdDistance.htm">std::distance</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_buttons.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button_iter<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()));<br/>
&nbsp;&nbsp;DoClick(button_index);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_depth <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> j <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>j; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.CanUndo()) { d.DoUndo(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking twice");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 3)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking thrice");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> k=0; k<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>k)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(k);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 4)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking four <a href="CppTime.htm">time</a>s");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> k=0; k<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>k)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> m=0; m<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>m)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(k);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> TODO_ISSUE_208<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Random clicking");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_buttons <a href="CppOperatorAssign.htm">=</a> d.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> n_buttons);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a>TODO_ISSUE_208<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestdisplayconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestdisplayconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppDefine.htm">#define</a> ADD_LATER_20140801<br/>
<a href="CppIfdef.htm">#ifdef</a>&nbsp;&nbsp;ADD_LATER_20140801<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_modify_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>DisplayConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> ADD_LATER_20140801<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestdisplayconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestdisplayconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory().GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r{<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,0.1};<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i) d.on_button_test_modify_clicked();<br/>
<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::on_button_test_modify_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingComplexity(rating_<b><a href="CppCompl.htm">compl</a></b>exity);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingConcreteness(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingSpecificity(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; w <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(w[ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> w.size() ]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttesteditconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttesteditconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EditConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttesteditconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttesteditconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapelement.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttesteditconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>EditConceptMap::Mode::simple<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_1<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> event-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::AltModifier)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DoSomethingRandom();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog d;<br/>
&nbsp;&nbsp;d.DoSomethingRandom();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to text being changed<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d.m_concept_map-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName("1234567890");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName("123456789");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &lt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test brushes being changed when ratings are given<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> d.m_concept_map-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>RateConceptItem item(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateRedGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateRedGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateYellowGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateYellowGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::DoSomethingRandom()<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorPlus.htm">+</a> "N");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Examples&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetExamples(v [ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> v.size() ] );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Edge* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Edge*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty() <a href="CppOperatorLogicalOr.htm">||</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "An item can contain no text: when connected to the center node");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorPlus.htm">+</a> "E");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Examples&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetExamples(v [ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> v.size() ] );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestrateconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestrateconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests the <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>RateConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestrateconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestrateconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestrateconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::DoSomethingRandom()<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_<b><a href="CppCompl.htm">compl</a></b>exity);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingConcreteness(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingSpecificity(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; w <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(w[ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> w.size() ]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::AltModifier <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DoSomethingRandom();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Doing random stuff<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i) d.DoSomethingRandom();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/testconceptmapmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/testconceptmapmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>GUI independent <a href="ToolTestConceptMap.htm">TestConceptMap</a> menu dialog<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog <b><a href="CppFinal.htm">final</a></b> : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/testconceptmapmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/testconceptmapmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppContainer.htm">container</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "plane.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRibi.htm">ribi</a>_<a href="CppRegex.htm">regex</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ToolTestConceptMap.htm">TestConceptMap</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"tests the ConceptMap <b><a href="CppClass.htm">classes</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"on the 7th of August 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppApfloat.htm">apfloat</a> <a href="CppVersion.htm">version</a>: 2.4.1");<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("ConceptMap <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::cmap::ConceptMap::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("ConceptMap<a href="CppWidget.htm">Widget</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> cmap::<a href="CppWidget.htm">Widget</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppContainer.htm">Container</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::<a href="CppContainer.htm">Container</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppFileIo.htm">FileIo</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Geometry <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Geometry().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppRibi.htm">ribi</a>::<a href="CppRegex.htm">Regex</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppRegex.htm">Regex</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Plane <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Plane::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTrace.htm">Trace</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.htm">Trace</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::Program<a href="ToolTestConceptMap.htm">TestConceptMap</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.2";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-12-03: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-05-18: <a href="CppVersion.htm">version</a> 1.1: added testing Example",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-07: <a href="CppVersion.htm">version</a> 1.2: increased use of <a href="CppTdd.htm">Tdd</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppWidget.htm">Widget</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>No test<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapDesktopProfile.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapDesktopProfile.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
set -u<br/>
<br/>
FILE=ToolTestConceptMapDesktop<br/>
<br/>
echo "Removing user file"<br/>
rm *.pro.user<br/>
<br/>
echo "Creating profile executable (note: this must enable debug mode, add NDEBUG and NTRACE_BILDERBIKKEL to get a release build)"<br/>
qmake -config debug $FILE.pro<br/>
<br/>
#make clean<br/>
make<br/>
<br/>
#echo "Removing makefile"<br/>
#rm Makefile<br/>
<br/>
#echo "Removing object files"<br/>
#rm *.o<br/>
<br/>
echo "Start the application"<br/>
./$FILE<br/>
<br/>
echo "Analyse the gprof results"<br/>
gprof $FILE &gt; $FILE.txt<br/>
<br/>
echo "Remove temporary gprof file"<br/>
rm gmon.out<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
