<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestConceptMap</title>
  <meta name="description" content="C++ TestConceptMap"/>
  <meta name="keywords" content="C++ TestConceptMap "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestConceptMap.htm">TestConceptMap</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.663 at Sat Jun 21 23:30:19 2014
 -->
<p>
  <a href="ToolTestConceptMap.htm">TestConceptMap</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppConceptMap.htm">ConceptMap</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestConceptMap_1_0.png">View a screenshot of 'TestConceptMap' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestConceptMapConsoleExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestConceptMapDesktopExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestConceptMapWebsiteExe.zip">Download the 'TestConceptMap' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestConceptMap/ToolTestConceptMapConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapConsole.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
<br/>
#Specific<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppContainer/CppContainer.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppRibiRegex/CppRibiRegex.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
# gcov<br/>
# <a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -f<a href="CppProFile.htm">profile</a>-arcs -ftest-coverage<br/>
# QMAKE_LFLAGS += -lgcov -coverage<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestConceptMap/ToolTestConceptMapDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
<br/>
#Libs<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Fparser.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
#Specific, console<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppContainer/CppContainer.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCoordinat.htm">CppCoordinat</a>/<a href="CppCoordinat.htm">CppCoordinat</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppConceptMap.htm">CppConceptMap</a>/<a href="CppConceptMap.htm">CppConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppGeometry/CppGeometry.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppPlane/CppPlane.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppRibiRegex/CppRibiRegex.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific, desktop<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>/<a href="CppQtConceptMap.htm">CppQtConceptMap</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/testconceptmapmenudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/testconceptmapmenudialog.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestconceptdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtedgedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamp<a href="CppLed.htm">led</a>ialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamplesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtnodedialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtconceptdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestnodedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestedgedialog.h<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestconceptdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtedgedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamp<a href="CppLed.htm">led</a>ialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamplesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtnodedialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtconceptdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestnodedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestedgedialog.cpp<br/>
<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestconceptdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtedgedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamp<a href="CppLed.htm">led</a>ialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestexamplesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtnodedialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmapviewtestsdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmapmenudialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestconceptmap<a href="CppWidget.htm">widget</a>dialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestdisplayconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttesteditconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qttestrateconceptmapdialog.ui \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestqtconceptdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestnodedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/qtconceptmaptestedgedialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/ToolTestConceptMapWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/ToolTestConceptMapWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> +=<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> +=<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; args { <a href="CppRibi.htm">ribi</a>::MenuDialog::<a href="CppConvert.htm">Convert</a>Arguments(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>) };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().Execute(args);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestconceptdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestconceptdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_qtconceptdialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_qtconceptdialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Concept via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; GetChosenConcept();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestconceptdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestconceptdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestconceptdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestconceptdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptDialog}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(ConceptFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(layout());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(grid_layout);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(m_qtconceptdialog_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtconceptdialog_1.get(),2,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(m_qtconceptdialog_2.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtconceptdialog_2.get(),2,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;setMinimumWidth(100);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ConceptFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> concept <a href="CppOperatorAssign.htm">=</a> ConceptFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;SetConcept(concept);<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;SetConcept(concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtconceptdialog_1-&gt;GetConcept() <a href="CppOperatorEqual.htm">==</a> concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtconceptdialog_2-&gt;GetConcept() <a href="CppOperatorEqual.htm">==</a> concept);<br/>
&nbsp;&nbsp;m_qtconceptdialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtconceptdialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestedgedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestedgedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_from_node;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_qtedgedialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EdgeDialog&gt; m_qtedgedialog_2;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_to_node;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Node via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; GetChosenNode();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEDGEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestedgedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestedgedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestedgedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestedgedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_from_node(NodeFactory().GetTest(0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_1(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_2(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_to_node(NodeFactory().GetTest(0))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(EdgeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents-&gt;layout());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(label,0,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_qtedgedialog_1.get(),1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(label,0,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtedgedialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;my_layout-&gt;addWidget(m_qtedgedialog_2.get(),1,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;setMinimumHeight(500);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;setMinimumHeight(500);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; EdgeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> edge <a href="CppOperatorAssign.htm">=</a> EdgeFactory().GetTest(i,m_from_node,m_to_node);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;SetEdge(edge);<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;SetEdge(edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtedgedialog_1-&gt;GetEdge() <a href="CppOperatorEqual.htm">==</a> edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtedgedialog_2-&gt;GetEdge() <a href="CppOperatorEqual.htm">==</a> edge);<br/>
&nbsp;&nbsp;m_qtedgedialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtedgedialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestexampledialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestexampledialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests <a href="CppQt.htm">Qt</a>ExampleDialog<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_example_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExampleDialog&gt; m_example_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExampleDialog&gt; m_example_2;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEXAMP<a href="CppLed.htm">LED</a>IALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestexampledialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestexampledialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestexampledialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapexampledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestexampledialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog),<br/>
&nbsp;&nbsp;m_example_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExampleDialog},<br/>
&nbsp;&nbsp;m_example_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExampleDialog}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label_1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label_1-&gt;setText("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(label_1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_example_1.get());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label_2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label_2-&gt;setText("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(label_2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_example_2.get());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> ExampleFactory().GetNumberOfTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_tests; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_example-&gt;addItem(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_example-&gt;setCurrentIndex(0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_button_load_example_clicked();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog::on_button_load_example_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_load_example-&gt;currentIndex();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ExampleFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> example <a href="CppOperatorAssign.htm">=</a> ExampleFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_example_1-&gt;SetExample(example);<br/>
&nbsp;&nbsp;m_example_2-&gt;SetExample(example);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_example_1-&gt;GetExample() <a href="CppOperatorEqual.htm">==</a> example);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_example_2-&gt;GetExample() <a href="CppOperatorEqual.htm">==</a> example);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestexamplesdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestexamplesdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_examples_clicked();<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExamplesDialog&gt; m_examples_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ExamplesDialog&gt; m_examples_2;<br/>
<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEXAMPLESDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestexamplesdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestexamplesdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestexamplesdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestexamplesdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_examples_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExamplesDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_examples_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ExamplesDialog}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_examples_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout()-&gt;addWidget(m_examples_2.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetNumberOfTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_tests; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_examples-&gt;addItem(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_load_examples-&gt;setCurrentIndex(0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_button_load_examples_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog::on_button_load_examples_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_load_examples-&gt;currentIndex();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; ExamplesFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> examples <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_examples_1-&gt;SetExamples(examples);<br/>
&nbsp;&nbsp;m_examples_2-&gt;SetExamples(examples);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_examples_1-&gt;GetExamples() <a href="CppOperatorEqual.htm">==</a> examples);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_examples_2-&gt;GetExamples() <a href="CppOperatorEqual.htm">==</a> examples);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestnodedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestnodedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>NodeDialog&gt; m_qtnodedialog_1;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>NodeDialog&gt; m_qtnodedialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTNODEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestnodedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestnodedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestnodedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestnodedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_1{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>NodeDialog},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_2{<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>NodeDialog}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(layout());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMinimum(0);<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setMaximum(NodeFactory().GetNumberOfTests() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(layout());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>QGridLayout * <b><a href="CppConst.htm">const</a></b> grid_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;QGridLayout*&gt;(ui-&gt;scrollArea<a href="CppWidget.htm">Widget</a>Contents);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(grid_layout);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_1-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_left-&gt;layout()-&gt;addWidget(m_qtnodedialog_1.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtnodedialog_1.get(),2,0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("#2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(label,1,1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QSizePolicy policy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;policy.setVerticalStretch(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qtnodedialog_2-&gt;setSizePolicy(policy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_right-&gt;layout()-&gt;addWidget(m_qtnodedialog_2.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>grid_layout-&gt;addWidget(m_qtnodedialog_2.get(),2,1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;setMinimumHeight(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;setMinimumWidth(100);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test-&gt;setValue(1);<br/>
&nbsp;&nbsp;on_button_load_clicked();<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; NodeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> node <a href="CppOperatorAssign.htm">=</a> NodeFactory().GetTest(i);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;SetNode(node);<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;SetNode(node);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtnodedialog_1-&gt;GetNode() <a href="CppOperatorEqual.htm">==</a> node);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qtnodedialog_2-&gt;GetNode() <a href="CppOperatorEqual.htm">==</a> node);<br/>
&nbsp;&nbsp;m_qtnodedialog_1-&gt;repaint();<br/>
&nbsp;&nbsp;m_qtnodedialog_2-&gt;repaint();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_dialog_1;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptDialog&gt; m_dialog_2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>EditStrategy* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cmap::<a href="CppQt.htm">Qt</a>RateStrategy* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Concept via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; GetChosenConcept();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTCONCEPTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtconceptdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtconceptdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestqtconceptdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept(cmap::ConceptFactory().GetTests().at(1)),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view_1-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;m_display_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node and <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_node::m_concept, <a href="CppQt.htm">Qt</a>DisplayStrategy::m_node::m_concept and <a href="CppQt.htm">Qt</a>ConceptMapConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node, <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_node<br/>
&nbsp;&nbsp;m_edit_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>EditStrategy(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;m_rate_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>RateStrategy(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>ConceptMapConceptItems are not aware of their surroundings, so put them into place manually<br/>
&nbsp;&nbsp;m_display_concept-&gt;SetPos(0.0,-40.0);<br/>
&nbsp;&nbsp;m_edit_concept-&gt;SetPos(&nbsp;&nbsp; 0.0,&nbsp;&nbsp;0.0);<br/>
&nbsp;&nbsp;m_rate_concept-&gt;SetPos(&nbsp;&nbsp; 0.0, 40.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_display_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edit_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_rate_concept-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_display_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edit_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_rate_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[1]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>ItemDisplayStrategy*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[2]));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(Competencies().ToStrDutch(v[i]).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Concept&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::GetChosenConcept()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ui-&gt;box_edit-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> m_concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>DisplayStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>EditStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>EditStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>EditStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>RateStrategy*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>RateStrategy * <b><a href="CppConst.htm">const</a></b> qtconcept {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>RateStrategy*&gt;(*iter)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::GetChosenConcept: chosen concept unknown");<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;cmap::Competency&gt;(index);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetChosenConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetName(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingConcreteness(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingSpecificity(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>ConceptDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtedgedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtedgedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items when being a member of a cmap::<a href="CppQt.htm">Qt</a>Node,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetTestIndex() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_arrow_head_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_arrow_tail_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_test_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; m_edge;<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>Edge* m_edge_item;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_from;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; m_to;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; CreateFrom();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; CreateTo();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Edge via the route chosen by box_edit<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; GetEdgeCurrentWay();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Edge from a route<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt; GetEdge(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetEdge(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Edge&gt;&amp; edge) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called whenever an item requests a scene update<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRequestSceneUpdate();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTEDGEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtedgedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtedgedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtedgedialog.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestqtedgedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog),<br/>
&nbsp;&nbsp;m_edge{},<br/>
&nbsp;&nbsp;m_edge_item{},<br/>
&nbsp;&nbsp;m_from(CreateFrom()),<br/>
&nbsp;&nbsp;m_to(CreateTo())<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_from);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_to);<br/>
&nbsp;&nbsp;on_button_load_test_clicked();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Node&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::CreateFrom()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; cmap::NodeFactory().GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node <a href="CppOperatorAssign.htm">=</a> cmap::NodeFactory().GetTests().at(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> node;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Node&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::CreateTo()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; cmap::NodeFactory().GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Node&gt; node <a href="CppOperatorAssign.htm">=</a> cmap::NodeFactory().GetTests().at(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> node;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Edge&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::GetEdgeCurrentWay()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetEdge(ui-&gt;box_edit-&gt;currentIndex());<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Edge&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::GetEdge(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_edge;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Edge*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Edge * <b><a href="CppConst.htm">const</a></b> qtedge <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Edge*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtedge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtedge-&gt;GetEdge();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::GetEdge: current index unknown");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::GetTestIndex() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(EdgeFactory().GetTests(m_from,m_to).size()));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> index;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;cmap::Competency&gt;(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("BREAK");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorEqual.htm">==</a> arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingConcreteness(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingSpecificity(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size() &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>OK<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_arrow_head_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;SetHeadArrow(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(0)-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(1)-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_box_arrow_tail_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;SetTailArrow(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(0)-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(1)-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::OnRequestSceneUpdate()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::SetEdge(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Edge&gt;&amp; edge) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create three nodes that the edges can connect to<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>Node * node1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_from-&gt;GetConcept()-&gt;SetName("1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>DisplayStrategy&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayStrategy(m_from-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>Node(m_from,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node1-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::OnRequestSceneUpdate,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;cmap::<a href="CppQt.htm">Qt</a>Node * node2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_to-&gt;GetConcept()-&gt;SetName("2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EditStrategy&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditStrategy(m_to-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> cmap::<a href="CppQt.htm">Qt</a>Node(m_to,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node2-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::OnRequestSceneUpdate,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1-&gt;GetNode()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2-&gt;GetNode()-&gt;GetConcept());<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppFalse.htm">false</a></b>:<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((edge-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> !edge-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "This should be nonsense now:"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Otherwise 'ui-&gt;box_competency-&gt;addItem(qs)' will fail, due to on_box_competency_currentIndexChanged"<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
&nbsp;&nbsp;m_edge <a href="CppOperatorAssign.htm">=</a> edge;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create the edge<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EditStrategy&gt; concept(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditStrategy(m_edge-&gt;GetNode()-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edge_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Edge(m_edge,concept,node1,node2);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_edge and <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_edge<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_edge.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_edge::m_concept, <a href="CppQt.htm">Qt</a>DisplayStrategy::m_edge::m_concept and <a href="CppQt.htm">Qt</a>ConceptMapConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge.get() <a href="CppOperatorEqual.htm">==</a> m_edge_item-&gt;GetEdge().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge-&gt;GetNode().get() <a href="CppOperatorEqual.htm">==</a> m_edge_item-&gt;GetEdge()-&gt;GetNode().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> items to the scene<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!node1-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!node2-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edge_item-&gt;scene());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(node1);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(node2);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCount_if.htm">std::count_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Edge*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put nodes (not the edges) into place<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The nodes must reposition themselves<br/>
&nbsp;&nbsp;node1-&gt;GetNode()-&gt;SetPos(-100.0,-100.0);<br/>
&nbsp;&nbsp;m_edge_item-&gt;GetNode()-&gt;SetPos(0.0,0.0);<br/>
&nbsp;&nbsp;node2-&gt;GetNode()-&gt;SetPos( 100.0, 100.0);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppStdSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> cmap::Competency competency <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> Competencies().ToStrDutch(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> qs <a href="CppOperatorAssign.htm">=</a> s.c_str();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Otherwise 'ui-&gt;box_competency-&gt;addItem(qs)' will fail, due to on_box_competency_currentIndexChanged");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(qs); <a href="CppComment.htm">//</a>2013-06-22: BUG: <a href="CppStdOut_of_range.htm">std::out_of_range</a>' what():&nbsp;&nbsp;vector::_M_range_check<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().c_str());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size() &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText("[NONE]");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_arrow_head-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;HasHeadArrow());<br/>
&nbsp;&nbsp;ui-&gt;box_arrow_tail-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;HasTailArrow());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size() &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog&gt; parent(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(parent);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>parent-&gt;ShowChild(d.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge_item-&gt;GetEdge());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge.get() <a href="CppOperatorEqual.htm">==</a> d-&gt;m_edge_item-&gt;GetEdge().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;GetNode().get() <a href="CppOperatorEqual.htm">==</a> d-&gt;m_edge_item-&gt;GetEdge()-&gt;GetNode().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to longer text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge-&gt;GetNode()-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "******************************");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>There must be no discrepancy between these boundingRects<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_item_width_after <a href="CppOperatorGreaterEqual.htm">&gt;=</a> concept_item_width_before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_item_width_after <a href="CppOperatorGreaterEqual.htm">&gt;=</a> edge_item_width_before);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetNode()-&gt;GetConcept()-&gt;SetName("1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_height_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_area_before <a href="CppOperatorAssign.htm">=</a> concept_item_width_before * concept_item_height_before;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_height_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_area_before <a href="CppOperatorAssign.htm">=</a> edge_item_width_before * edge_item_height_before;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(<a href="CppStdString.htm">std::string</a>(1,'*'));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_height_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetDisplayStrategy()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_area_after <a href="CppOperatorAssign.htm">=</a> concept_item_width_after * concept_item_height_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_height_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_area_after <a href="CppOperatorAssign.htm">=</a> edge_item_width_after * edge_item_height_after;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_item_area_before &gt; concept_item_area_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Concept item must shrink with shorter text");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_item_area_before &gt; edge_item_area_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The edge as a whole does not need to shrink, as the to and from nodes remain in place,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "but with a very <b><a href="CppLong.htm">long</a></b> to a very <b><a href="CppShort.htm">short</a></b> text will enforce <b><a href="CppThis.htm">this</a></b>");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push all buttons<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;box_edit);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edit_types <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_edit-&gt;count();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_edit_types &gt; 0);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> type=0; type<a href="CppOperatorNotEqual.htm">!=</a>n_edit_types; <a href="CppOperatorIncrement.htm">++</a>type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the way to obtain the <a href="CppPointer.htm">pointer</a> to the edge<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_edit-&gt;setCurrentIndex(type);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set some texts to enforce growth and shrinking in the text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppStdString.htm">std::string</a>(30,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppStdString.htm">std::string</a>(1,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppStdString.htm">std::string</a>(30,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the arrow head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_arrow_head-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_arrow_head-&gt;setCurrentIndex(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> i); <a href="CppComment.htm">//</a>i <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorMinus.htm">-</a>&gt; <b><a href="CppFalse.htm">false</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the arrow tail<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_arrow_tail-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_arrow_tail-&gt;setCurrentIndex(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> i); <a href="CppComment.htm">//</a>i <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorMinus.htm">-</a>&gt; <b><a href="CppFalse.htm">false</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;d-&gt;close();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog::on_button_load_test_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> GetTestIndex(); <a href="CppComment.htm">//</a>Must have examples<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(EdgeFactory().GetTests(m_from,m_to).size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> edge <a href="CppOperatorAssign.htm">=</a> EdgeFactory().GetTests(m_from,m_to)[index];<br/>
&nbsp;&nbsp;SetEdge(edge);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtnodedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtnodedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog; }<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMapConceptItem items when being a member of a <a href="CppQt.htm">Qt</a>Node,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt; Get<a href="CppQt.htm">Qt</a>Node() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQt.htm">Qt</a>Node(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;&amp; qtnode) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_load_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog&gt; m_dialog_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog&gt; m_dialog_right;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt; m_view_left;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt; m_view_right;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTQTNODEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmaptestqtnodedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmaptestqtnodedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtnodedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapqtnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmaptestqtnodedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog(<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_left(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog_right(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="CppQt.htm">Qt</a>NodeDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_left(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_view_right(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setLayout(my_layout);<br/>
<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(ui-&gt;<a href="CppWidget.htm">widget</a>_top,0,0,1,4);<br/>
<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_left.get(),1,0);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_view_right.get(),1,1);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_left.get(),1,2);<br/>
&nbsp;&nbsp;my_layout-&gt;addWidget(m_dialog_right.get(),1,3);<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setMaximum(NodeFactory().GetNumberOfTests());<br/>
&nbsp;&nbsp;ui-&gt;box_test_index-&gt;setValue(1);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;on_button_load_clicked();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>DisplayStrategy&gt; display_strategy(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayStrategy(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_display_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Node(m_node,display_strategy);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_display_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node and <a href="CppQt.htm">Qt</a>ConceptMapNodeConcept::m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_node::m_concept, <a href="CppQt.htm">Qt</a>DisplayStrategy::m_node::m_concept and <a href="CppQt.htm">Qt</a>ConceptMapConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.get() <a href="CppOperatorEqual.htm">==</a> m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EditStrategy&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditStrategy(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Node(m_node,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>RateStrategy&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateStrategy(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rate_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Node(m_node,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rate_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_node-&gt;GetNode().get() <a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_node-&gt;GetNode().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_node-&gt;GetNode().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_display_node-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edit_node-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_rate_node-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_display_node);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edit_node);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_rate_node);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[1]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[2]));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>ConceptMapConceptItems are aware of their surroundings, but I put them into place manually<br/>
&nbsp;&nbsp;m_display_node-&gt;GetNode()-&gt;SetPos(0.0,-40.0);<br/>
&nbsp;&nbsp;m_edit_node-&gt;GetNode()-&gt;SetPos(&nbsp;&nbsp; 0.0,&nbsp;&nbsp;0.0);<br/>
&nbsp;&nbsp;m_rate_node-&gt;GetNode()-&gt;SetPos(&nbsp;&nbsp; 0.0, 40.0);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(Competencies().ToStrDutch(v[i]).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::~<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>Node&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::Get<a href="CppQt.htm">Qt</a>Node() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Not implemented");<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt; qtnode;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::Set<a href="CppQt.htm">Qt</a>Node(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;&amp; qtnode) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Not implemented");<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Node&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::GetNode()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ui-&gt;box_edit-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> m_node;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>DisplayStrategy*&gt;(node_item-&gt;GetDisplayStrategy().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Node * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>EditStrategy*&gt;(node_item-&gt;GetDisplayStrategy().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Node * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Node*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>RateStrategy*&gt;(node_item-&gt;GetDisplayStrategy().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Node * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;cmap::<a href="CppQt.htm">Qt</a>Node*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::GetNode: index unknown");<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;cmap::Competency&gt;(index);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingConcreteness(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingSpecificity(<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog d;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to text being changed<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d.m_node-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName("1234567890");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName("123456789");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &lt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test brushes being changed when ratings are given<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> d.m_node-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>RateStrategy item(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateRedGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateRedGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateYellowGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateYellowGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>ConceptMapBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::OnRequestsSceneUpdate()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;view-&gt;scene()-&gt;update();<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog::on_button_load_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> s <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostMake_shared.htm">boost::make_shared</a>&lt;<a href="CppQt.htm">Qt</a>ItemDisplayStrategy&gt;();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_test_index-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostMake_shared.htm">boost::make_shared</a>&lt;<a href="CppQt.htm">Qt</a>Node&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;NodeFactory().GetTest(index),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;Set<a href="CppQt.htm">Qt</a>Node(qtnode);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmapviewtestsdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmapviewtestsdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> ComplexHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_c;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> Heteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_h;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> SimpleHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; &gt; m_s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> Tha <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; &gt; m_<a href="CppWidget.htm">widget</a>s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBVIEWTESTSDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtconceptmapviewtestsdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtconceptmapviewtestsdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapviewtestsdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QGridLayout&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtconceptmapviewtestsdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_c(cmap::ConceptMapFactory::GetComplexHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_h(cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_s(cmap::ConceptMapFactory::GetSimpleHomomorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s{}<br/>
{<br/>
<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> type=0; type<a href="CppOperatorNotEqual.htm">!=</a>3; <a href="CppOperatorIncrement.htm">++</a>type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * contents <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;display_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;rate_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!contents-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQVBoxLayout.htm">QVBoxLayout</a> * <b><a href="CppConst.htm">const</a></b> mylayout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;contents-&gt;setLayout(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(contents-&gt;layout());<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> all concept maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Heteromorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> extra_height <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(extra_height &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Simple homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_s[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_s[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Complex homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_c[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_c[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::~<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap&gt; <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; concept_map)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>: unimplemented type");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(100,100);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(200,200);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.close();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_concept_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_conceptmap<a href="CppWidget.htm">widget</a>_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_edge_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_edit_conceptmap_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_example_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_examples_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_node_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_qtedge_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_qtnode_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_rate_conceptmap_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_readonly_conceptmap_clicked();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_view_concept_maps_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> sm_test_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> sm_test_edge <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> sm_test_examples <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> sm_test_example <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> sm_test_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTCONCEPTAMPMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestexampledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtedgedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmaptestqtnodedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapviewtestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;button_example-&gt;setEnabled(sm_test_example);<br/>
&nbsp;&nbsp;ui-&gt;button_examples-&gt;setEnabled(sm_test_examples);<br/>
&nbsp;&nbsp;ui-&gt;button_concept-&gt;setEnabled(sm_test_concept);<br/>
&nbsp;&nbsp;ui-&gt;button_node-&gt;setEnabled(sm_test_node);<br/>
&nbsp;&nbsp;ui-&gt;button_edge-&gt;setEnabled(sm_test_edge);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().GetAbout());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sm_test_example) { <a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog(); }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sm_test_examples) { <a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog(); };<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sm_test_concept) { <a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog(); }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sm_test_node) { <a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog(); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (sm_test_edge) { <a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog(); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>TestEditConceptMapDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>TestRateConceptMapDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_readonly_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_edit_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_rate_conceptmap_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_concept_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestConceptDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_node_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestNodeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_edge_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestEdgeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_view_concept_maps_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapViewTestsDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_conceptmap<a href="CppWidget.htm">widget</a>_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_example_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExampleDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_examples_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTestExamplesDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_qtnode_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>NodeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::on_button_qtedge_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>ConceptMapTest<a href="CppQt.htm">Qt</a>EdgeDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapwidgetdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapwidgetdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanUndo() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoUndo() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetNumberOfButtons() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()); }<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called when user clicks a button<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnClick determines the clicked button its index<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/by finding the focused button. Then it<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/calls DoClick<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClick();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPushButton.htm">QPushButton</a> *&gt; m_buttons;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; m_qt<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; Create<a href="CppWidget.htm">Widget</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Click the ith button<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoClick(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTEDITCONCEPTMAPWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestconceptmapwidgetdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestconceptmapwidgetdialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPushButton.htm">QPushButton</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcommand.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcommandfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestConceptMap.htm">testconceptmap</a><a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_buttons{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>())<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the three conceptmap <a href="CppWidget.htm">widget</a>s<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QFrame * <b><a href="CppConst.htm">const</a></b> frame <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_edit;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!frame-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;frame-&gt;setLayout(layout);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> m_qt<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Command buttons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QFrame * <b><a href="CppConst.htm">const</a></b> frame <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_buttons;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> frame-&gt;layout();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>frame-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(frame-&gt;layout());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::Command&gt; command: CommandFactory::CreateTestCommands())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQPushButton.htm">QPushButton</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_buttons.push_back(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button-&gt;setText(command-&gt;ToStr().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(button,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnClick()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_buttons.size() <a href="CppOperatorEqual.htm">==</a> CommandFactory::CreateTestCommands().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_buttons[0]-&gt;setFocus();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::CanUndo() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_qt<a href="CppWidget.htm">widget</a>-&gt;CanUndo();<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Create<a href="CppWidget.htm">Widget</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Each <a href="CppWidget.htm">Widget</a> must have its own ConceptMap<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[17] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(m));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Edit<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[0] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(m,<a href="CppQt.htm">Qt</a>EditConceptMap::Mode::simple));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rate<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;ConceptMap&gt; m { ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s()[17] };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(m));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>&gt; w(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>ConceptMap<a href="CppWidget.htm">Widget</a>(c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 3 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "There are three display strategies of <a href="CppQt.htm">Qt</a>ConceptMap");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::DoClick(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> button_index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; GetNumberOfButtons());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;m_buttons[button_index];<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> button-&gt;text().toStdString();<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Command<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> commands(CommandFactory::CreateTestCommands());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> command_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(commands.begin(),commands.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[text](<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Command&gt; command)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(command);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> command-&gt;ToStr() <a href="CppOperatorEqual.htm">==</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(command_iter <a href="CppOperatorNotEqual.htm">!=</a> commands.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*command_iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_qt<a href="CppWidget.htm">widget</a>-&gt;CanDoCommand(*command_iter))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;DoCommand(*command_iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Nothing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::DoUndo() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_qt<a href="CppWidget.htm">widget</a>-&gt;CanUndo());<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;Undo();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mouse<a href="CppDouble.htm">Double</a>ClickEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mouseMoveEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;m_qt<a href="CppWidget.htm">widget</a>-&gt;mousePressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::OnClick()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>_FUNC();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> button_iter <a href="CppOperatorAssign.htm">=</a> <a href="CppStdFind_if.htm">std::find_if</a>(m_buttons.begin(),m_buttons.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button) { <b><a href="CppReturn.htm">return</a></b> button-&gt;hasFocus(); }<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (button_iter <a href="CppOperatorEqual.htm">==</a> m_buttons.end()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> button_index {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdDistance.htm">std::distance</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_buttons.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button_iter<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_buttons.size()));<br/>
&nbsp;&nbsp;DoClick(button_index);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_depth <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> j <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>j; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.CanUndo()) { d.DoUndo(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking twice");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 3)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking thrice");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> k=0; k<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>k)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(k);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 4)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Clicking four <a href="CppTime.htm">time</a>s");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog tmp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> tmp.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> k=0; k<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>k)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> m=0; m<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>m)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(k);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> TODO_ISSUE_208<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_depth <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Random clicking");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_buttons <a href="CppOperatorAssign.htm">=</a> d.GetNumberOfButtons();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoClick(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> n_buttons);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a>TODO_ISSUE_208<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a><a href="ToolTestConceptMap.htm">TestConceptMap</a><a href="CppWidget.htm">Widget</a>Dialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestdisplayconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestdisplayconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_modify_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>DisplayConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTDISPLAYCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestdisplayconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestdisplayconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtdisplayconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtte<a href="CppStd.htm">std</a>isplayconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>DisplayConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i) d.on_button_test_modify_clicked();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestDisplayConceptMapDialog::on_button_test_modify_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingConcreteness(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>qtitem-&gt;GetConcept()-&gt;SetRatingSpecificity(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; w <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(w[ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> w.size() ]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttesteditconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttesteditconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestEditConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>EditConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTMAPEDITWIDGETDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttesteditconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttesteditconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttesteditconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapelement.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapedge.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qteditconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttesteditconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>EditConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>EditConceptMap::Mode::simple<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_1<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> event-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::AltModifier)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DoSomethingRandom();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog d;<br/>
&nbsp;&nbsp;d.DoSomethingRandom();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map.get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept_map-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to text being changed<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d.m_concept_map-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName("1234567890");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept_map-&gt;GetConcept()-&gt;SetName("123456789");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &lt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test brushes being changed when ratings are given<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> d.m_concept_map-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>RateConceptItem item(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateRedGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateRedGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateYellowGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateYellowGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>BrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestEditConceptMapDialog::DoSomethingRandom()<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorPlus.htm">+</a> "N");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Examples&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetExamples(v [ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> v.size() ] );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Edge* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Edge*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty() <a href="CppOperatorLogicalOr.htm">||</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "An item can contain no text: when connected to the center node");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorPlus.htm">+</a> "E");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Examples&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> ExamplesFactory().GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetExamples(v [ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> v.size() ] );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestrateconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestrateconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> cmap {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests the <a href="CppQt.htm">Qt</a>ConceptMaps<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>TestRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The to-be-tested concept map<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>RateConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> cmap<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTCONCEPTMAPTESTCONCEPTMAPRATEWIDGETDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/qttestrateconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/qttestrateconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qttestrateconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetencies.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexample.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapdisplaystrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapeditstrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtconceptmapratestrategy.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttestrateconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>RateConceptMap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::ConceptMapFactory::GetHeteromorphous<a href="ToolTestConceptMap.htm">TestConceptMap</a>s().at(15)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;)<br/>
<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::~<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::DoSomethingRandom()<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> m_concept_map-&gt;GetScene()-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppQt.htm">Qt</a>Node* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Node*&gt;(item))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingConcreteness(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingSpecificity(-1 <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;cmap::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;cmap::Competency&gt; w <a href="CppOperatorAssign.htm">=</a> Competencies().GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(w[ <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> w.size() ]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;SetCompetency(cmap::Competency::un<a href="CppInitialize.htm">initialize</a>d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtitem-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_concept_map-&gt;GetScene()-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::AltModifier <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DoSomethingRandom();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Doing random stuff<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>100; <a href="CppOperatorIncrement.htm">++</a>i) d.DoSomethingRandom();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppQt.htm">Qt</a>TestRateConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/testconceptmapmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/testconceptmapmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>GUI independent <a href="ToolTestConceptMap.htm">TestConceptMap</a> menu dialog<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTCONCEPTMAPMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestConceptMap/testconceptmapmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestConceptMap/testconceptmapmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestConceptMap.htm">testconceptmap</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtrateconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "conceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ToolTestConceptMap.htm">TestConceptMap</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"tests the ConceptMap <b><a href="CppClass.htm">classes</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"on the 18th of May 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("ConceptMap <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> cmap::ConceptMap::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("ConceptMap<a href="CppWidget.htm">Widget</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> cmap::<a href="CppWidget.htm">Widget</a>().Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Test image from http://sipi.usc.edu");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::Program<a href="ToolTestConceptMap.htm">TestConceptMap</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.1";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-12-03: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-05-18: <a href="CppVersion.htm">version</a> 1.1: added testing Example"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::cmap::<a href="CppWidget.htm">Widget</a>();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::<a href="ToolTestConceptMap.htm">TestConceptMap</a>MenuDialog finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
