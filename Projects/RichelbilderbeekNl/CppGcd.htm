<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Greatest Common Divisor</title>
  <meta name="description" content="C++ Greatest Common Divisor"/>
  <meta name="keywords" content="C++ Greatest Common Divisor GCD"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGcd.htm">Greatest Common Divisor</a></h1>
<p>&nbsp;</p>
<p>The greatest common divisor can be calculated:</p>
<ul>
  <li>using a for-loop</li>
  <li>using recursion</li>
  <li>using the <a href="http://www.boost.org/">Boost</a> library</li>
</ul>
<p>&nbsp;</p>
<p>Code in plain text can be found <a href="CppGcd.txt">here</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>A for-loop</h2>
<p>&nbsp;</p>
<p>Using Euclid's algorithm.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="file7Jdo7X.cpp" border = "1"><tr><td><code>
<b><a href="CppInt.htm">int</a></b> GreatestCommonDivisor(<b><a href="CppInt.htm">int</a></b> x, <b><a href="CppInt.htm">int</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (y <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> temp <a href="CppOperatorAssign.htm">=</a> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y <a href="CppOperatorAssign.htm">=</a> x <a href="CppOperatorModulus.htm">%</a> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;x <a href="CppOperatorAssign.htm">=</a> temp;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> x;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Using recursion</h2>
<p>&nbsp;</p>
<p>Using Euclid's algorithm, a recursive function:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="filesszFcO.cpp" border = "1"><tr><td><code>
<b><a href="CppInt.htm">int</a></b> GreatestCommonDivisor(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y<a href="CppOperatorEqual.htm">==</a>0) <b><a href="CppReturn.htm">return</a></b> x;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GreatestCommonDivisor(y,x%y);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Using the <a href="http://www.boost.org/"> Boost</a> library</h2>
<p>&nbsp;</p>
<p>From <a href="http://www.boost.org/doc/html/boost_math/gcd_lcm.html">http://www.boost.org/doc/html/boost_math/gcd_lcm.html</a>:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="fileVPO8jl.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/math/common_factor.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIteratorH.htm">iterator</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
 <br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppCout.htm">std::cout</a>;<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppEndl.htm">std::endl</a>;<br/>
 <br/>
&nbsp;&nbsp;cout <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "The GCD and LCM of 6 and 15 are "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::math::gcd(6, 15) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " and "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::math::lcm(6, 15) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", respectively."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> endl;<br/>
 <br/>
&nbsp;&nbsp;cout <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "The GCD and LCM of 8 and 9 are "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::math::<b><a href="CppStatic.htm">static</a></b>_gcd&lt;8, 9&gt;::value<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " and "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppBoost.htm">boost</a>::math::<b><a href="CppStatic.htm">static</a></b>_lcm&lt;8, 9&gt;::value<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", respectively." <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> endl;<br/>
&nbsp;&nbsp;<a href="CppCin.htm">std::cin</a>.get();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
