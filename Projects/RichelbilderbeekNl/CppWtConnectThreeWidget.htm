<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtConnectThreeWidget</title>
  <meta name="description" content="C++ WtConnectThreeWidget"/>
  <meta name="keywords" content="C++ WtConnectThreeWidget "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.663 at Sat Jun 21 23:25:01 2014
 -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a> is a <a href="CppWt.htm">Wt</a> 
<a href="CppWidget.htm">widget</a> <a href="CppClass.htm">class</a> to display an <a href="CppConnectThreeWidget.htm">ConnectThreeWidget</a>.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtConnectThreeWidget/CppWtConnectThreeWidget.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtConnectThreeWidget/CppWtConnectThreeWidget.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a><br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a>/<a href="CppWtConnectThreeWidget.htm">wtconnectthreewidget</a>.h<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a>/<a href="CppWtConnectThreeWidget.htm">wtconnectthreewidget</a>.cpp<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtConnectThreeWidget/wtconnectthreewidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtConnectThreeWidget/wtconnectthreewidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>, <a href="CppWt.htm">Wt</a> <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppConnectThree.htm">ConnectThree</a> display<br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> WTCONNECTTHREEWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> WTCONNECTTHREEWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBitsetH.htm">bitset</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintedWidget.htm">WPaintedWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.htm">WPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>fwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>player.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>square.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>winner.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWPaintDevice.htm">WPaintDevice</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWTimer.htm">WTimer</a>;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> con3 {<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> <a href="CppConnectThreeWidget.htm">ConnectThreeWidget</a>;<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> <a href="CppConnectThree.htm">ConnectThree</a>Resources;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a> is a <a href="CppWt.htm">Wt</a> <a href="CppWidget.htm">widget</a> to display<br/>
<a href="CppComment.htm">///</a>the area/board of the <a href="CppConnectThree.htm">ConnectThree</a> <b><a href="CppClass.htm">class</a></b>.<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWPaintedWidget.htm">Wt::WPaintedWidget</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppConnectThree.htm">ConnectThree</a>Resources&gt; resources,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; is_player_human <a href="CppOperatorAssign.htm">=</a> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;(<b><a href="CppTrue.htm">true</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> 16,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> 12);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoComputerTurn();<br/>
&nbsp;&nbsp;Player GetActivePlayer() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; GetIsPlayerHuman() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
&nbsp;&nbsp;Winner GetWinner() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> IsComputerTurn() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Restart();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetIsPlayerHuman(<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; is_player_human);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_signal_valid_move is <a href="CppEmit.htm">emitted</a> on a valid move,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/ca<b><a href="CppUsing.htm">using</a></b> the game to be terminated or let<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/the next player <b><a href="CppDo.htm">do</a></b> his/her move.<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_valid_move;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClick(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> *paintDevice);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppConnectThreeWidget.htm">ConnectThreeWidget</a>&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&gt; &gt; m_players;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&gt; m_empty;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppWTimer.htm">Wt::WTimer</a>&gt; m_<a href="CppTime.htm">time</a>r;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&amp; GetImage(<b><a href="CppConst.htm">const</a></b> Square sprite) <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> con3<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTCONNECTTHREEWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtConnectThreeWidget/wtconnectthreewidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtConnectThreeWidget/wtconnectthreewidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>, <a href="CppWt.htm">Wt</a> <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppConnectThree.htm">ConnectThree</a> display<br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtConnectThreeWidget.htm">CppWtConnectThreeWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWtConnectThreeWidget.htm">wtconnectthreewidget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintDevice.htm">WPaintDevice</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.htm">WPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTimer.htm">WTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a><a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>resources.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppConnectThree.htm">connectthree</a>move.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>Yes, naming the filename twice feels dumb, but<br/>
<a href="CppComment.htm">///</a>I could not find enough <a href="CppDocumentation.htm">documentation</a> <a href="CppAbout.htm">about</a><br/>
<a href="CppComment.htm">///</a>how I should use the <a href="CppWPainter.htm">Wt::WPainter</a>::Image <a href="CppConstructor.htm">constructor</a><br/>
<a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppConnectThree.htm">ConnectThree</a>Resources&gt; resources,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; is_player_human,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows)<br/>
&nbsp;&nbsp;: m_signal_valid_move{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> con3::<a href="CppConnectThreeWidget.htm">ConnectThreeWidget</a>(is_player_human,n_cols,n_rows)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_players(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[0],<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[0])),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[1],<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[1])),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[2],<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetPlayersFilenames()[2])),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_empty(<b><a href="CppNew.htm">new</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetEmptyFilename(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resources-&gt;GetEmptyFilename())),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppWTimer.htm">Wt::WTimer</a>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_empty-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> m_empty-&gt;height();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;resize(n_cols * sprite_width,n_rows * sprite_height);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;mouseWentDown().connect(<b><a href="CppThis.htm">this</a></b>, &amp;<a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::OnClick);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(100);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;<a href="CppTime.htm">time</a>out().connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppConnectThreeWidget.htm">ConnectThreeWidget</a>::Tick,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>.get()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::DoComputerTurn()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsComputerTurn());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> move <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;SuggestMove();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppFor.htm">for</a></b> draw<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!move) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;CanSelect(move-&gt;GetX(),move-&gt;GetY()));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Select(move-&gt;GetX(),move-&gt;GetY());<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;DoMove();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::con3::Player <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::GetActivePlayer() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetActivePlayer();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::GetIsPlayerHuman() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>-&gt;GetIsPlayerHuman();<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "2.0";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-01-08: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-01-10: <a href="CppVersion.htm">version</a> 1.1: added use of <a href="CppConnectThree.htm">ConnectThree</a>Resources",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-04-22: <a href="CppVersion.htm">version</a> 2.0: added Restart, SetIsPlayerHuman <a href="CppMemberFunction.htm">member function</a>s and a different way of resource acquisition",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-02-17: <a href="CppVersion.htm">version</a> 2.1: put in <b><a href="CppNamespace.htm">namespace</a></b> con3, use of <b><a href="CppEnumClass.htm">enum class</a></b>es"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::con3::Winner <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::GetWinner() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetGame());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetWinner();<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::IsComputerTurn() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>-&gt;IsComputerTurn();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::OnClick(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disable clicking <b><a href="CppIf.htm">if</a></b> it's the AI's turn<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (IsComputerTurn()) <b><a href="CppReturn.htm">return</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_empty-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> m_empty-&gt;height();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().y;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> mouse_x <a href="CppOperatorDivide.htm">/</a> sprite_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> mouse_y <a href="CppOperatorDivide.htm">/</a> sprite_height;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;CanDoMove(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;CanSelect(x,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Select(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;DoMove();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_valid_move();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> *paintDevice)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a> painter(paintDevice);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetGame());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_empty-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> m_empty-&gt;height();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetRows();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetCols();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0; y<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0; x<a href="CppOperatorNotEqual.htm">!=</a>n_cols; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawImage(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x * sprite_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y * sprite_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetImage(m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetSquare(x,y)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image&amp; <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::GetImage(<b><a href="CppConst.htm">const</a></b> Square sprite) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (sprite)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Square::empty: <b><a href="CppReturn.htm">return</a></b> *m_empty.get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Square::player1: <b><a href="CppReturn.htm">return</a></b> *m_players[0].get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Square::player2: <b><a href="CppReturn.htm">return</a></b> *m_players[1].get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> Square::player3: <b><a href="CppReturn.htm">return</a></b> *m_players[2].get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unknown <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::GetImage value");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::Restart()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Restart();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::con3::<a href="CppWtConnectThreeWidget.htm">WtConnectThreeWidget</a>::SetIsPlayerHuman(<b><a href="CppConst.htm">const</a></b> <a href="CppStdBitset.htm">std::bitset</a>&lt;3&gt;&amp; is_player_human)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;SetIsPlayerHuman(is_player_human);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
