<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtImage</title>
  <meta name="description" content="C++ QtImage"/>
  <meta name="keywords" content="C++ QtImage "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtImage.htm">QtImage</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name CppQtImage-->
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtImage/qtimage.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtImage/qtimage.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTIMAGE_H<br/>
<a href="CppDefine.htm">#define</a> QTIMAGE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppUtilityH.htm">utility</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRect.htm">QRect</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Image : <b><a href="CppPublic.htm">public</a></b> <a href="CppQLabel.htm">QLabel</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Image(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>ClickableRegion(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>&amp; region,<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt;&amp; <a href="CppFunction.htm">function</a>_to_do);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<a href="CppQRect.htm">QRect</a>,<a href="CppStdFunction.htm">std::function</a>&lt;<b><a href="CppVoid.htm">void</a></b>()<a href="CppOperatorStreamIn.htm">&gt;&gt;</a>&gt; m_v;<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
<br/>
<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTIMAGE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtImage/qtimage.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtImage/qtimage.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qtimage.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<br/>
<a href="CppQt.htm">Qt</a>Image::<a href="CppQt.htm">Qt</a>Image(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQLabel.htm">QLabel</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_v{}<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMouseTracking(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Image::<a href="CppAdd.htm">Add</a>ClickableRegion(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>&amp; region,<b><a href="CppConst.htm">const</a></b> <a href="CppStdFunction.htm">std::function</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt;&amp; <a href="CppFunction.htm">function</a>_to_do)<br/>
{<br/>
&nbsp;&nbsp;m_v.push_back(<a href="CppStdMake_pair.htm">std::make_pair</a>(region,<a href="CppFunction.htm">function</a>_to_do));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Image::mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> is_arrow <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> p: m_v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (p.first.contains(e-&gt;pos()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_arrow <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setCursor(<a href="CppQCursor.htm">QCursor</a>(is_arrow ? <a href="CppQt.htm">Qt</a>::ArrowCursor : <a href="CppQt.htm">Qt</a>::<a href="CppPoint.htm">Point</a>ingHandCursor));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Image::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ',' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> e-&gt;pos().y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> p: m_v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (p.first.contains(e-&gt;pos()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> f <a href="CppOperatorAssign.htm">=</a> p.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
