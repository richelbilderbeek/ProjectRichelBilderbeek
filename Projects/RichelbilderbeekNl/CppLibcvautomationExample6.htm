<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>LibcvautomationExample6</title>
  <meta name="description" content="C++ LibcvautomationExample6"/>
  <meta name="keywords" content="C++ LibcvautomationExample6 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppLibcvautomationExample6.htm">LibcvautomationExample6</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:02:47 2015
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppLibcvautomationExample6.htm">libcvautomation example 6: test a simple Qt desktop application</a> is a
<a href="CppLibcvautomation.htm">libcvautomation</a> example with a simple Qt desktop application and a 
<a href="CppLibcvautomation.htm">libcvautomation</a> test script. The application is called from the script, and has three
buttons: two labeled 'Press me' and one labeled 'DON'T PRESS ME'. The test presses both 'Press me' buttons (their text will change
to 'OK') and then click the 'DON'T PRESS ME' button, which causes an error.</p>
<p>&nbsp;</p>
<p>For the testing script, I have supplied part of screenshots of the application. I guess that would I change my desktop theme (for example: using
a black theme), the test will not find the buttons anymore.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppLibcvautomationExample6.png">View a screenshot of 'CppLibcvautomationExample6' (png)</a></li>
  <li><a href="CppLibcvautomationExample6.zip">Download the Qt Creator project 'CppLibcvautomationExample6' (zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.3.0 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppLibcvautomationExample6/CppLibcvautomationExample6.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppLibcvautomationExample6/CppLibcvautomationExample6.pro" border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by <a href="CppQtCreator.htm">QtCreator</a> 2013-07-10T21:02:16<br/>
#<br/>
#-------------------------------------------------<br/>
<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= dialog.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= dialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppLibcvautomationExample6/dialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppLibcvautomationExample6/dialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> DIALOG_H<br/>
<a href="CppDefine.htm">#define</a> DIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> Dialog;<br/>
}<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;~Dialog();<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_pushButton_1_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_pushButton_2_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_pushButton_3_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::Dialog *ui;<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> DIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppLibcvautomationExample6/dialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppLibcvautomationExample6/dialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_dialog.h"<br/>
<br/>
Dialog::Dialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::Dialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
Dialog::~Dialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Dialog::on_pushButton_1_clicked()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;pushButton_1-&gt;setText("OK");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Dialog::on_pushButton_2_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdRuntime_error.htm">std::runtime_error</a>("DON'T PRESS ME");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Dialog::on_pushButton_3_clicked()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;pushButton_3-&gt;setText("OK");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppLibcvautomationExample6/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppLibcvautomationExample6/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "dialog.h"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;Dialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppLibcvautomationExample6/CppLibcvautomationExample6.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppLibcvautomationExample6/CppLibcvautomationExample6.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#Start the testing program in the background<br/>
./../build-CppLibcvautomationExample6-Desktop-Debug/CppLibcvautomationExample6 &amp;<br/>
<br/>
#Wait for the application to appear<br/>
sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "wait_for CppLibcvautomationExample6_pressme.png"<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "icmouseclick CppLibcvautomationExample6_pressme.png"<br/>
<br/>
#sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "wait_for CppLibcvautomationExample6_pressme.png"<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "icmouseclick CppLibcvautomationExample6_pressme.png"<br/>
<br/>
#sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "wait_for CppLibcvautomationExample6_dontpressme.png"<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "icmouseclick CppLibcvautomationExample6_dontpressme.png"<br/>
<br/>
sleep 1<br/>
<br/>
#Alternative:<br/>
#<br/>
# 1) Move the cursor to the 'DO NOT PRESS' button<br/>
#<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;./../../Libraries/libcvautomation/examples/cva-input -s "mousexy 800 450"<br/>
#<br/>
# 2) Gives you one second to move the mouse cursor <br/>
#<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;sleep 1<br/>
#<br/>
# 3) Click<br/>
#<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;./../../Libraries/libcvautomation/examples/cva-input -s "mouseclick"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
