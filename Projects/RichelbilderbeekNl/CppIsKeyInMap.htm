<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>IsKeyInMap</title>
  <meta name="description" content="C++ IsKeyInMap"/>
  <meta name="keywords" content="C++ IsKeyInMap code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIsKeyInMap.htm">IsKeyInMap</a></h1>
<p>&nbsp;</p>
<p><a href="CppIsKeyInMap.htm">IsKeyInMap</a> is a <a href="CppMap.htm">std::map</a> <a href="CppCheck.htm">check</a>
<a href="CppCodeSnippets.htm">code snippet</a> to find out if a certain key is in a <a href="CppMap.htm">std::map</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;<b><a href="CppInt.htm">int</a></b>,<a href="CppString.htm">std::string</a>&gt; GetNumberMap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppMap.htm">std::map</a>&lt;<b><a href="CppInt.htm">int</a></b>,<a href="CppString.htm">std::string</a>&gt; numberMap;<br/>
&nbsp;&nbsp;numberMap[0] <a href="CppOperatorAssign.htm">=</a> "Zero";<br/>
&nbsp;&nbsp;numberMap[1] <a href="CppOperatorAssign.htm">=</a> "One";<br/>
&nbsp;&nbsp;numberMap[2] <a href="CppOperatorAssign.htm">=</a> "Two";<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Etcetera<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> numberMap;<br/>
}<br/>
 <br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> KeyType, <b><a href="CppClass.htm">class</a></b> ValueType&gt;<br/>
<b><a href="CppBool.htm">bool</a></b> IsKeyInMap(<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;KeyType,ValueType&gt;&amp; anyMap, <b><a href="CppConst.htm">const</a></b> KeyType&amp; key)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> anyMap.find(key) <a href="CppOperatorNotEqual.htm">!=</a> anyMap.end();<br/>
}<br/>
 <br/>
 <br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;<b><a href="CppInt.htm">int</a></b>,<a href="CppString.htm">std::string</a>&gt; myMap(GetNumberMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsKeyInMap(myMap,-2));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsKeyInMap(myMap,-1));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( IsKeyInMap(myMap,0));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( IsKeyInMap(myMap,1));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( IsKeyInMap(myMap,2));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

