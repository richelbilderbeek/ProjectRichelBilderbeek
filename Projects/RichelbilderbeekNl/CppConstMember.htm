<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::abs</title>
  <meta name="description" content="C++ std::abs"/>
  <meta name="keywords" content="C++ std::abs abs absolute"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppConstMember.htm">const member</a></h1>
<p>&nbsp;</p>
<p>
  The value of a member variable that is declared <a href="CppConst.htm">const</a> cannot be changed after <a href="CppConstructor.htm">construction</a>.
</p>
<p>&nbsp;</p>
<p>
  In <a href="CppClassDesign.htm">class design</a>, a <a href="CppConstMember.htm">const member</a> 
  reflects an attribute that can be different between objects, but stay constant after <a href="CppConstructor.htm">construction</a>. When
  modeling humans (or persons) attributes as name, gender and birth date are candidates for a <a href="CppConstMember.htm">const member</a>.
</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="fileqLTGJs.cpp" border = "1"><tr><td><code>
<b><a href="CppStruct.htm">struct</a></b> Person<br/>
{<br/>
&nbsp;&nbsp;Person(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> isMale) : mIsMale(isMale) {}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> mIsMale;<br/>
};<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>As a <a href="CppConstMember.htm">const member</a> cannot be changed after 
<a href="CppConstructor.htm">construction</a>, you might choose to make it <a href="CppPublic.htm">public</a>, instead of writing a getter.</p>
<p>&nbsp;</p>
<p>Use <a href="CppConst.htm">const</a> whenever possible [1-6].</p>
<p>&nbsp;</p>
<p><a href="CppExerciseTheManyTypesOfConst.htm">Exercise 5: the many types of const</a> is an exercise about the many types of <a href="CppConst.htm">const</a>.</p>
<p>&nbsp;</p>
<p><a href="CppConstMember.htm">Const members</a> often make <a href="CppClass.htm">classes</a> noncopyable. A solution to this feature is to store the objects in a <a
href="CppShared_ptr.htm">boost::shared_ptr</a> and/or using the <a href="CppPimpl.htm">Pimpl</a> idiom.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4 7.9.3: 'Use const extensively and consistently'</li>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition).ISBN: 0-321-33487-6. Item 3: 'Use const whenever possible'</li>
  <li><a href="CppJarrodHollingworth.htm">Jarrod Hollingworth</a>, <a href="CppBobSwart.htm">Bob Swart</a>, <a href="CppMarkCashman.htm">Mark Cashman</a>, <a href="CppPaulGustavson.htm">Paul Gustavson</a>. Sams C++ Builder 6 Developer's Guide. ISBN: 0-672-32480-6. Chapter 3: 'Understand and use const in your code'</li>
  <li><a href="CppJesseLiberty.htm">Jesse Liberty</a>. Sams teach yourself C++ in 24 hours. ISBN: 0-672-32224-2. Hour 8, chapter 'Const member functions': 'Use const whenever possible.'</li>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 2: 'Prefer consts, enums and inlines to #defines'</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Item 15: 'Use const proactively'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
