<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>#include guard</title>
  <meta name="description" content="C++ #include guard"/>
  <meta name="keywords" content="C++ #include guard code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIncludeGuard.htm">#include guard</a></h1>
<p>&nbsp;</p>
<p>An <a href="CppIncludeGuard.htm">#include guard</a> prevents
a <a href="CppHeaderFile.htm">header file</a> to be <a href="CppCompile.htm">compiled</a> multiple times
(this will happen if a <a href="CppHeaderFile.htm">header file</a> is 
<a href="CppInclude.htm">#included</a> by multiple 
<a href="CppHeaderFile.htm">header files</a>, which will cause a redeclaration error).</p>
<p>&nbsp;</p>
<p>An <a href="CppIncludeGuard.htm">#include guard</a> looks like the code below:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MYHEADERFILE_H<br/>
<a href="CppDefine.htm">#define</a> MYHEADERFILE_H<br/>
<br/>
<a href="CppComment.htm">//</a>Your <a href="CppHeaderFile.htm">header file</a> code, guaranteed to be <a href="CppCompile.htm">compile</a>d only once<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>
  An <a href="CppImplementationFile.htm">implementation (.cpp) file</a> does not have an
  <a href="CppIncludeGuard.htm">#include guard</a>, because they do not get 
  <a href="CppInclude.htm">#included</a>, but 'Added to Project' instead.
</p>
<p>&nbsp;</p>
<p>
  Always write <a href="CppIncludeGuard.htm">#include guards</a> [1-5].
  Always write internal <a href="CppIncludeGuard.htm">#include guards</a> [1-4]. 
  Never write external <a href="CppIncludeGuard.htm">#include guards</a> [1,4]. 
  Do write external <a href="CppIncludeGuard.htm">#include guards</a> [6].
  Use a unique and predictable name for the <a href="CppIncludeGuard.htm">#include guard</a> [3].

</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!-- 1 --><a href="CppHerbSutter.htm">Herb Sutter</a> and <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Chapter 24: 'Always write internal #include guards. Never write external #include guards'</li>
  <li><!-- 2 --><a href="CppJesseLiberty.htm">Jesse Liberty</a>. Sams teach yourself C++ in 24 hours. ISBN:0-672-32224-2. Hour 21, chapter 'Inclusion and inclusion guards': 'It never hurts to use inclusion guards. Often they will save you hours of debugging time'. Also: hour 24, chapter 'include guards': 'All header files should use inclusion guards'</li>
  <li><!-- 3 --><a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Chapter 2.4: 'Place a unique and predicatable (internal) include guard around the contents of each header file'</li>
  <li><!-- 4 -->Joint Strike Fighter Air Vehicle C++ Coding Standards for the System Development and Demonstration Program. Document Number 2RDU00001 Rev C. December 2005. AV Rule 27: '#ifndef, #define and #endif will be used to prevent multiple inclusions of the same header file. Other techniques to prevent the multiple inclusions of header files will not be used.'</li>
  <li><!-- 5 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 15.5. Advice. page 444: '[7] Use include guards'</li>
  <li><!-- 6 --> <a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Section 2.5, page 85: 'Place a redundant (external) include guard around each preprocessor include directive in every header file'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
