<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Template metaprogram</title>
  <meta name="description" content="C++ Richel Bilderbeek TemplateMetaprogram"/>
  <meta name="keywords" content="C++ Richel Bilderbeek Template metaprogram metaprogramming meta program programming code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppTemplateMetaprogram.htm">Template metaprogram</a></h1>
<p>&nbsp;</p>
<p><a href="CppTemplateMetaprogram.htm">Template metaprogramming</a> is a technique to perform 
calculations during <a href="CppCompile.htm">compiling</a> only.</p>
<p>&nbsp;</p>
<p>There is no semantic difference between <a href="CppClass.htm">class</a> 
and <a href="CppTypename.htm">typename</a> in a template-parameter [1].</p>
<p>&nbsp;</p>
<p>Below is an example to calculate the <a href="CppFactorial.htm">factorial</a> of an (<a href="CppUnsigned.htm"> unsigned</a>) 
<a href="CppInt.htm">integer</a> during compile-time. So when the program starts to run, 
all factorials are already calculated.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppTemplateMetaprogram.zip">Download the Qt Creator project 'CppTemplateMetaprogram' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>Other examples:</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppCtStrategyDesignPattern.htm">Compile-time Strategy Design Pattern</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 12.10 (quantal)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 2.5.2</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppTemplateMetaprogram.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="CppTemplateMetaprogram.pro" border = "1"><tr><td><code>
TEMPLATE = app<br/>
CONFIG += console<br/>
CONFIG -= qt<br/>
QMAKE_CXXFLAGS += <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a> <a href="CppWerror.htm">-Werror</a><br/>
SOURCES += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppBool.htm">bool</a></b>&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> Ct<a href="CppAssert.htm">Assert</a>;<br/>
<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> Ct<a href="CppAssert.htm">Assert</a>&lt;<b><a href="CppTrue.htm">true</a></b>&gt; {};<br/>
<br/>
<a href="CppComment.htm">//</a>The <b><a href="CppTemplate.htm">template</a></b> metaprogram <b><a href="CppFor.htm">for</a></b> factorial<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppInt.htm">int</a></b> N&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> factorial<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppConst.htm">const</a></b> value <a href="CppOperatorAssign.htm">=</a> N * factorial&lt;N-1&gt;::value;<br/>
};<br/>
<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> factorial&lt;0&gt;<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppConst.htm">const</a></b> value <a href="CppOperatorAssign.htm">=</a> 1;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;0&gt;::value<a href="CppOperatorEqual.htm">==</a>1)&gt;();<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;1&gt;::value<a href="CppOperatorEqual.htm">==</a>1)&gt;();<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;2&gt;::value<a href="CppOperatorEqual.htm">==</a>2)&gt;();<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;3&gt;::value<a href="CppOperatorEqual.htm">==</a>6)&gt;();<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;4&gt;::value<a href="CppOperatorEqual.htm">==</a>24)&gt;();<br/>
&nbsp;&nbsp;Ct<a href="CppAssert.htm">Assert</a>&lt;(factorial&lt;5&gt;::value<a href="CppOperatorEqual.htm">==</a>120)&gt;();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li>C++. International Standard. ISO/IEC 14882. Second edition. Paragraph 14.1.2.</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>

