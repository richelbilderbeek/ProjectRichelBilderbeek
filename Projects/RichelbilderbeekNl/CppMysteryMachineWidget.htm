<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>MysteryMachineWidget</title>
  <meta name="description" content="C++ MysteryMachineWidget"/>
  <meta name="keywords" content="C++ MysteryMachineWidget "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:37:35 2014
 -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a> is a <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a> <a href="CppWidget.htm">widget</a>.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppMysteryMachineWidget/CppMysteryMachineWidget.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppMysteryMachineWidget/CppMysteryMachineWidget.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>/<a href="CppMysteryMachineWidget.htm">mysterymachinewidget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>/<a href="CppMysteryMachine.htm">mysterymachine</a>key.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>/<a href="CppMysteryMachineWidget.htm">mysterymachinewidget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>/<a href="CppMysteryMachine.htm">mysterymachine</a>key.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppMysteryMachineWidget/mysterymachinekey.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppMysteryMachineWidget/mysterymachinekey.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MYSTERYMACHINEKEY_H<br/>
<a href="CppDefine.htm">#define</a> MYSTERYMACHINEKEY_H<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key {<br/>
&nbsp;&nbsp;front_clockwise,<br/>
&nbsp;&nbsp;front_<a href="CppCounter.htm">counter</a>_clockwise,<br/>
&nbsp;&nbsp;back_clockwise,<br/>
&nbsp;&nbsp;back_<a href="CppCounter.htm">counter</a>_clockwise,<br/>
&nbsp;&nbsp;toggle<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MYSTERYMACHINEKEY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppMysteryMachineWidget/mysterymachinekey.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppMysteryMachineWidget/mysterymachinekey.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="CppMysteryMachine.htm">mysterymachine</a>key.h"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppMysteryMachineWidget/mysterymachinewidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppMysteryMachineWidget/mysterymachinewidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>, GUI independent <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a><br/>
Copyright (C) 2011-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> MYSTERYMACHINEWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> MYSTERYMACHINEWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/checked_delete.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppMysteryMachine.htm">mysterymachine</a>key.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppDialWidget.htm">DialWidget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> Text<a href="CppCanvas.htm">Canvas</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppToggleButton.htm">ToggleButton</a><a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppLedWidget.htm">LedWidget</a>;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a> handles the GUI independent<br/>
<a href="CppComment.htm">///</a>user <a href="CppInterface.htm">interface</a> of the display of a <a href="CppMysteryMachine.htm">MysteryMachine</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWidget.htm">Widget</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>(<b><a href="CppConst.htm">const</a></b> Rect&amp; <a href="CppGeometry.htm">geometry</a> <a href="CppOperatorAssign.htm">=</a> CreateRect(0,0,200,400)) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the user clicking on the <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Click(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>&gt; GetMachine() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_machine; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppMysteryMachine.htm">MysteryMachine</a>&gt; GetMachine()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_machine; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key key) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Text<a href="CppCanvas.htm">Canvas</a>&gt; ToText<a href="CppCanvas.htm">Canvas</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>()&gt; m_signal_changed;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>*);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppMysteryMachine.htm">MysteryMachine</a>&gt; m_machine;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> Rect CreateRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a change in <a href="CppGeometry.htm">geometry</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnResize() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>&amp; <a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>&amp; <a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MYSTERYMACHINEWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppMysteryMachineWidget/mysterymachinewidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppMysteryMachineWidget/mysterymachinewidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>, GUI independent <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a><br/>
Copyright (C) 2011-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppMysteryMachineWidget.htm">CppMysteryMachineWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppMysteryMachineWidget.htm">mysterymachinewidget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppDial.htm">dial</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppDialWidget.htm">dialwidget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppLed.htm">led</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppLedWidget.htm">ledwidget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppMysteryMachine.htm">mysterymachine</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppToggleButton.htm">togglebutton</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppToggleButtonWidget.htm">togglebuttonwidget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Rect&amp; <a href="CppGeometry.htm">geometry</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
&nbsp;&nbsp;: m_signal_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_machine(<b><a href="CppNew.htm">new</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>)<br/>
<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;m_signal_<a href="CppGeometry.htm">geometry</a>_changed.connect(<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::OnResize,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;SetGeometry(<a href="CppGeometry.htm">geometry</a>);<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Respond to the user clicking on the <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::Click(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_machine-&gt;GetDialBack()-&gt;IsClicked(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_machine-&gt;GetDialBack()-&gt;Click(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_machine-&gt;GetDialFront()-&gt;IsClicked(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_machine-&gt;GetDialFront()-&gt;Click(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_machine-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;IsIn(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_machine-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Click(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWidget.htm">Widget</a>::Rect <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::CreateRect(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> left,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> top,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Geometry().CreateRect(left,top,width,height);<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.2";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-07-03: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-08-20: <a href="CppVersion.htm">Version</a> 1.1: added <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-02-28: <a href="CppVersion.htm">Version</a> 1.2: added ToText<a href="CppCanvas.htm">Canvas</a> and KeyPress",<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::PressKey(<b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key key) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::back_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1.0 ? f <a href="CppOperatorMinus.htm">-</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::back_<a href="CppCounter.htm">counter</a>_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f &lt; 0.0 ? f <a href="CppOperatorPlus.htm">+</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::front_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1.0 ? f <a href="CppOperatorMinus.htm">-</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::front_<a href="CppCounter.htm">counter</a>_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f &lt; 0.0 ? f <a href="CppOperatorPlus.htm">+</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::toggle:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Toggle();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::PressKey(<b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key key) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (key)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::back_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1.0 ? f <a href="CppOperatorMinus.htm">-</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::back_<a href="CppCounter.htm">counter</a>_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f &lt; 0.0 ? f <a href="CppOperatorPlus.htm">+</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::front_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 1.0 ? f <a href="CppOperatorMinus.htm">-</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::front_<a href="CppCounter.htm">counter</a>_clockwise:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;GetPosition()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> (1.0 <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;SetPosition(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f &lt; 0.0 ? f <a href="CppOperatorPlus.htm">+</a> 1.0 : f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppMysteryMachine.htm">MysteryMachine</a>Key::toggle:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetMachine()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;Toggle();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::OnResize() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(GetWidth());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(GetHeight());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> s <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(w/4.0,h/8.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w8 <a href="CppOperatorAssign.htm">=</a> w <a href="CppOperatorDivide.htm">/</a> 8.0;<br/>
<br/>
&nbsp;&nbsp;m_machine-&gt;GetDialBack()-&gt;SetGeometry((w8 * 1.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),0,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;GetDialFront()-&gt;SetGeometry((w8 * 7.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),h-s,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppToggleButton.htm">ToggleButton</a>()-&gt;SetGeometry(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(w8 * 4.0) <a href="CppOperatorPlus.htm">+</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(h * 0.5) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s,s<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Back1()-&gt;SetGeometry((w8 * 3.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),0,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Back2()-&gt;SetGeometry((w8 * 5.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),0,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Back3()-&gt;SetGeometry((w8 * 7.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),0,s,s);<br/>
<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Front1()-&gt;SetGeometry((w8 * 1.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),h-s,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Front2()-&gt;SetGeometry((w8 * 3.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),h-s,s,s);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>Front3()-&gt;SetGeometry((w8 * 5.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),h-s,s,s);<br/>
<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>TopFront()-&gt;SetGeometry(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(w8 * 5.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(((h <a href="CppOperatorMinus.htm">-</a> (s * 0.5)) <a href="CppOperatorPlus.htm">+</a> (h * 0.5)) * 0.5) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s,s<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>TopMiddle()-&gt;SetGeometry((w8 * 4.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(h * 0.5) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s,s<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_machine-&gt;Get<a href="CppLed.htm">Led</a>TopBack()-&gt;SetGeometry((w8 * 3.0) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(((s * 0.5) <a href="CppOperatorPlus.htm">+</a> (h * 0.5)) * 0.5) <a href="CppOperatorMinus.htm">-</a> (s * 0.5),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s,s<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_<a href="CppMysteryMachine.htm">mysterymachine</a>_changed();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a> w;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!w.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Text<a href="CppCanvas.htm">Canvas</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>::ToText<a href="CppCanvas.htm">Canvas</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetMachine()-&gt;ToText<a href="CppCanvas.htm">Canvas</a>();<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>&amp; <a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppGeometry.htm">geometry</a>&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppWidget.htm">widget</a>.GetGeometry()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppGeometry.htm">geometry</a>&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;machine&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> *<a href="CppWidget.htm">widget</a>.m_machine<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/machine&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
