 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>inheritance</title>
  <meta name="description" content="C++ inheritance"/>
  <meta name="keywords" content="C++ inheritance code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppInheritance.htm">inheritance</a></h1>
<p>&nbsp;</p>
<p>
  <a href="CppInheritance.htm">Inheritance</a> is a technique to re-use <a href="CppMember.htm">members</a> of a <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>There are multiple types of <a href="CppInheritance.htm">inheritance</a>:</p>
<ul>
  <li><a href="CppImplementationInheritance.htm">implementation inheritance</a></li>
  <li><a href="CppInterfaceInheritance.htm">interface inheritance</a></li>
  <li><a href="CppMultipleInheritance.htm">multiple inheritance</a></li>
</ul>
<p>&nbsp;</p>
<p>There are three modes of <a href="CppInheritance.htm">inheritance</a>:</p>
<ol>
  <li><a href="CppPublicInheritance.htm">public inheritance</a>, an 'is-a-kind-of' relationship, the most commonly used mode of <a href="CppInheritance.htm">inheritance</a></li>
  <li><a href="CppProtectedInheritance.htm">protected inheritance</a>, an obscure type of relationship</li>
  <li><a href="CppPrivateInheritance.htm">private inheritance</a>, an 'is-implemented-in-terms-of' relationship [1]</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppExample.htm">Examples</a></h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppInheritanceExample1.htm">inheritance example 1: basics</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Prefer <a href="CppComposition.htm">composition</a> to <a href="CppInheritance.htm">inheritance</a> [2]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Notes to self</h2>
<p>&nbsp;</p>
<ul>
  <li>
    When in doubt, don't use <a href="CppInheritance.htm">inheritance</a>: it is far far easier
    to correct when you've used composition too long, than the other way around
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://en.wikipedia.org/wiki/Inheritance_(computer_science)">Wikipedia's page about inheritance</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition).ISBN:0-321-33487-6. Item 39: 'Use private inheritance judiciously'</li>
  <li><!--  2 --><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. 2005. ISBN: 0-32-111358-6. Chapter 34: 'Prefer composition to inheritance'.</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
