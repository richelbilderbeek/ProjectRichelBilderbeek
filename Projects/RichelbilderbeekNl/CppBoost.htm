<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Boost</title>
  <meta name="description" content="C++ Boost"/>
  <meta name="keywords" content="C++ Boost library"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoost.htm">Boost</a></h1>
<p>&nbsp;</p>
<p><a href="CppBoost.htm">Boost</a> is a collection of cross-platform <a href="CppLibrary.htm">libraries</a>, that might be called 'the playground of the next <a href="CppStl.htm">STL</a>'. It is regarded as a rather good <a href="CppLibrary.htm">library</a> [1-3].</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppLibrary.htm">View all Boost libraries at the 'C++ library' page</a></li>
</ul>
<p>&nbsp;</p>
<p>All <a href="CppFunction.htm">functions</a> and <a href="CppClass.htm">classes</a> are in the '<a href="CppBoost.htm">boost</a>' <a href="CppNamespace.htm">namespace</a> (although some will migrate to the <a href="CppStd.htm">std</a> <a href="CppNamespace.htm">namespace</a>).</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/shared_ptr.hpp&gt;<br/>
&nbsp;<br/>
<b><a href="CppStruct.htm">struct</a></b> Test() {};<br/>
&nbsp;<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;Test&gt; test(<b><a href="CppNew.htm">new</a></b> Test);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>Familiarize yourself with <a href="CppBoost.htm">Boost</a> [1].</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppBoostInstall.htm">Installing Boost</a></h2>
<p>&nbsp;</p>
<p>Information about <a href="CppBoostInstall.htm">installing Boost</a> can be found at the
<a href="CppBoostInstall.htm">installing Boost</a> page.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.boost.org">Boost homepage</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 54: Familiarize yourself with Boost</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. 2005. ISBN: 0-32-111358-6: '...one of the most highly regarded and expertly designed C++ library projects in the world.'</li>
  <li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. Abstraction, libraries, and efficiency in C++. Dr. Dobb's Journal China. Vol 1, no 1. August 2003: 'The obvious solution for most programmers is to use a library that provides an elegant and efficient platform independent to needed services. Examples are BOOST...'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
