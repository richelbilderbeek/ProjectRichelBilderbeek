//From http://www.richelbilderbeek.nl/CppSeperateString.htm
void TestSeperateString1()
{
  {
    //#define THESE_WILL_FAIL_AND_SHOULD_FAIL
    #ifdef THESE_WILL_FAIL_AND_SHOULD_FAIL
    //Empty
    const std::vector<std::string> v1 = SeperateString("",',');
    //Seperator only
    const std::vector<std::string> v2 = SeperateString(",",',');
    //Single input, leading seperator
    const std::vector<std::string> v3 = SeperateString(",a",',');
    //Single input, trailing seperator
    const std::vector<std::string> v4 = SeperateString("a,",',');
    //Two inputs, leading seperator
    const std::vector<std::string> v5 = SeperateString(",a,a",',');
    //Two inputs, trailing seperator
    const std::vector<std::string> v6 = SeperateString("a,a,",',');
    #endif
  }

  { //Single input, seperator of type char
    const std::vector<std::string> v = SeperateString("a",',');
    assert(v[0]=="a");
  }
  { //Two inputs, seperator of type char
    const std::vector<std::string> v = SeperateString("a,b",',');
    assert(v[0]=="a");
    assert(v[1]=="b");
  }
  { //Five inputs, seperator of type char
    const std::vector<std::string> v = SeperateString("a,bb,ccc,dddd,eeeee",',');
    assert(v[0]=="a");
    assert(v[1]=="bb");
    assert(v[2]=="ccc");
    assert(v[3]=="dddd");
    assert(v[4]=="eeeee");
  }
  { //Three inputs, of which one empty, seperator of type char
    const std::vector<std::string> v = SeperateString("a, ,ccc",',');
    assert(v[0]=="a");
    assert(v[1]==" ");
    assert(v[2]=="ccc");
  }
  { //Two inputs, of which one starts with a separator, seperator of type char
    //Note: avoid this kind of input
    const std::vector<std::string> v = SeperateString("a,,ccc",',');
    assert(v[0]=="a");
    assert(v[1]==""); //NOTE: Differs from other SeperateString function!
    assert(v[2]=="ccc");
  }
}
