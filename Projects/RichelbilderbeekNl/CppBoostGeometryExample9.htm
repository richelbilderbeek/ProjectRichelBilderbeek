<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>BoostGeometryExample9</title>
  <meta name="description" content="C++ BoostGeometryExample9"/>
  <meta name="keywords" content="C++ BoostGeometryExample9 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostGeometryExample9.htm">BoostGeometryExample9</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.680 at Sun Jul  6 18:34:32 2014
 -->
<p><img src="PicBoost.png" alt="Boost"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppBoostGeometryExample9.htm">Boost.Geometry example 9: Rescale and translate a polygon</a>
  is a <a href="CppBoostGeometry.htm">Boost.Geometry</a> <a href="CppExample.htm">example</a>.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.2.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppBoostGeometryExample9/CppBoostGeometryExample9.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample9/CppBoostGeometryExample9.pro" border = "1"><tr><td><code>
exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
}<br/>
!exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;QT += core<br/>
&nbsp;&nbsp;QT += gui<br/>
&nbsp;&nbsp;greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
&nbsp;&nbsp;<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
&nbsp;&nbsp;unix {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
exists(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
}<br/>
!exists(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri) {<br/>
&nbsp;&nbsp;win32 {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_55_0<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppBoostGeometryExample9/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample9/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/polygon.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/ring.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a><br/>
&nbsp;&nbsp;Translate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a>&amp; <a href="CppShape.htm">shape</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Coordinat2D;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; Polygon;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::ring&lt;Coordinat2D&gt; <a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::<a href="CppConvert.htm">convert</a>(<a href="CppShape.htm">shape</a>,<a href="CppPointer.htm">point</a>s);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppAuto.htm">auto</a></b>&amp; <a href="CppPointer.htm">point</a>:<a href="CppPointer.htm">point</a>s)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a> <a href="CppOperatorAssign.htm">=</a> Coordinat2D(<a href="CppPointer.htm">point</a>.x() <a href="CppOperatorPlus.htm">+</a> dx, <a href="CppPointer.htm">point</a>.y() <a href="CppOperatorPlus.htm">+</a> dy);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;Polygon new_<a href="CppShape.htm">shape</a>;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::append(new_<a href="CppShape.htm">shape</a>, <a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> new_<a href="CppShape.htm">shape</a>;<br/>
}<br/>
<br/>
<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a><br/>
&nbsp;&nbsp;Rescale(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a>&amp; <a href="CppShape.htm">shape</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> scale,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> scale_origin_x <a href="CppOperatorAssign.htm">=</a> 0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> scale_origin_y <a href="CppOperatorAssign.htm">=</a> 0.0<br/>
&nbsp;&nbsp;) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Coordinat2D;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; Polygon;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::ring&lt;Coordinat2D&gt; <a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::<a href="CppConvert.htm">convert</a>(<a href="CppShape.htm">shape</a>,<a href="CppPointer.htm">point</a>s);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppAuto.htm">auto</a></b>&amp; <a href="CppPointer.htm">point</a>:<a href="CppPointer.htm">point</a>s)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppPointer.htm">point</a>.x();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx <a href="CppOperatorAssign.htm">=</a> x <a href="CppOperatorMinus.htm">-</a> scale_origin_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x <a href="CppOperatorAssign.htm">=</a> scale_origin_x <a href="CppOperatorPlus.htm">+</a> (scale * dx);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y <a href="CppOperatorAssign.htm">=</a> <a href="CppPointer.htm">point</a>.y();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy <a href="CppOperatorAssign.htm">=</a> y <a href="CppOperatorMinus.htm">-</a> scale_origin_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_y <a href="CppOperatorAssign.htm">=</a> scale_origin_y <a href="CppOperatorPlus.htm">+</a> (scale * dy);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPointer.htm">point</a> <a href="CppOperatorAssign.htm">=</a> Coordinat2D(new_x,new_y);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;Polygon new_<a href="CppShape.htm">shape</a>;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::append(new_<a href="CppShape.htm">shape</a>, <a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> new_<a href="CppShape.htm">shape</a>;<br/>
}<br/>
<br/>
<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a><br/>
&nbsp;&nbsp;CreateHouse<a href="CppShape.htm">Shape</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;3-<br/>
&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;2<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;&nbsp;&nbsp;0<br/>
&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;1<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;4&nbsp;&nbsp; 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;|&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;3---2<br/>
&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorDecrement.htm">--</a>|---|---|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp; 1&nbsp;&nbsp; 2<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Coordinat2D;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; Polygon;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat2D&gt; <a href="CppPointer.htm">point</a>s {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{0.5, 2.0}, <a href="CppComment.htm">//</a>0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{1.0, 1.0}, <a href="CppComment.htm">//</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{1.0, 0.0}, <a href="CppComment.htm">//</a>2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{0.0, 0.0}, <a href="CppComment.htm">//</a>3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{0.0, 1.0}&nbsp;&nbsp;<a href="CppComment.htm">//</a>4<br/>
&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; house;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::append(house, <a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> house;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Coordinat2D;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::polygon&lt;Coordinat2D&gt; Polygon;<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Translate (0.5,1.0) to origin<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> house <a href="CppOperatorAssign.htm">=</a> CreateHouse<a href="CppShape.htm">Shape</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> translated_house <a href="CppOperatorAssign.htm">=</a> Translate(house,-0.5,-1.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::ring&lt;Coordinat2D&gt; translated_<a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::<a href="CppConvert.htm">convert</a>(translated_house,translated_<a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat2D&gt; translated_<a href="CppPointer.htm">point</a>s_expected {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0.0, 1.0}, <a href="CppComment.htm">//</a>0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0.5, 0.0}, <a href="CppComment.htm">//</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0.5,-1.0}, <a href="CppComment.htm">//</a>2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{-0.5,-1.0}, <a href="CppComment.htm">//</a>3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{-0.5, 0.0}&nbsp;&nbsp;<a href="CppComment.htm">//</a>4<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdEqual.htm">std::equal</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;translated_<a href="CppPointer.htm">point</a>s.begin(),translated_<a href="CppPointer.htm">point</a>s.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;translated_<a href="CppPointer.htm">point</a>s_expected.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; a,<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; b)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::equals(a,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppPoint.htm">Point</a>s must be translated as expected"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Scale twice up, from origin<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> house <a href="CppOperatorAssign.htm">=</a> CreateHouse<a href="CppShape.htm">Shape</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rescaled_house <a href="CppOperatorAssign.htm">=</a> Rescale(house,2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::ring&lt;Coordinat2D&gt; rescaled_<a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::<a href="CppConvert.htm">convert</a>(rescaled_house,rescaled_<a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat2D&gt; rescaled_<a href="CppPointer.htm">point</a>s_expected {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{1.0, 4.0}, <a href="CppComment.htm">//</a>0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{2.0, 2.0}, <a href="CppComment.htm">//</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{2.0, 0.0}, <a href="CppComment.htm">//</a>2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{0.0, 0.0}, <a href="CppComment.htm">//</a>3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{0.0, 2.0}&nbsp;&nbsp;<a href="CppComment.htm">//</a>4<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdEqual.htm">std::equal</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rescaled_<a href="CppPointer.htm">point</a>s.begin(),rescaled_<a href="CppPointer.htm">point</a>s.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rescaled_<a href="CppPointer.htm">point</a>s_expected.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; a,<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; b)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "(" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> a.x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> a.y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")-("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> b.x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> b.y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::equals(a,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppPoint.htm">Point</a>s must be rescaled as expected"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Scale up, from center at (0.5,1.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3-<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;&nbsp;&nbsp;0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;4 * 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;|&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<a href="CppOperatorMinus.htm">-</a>&nbsp;&nbsp;3---2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorDecrement.htm">--</a>|---|---|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp; 1&nbsp;&nbsp; 2<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> house <a href="CppOperatorAssign.htm">=</a> CreateHouse<a href="CppShape.htm">Shape</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rescaled_house <a href="CppOperatorAssign.htm">=</a> Rescale(house,2.0,0.5,1.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::ring&lt;Coordinat2D&gt; rescaled_<a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::<a href="CppConvert.htm">convert</a>(rescaled_house,rescaled_<a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;Coordinat2D&gt; rescaled_<a href="CppPointer.htm">point</a>s_expected {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0.5, 3.0}, <a href="CppComment.htm">//</a>0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1.5, 1.0}, <a href="CppComment.htm">//</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1.5,-1.0}, <a href="CppComment.htm">//</a>2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{-0.5,-1.0}, <a href="CppComment.htm">//</a>3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{-0.5, 1.0}&nbsp;&nbsp;<a href="CppComment.htm">//</a>4<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdEqual.htm">std::equal</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rescaled_<a href="CppPointer.htm">point</a>s.begin(),rescaled_<a href="CppPointer.htm">point</a>s.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rescaled_<a href="CppPointer.htm">point</a>s_expected.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; a,<b><a href="CppConst.htm">const</a></b> Coordinat2D&amp; b)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "(" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> a.x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> a.y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")-("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> b.x() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> b.y() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::equals(a,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppPoint.htm">Point</a>s must be rescaled as expected"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
