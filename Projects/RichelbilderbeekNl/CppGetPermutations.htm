<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GetPermutations</title>
  <meta name="description" content="C++ GetPermutations"/>
  <meta name="keywords" content="C++ GetPermutations "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGetPermutations.htm">GetPermutations</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Sun Aug 17 15:26:35 2014
 -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppGetPermutations.htm">GetPermutations</a> is a <a href="CppCodeSnippets.htm">code snippet</a>
  to obtain all permutations of a <a href="CppVector.htm">std::vector</a>.
</p>
<p>&nbsp;</p>
<p>
  <a href="CppGetCombinations.htm">GetCombinations</a> is a <a href="CppCodeSnippets.htm">code snippet</a>
  to obtain all combinations of a <a href="CppVector.htm">std::vector</a>.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppGetPermutations/CppGetPermutations.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppGetPermutations/CppGetPermutations.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppGetPermutations/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppGetPermutations/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIteratorH.htm">iterator</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain all permutations of a <a href="CppStdVector.htm">std::vector</a><br/>
<a href="CppComment.htm">///</a>Examples:<br/>
/<a href="CppComment.htm">//</a> {1&nbsp;&nbsp;&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {1} }<br/>
/<a href="CppComment.htm">//</a> {1,2&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {1,2} , {2,1} }<br/>
/<a href="CppComment.htm">//</a> {1,2,3} <a href="CppOperatorMinus.htm">-</a>&gt; { {1,2,3} , {1,3,2} , {2,1,3} , {2,3,1} , {3,1,2} , {3,2,1} }<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetPermutations.htm">GetPermutations</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;T<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> <a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;T&gt; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdSort.htm">std::sort</a>(<a href="CppStdBegin.htm">std::begin</a>(v),<a href="CppStdEnd.htm">std::end</a>(v));<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;T<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> w;<br/>
&nbsp;&nbsp;w.push_back(v);<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(<a href="CppStdNext_permutation.htm">std::next_permutation</a>(<a href="CppStdBegin.htm">std::begin</a>(v),<a href="CppStdEnd.htm">std::end</a>(v)))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w.push_back(v);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp; 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp; 2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp; 6);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;24);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4,5} ) ).size() <a href="CppOperatorEqual.htm">==</a> 120);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2} )) <a href="CppOperatorEqual.htm">==</a> <a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {2,1} )));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetPermutations.htm">GetPermutations</a>(<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {0,1,2,3} ) );<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; p: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i: p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> i <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output<br/>
<br/>
0 1 2 3<br/>
0 1 3 2<br/>
0 2 1 3<br/>
0 2 3 1<br/>
0 3 1 2<br/>
0 3 2 1<br/>
1 0 2 3<br/>
1 0 3 2<br/>
1 2 0 3<br/>
1 2 3 0<br/>
1 3 0 2<br/>
1 3 2 0<br/>
2 0 1 3<br/>
2 0 3 1<br/>
2 1 0 3<br/>
2 1 3 0<br/>
2 3 0 1<br/>
2 3 1 0<br/>
3 0 1 2<br/>
3 0 2 1<br/>
3 1 0 2<br/>
3 1 2 0<br/>
3 2 0 1<br/>
3 2 1 0<br/>
Press &lt;RETURN&gt; to close <b><a href="CppThis.htm">this</a></b> window...<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
