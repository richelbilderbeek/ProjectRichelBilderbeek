<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::find_if</title>
  <meta name="description" content="C++ std::find_if"/>
  <meta name="keywords" content="C++ std::find_if std find_if find if"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppFind_if.htm">std::find_if</a></h1>
<p>&nbsp;</p>
<p><a href="CppStl.htm">STL</a> <a href="CppAlgorithm.htm">algorithm</a> for searching an elements in a <a href="CppContainer.htm">container</a>, satisfying
a certain <a href="CppPredicate.htm">predicate</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="fileGYPqF7.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIteratorH.htm">iterator</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;::const_iterator <a href="CppIterator.htm">Iterator</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v;<br/>
&nbsp;&nbsp;v.push_back(-2);<br/>
&nbsp;&nbsp;v.push_back(-1);<br/>
&nbsp;&nbsp;v.push_back( 0);<br/>
&nbsp;&nbsp;v.push_back( 1);<br/>
&nbsp;&nbsp;v.push_back( 2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Find the first element in v that has an <a href="CppInt.htm">integer</a> value bigger then zero<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppIterator.htm">Iterator</a> result<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(), v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind2nd.htm">std::bind2nd</a>(<a href="CppGreater.htm">std::greater</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(), 0));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(result <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> v.end() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A result is found");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*result &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The result found is valid");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
