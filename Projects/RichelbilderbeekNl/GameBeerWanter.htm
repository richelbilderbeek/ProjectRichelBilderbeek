<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GameBeerWanter</title>
  <meta name="description" content="C++ GameBeerWanter"/>
  <meta name="keywords" content="C++ GameBeerWanter "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GameBeerWanter.htm">GameBeerWanter</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug  5 11:59:08 2014
 -->
<p><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/><img src="PicNds.png" alt="NDS"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicWindows.png" alt="Windows"/></p>
<p>&nbsp;</p>
<p><a href="GameBeerWanter.htm">BeerWanter</a> is a <a href="Games.htm">game</a> in which the player must click on the beer.</p>
<p>&nbsp;</p>
<p><a href="GameBeerWanter.htm">BeerWanter</a>, the successor of <a href="GameBeerWanterVcl.htm">BeerWanterVcl</a>, uses the cross-platform <a href="CppQt.htm">Qt</a> <a href="CppLibrary.htm">library</a>.
<p><a href="GameBeerWanterVcl.htm">BeerWanterVcl</a>, the predecessor of <a href="GameBeerWanter.htm">BeerWanter</a>, uses the Windows-only <a href="CppVcl.htm">VCL</a> <a href="CppLibrary.htm">library</a>.
<p>&nbsp;</p>
<p><a href="GameBeerWanter.htm">BeerWanter</a> can also be deployed as a <a href="CppWebApplication.htm">web application</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicSpacer.png" alt=" "/><img src="PicSpacer.png" alt=" "/>
    <a href="GameBeerWanter5.png">View a screenshot of 'BeerWanter' (version 5.0)(png)</a>
  </li>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicNds.png" alt="NDS"/><img src="PicSpacer.png" alt=" "/>
    <a href="GameBeerWanter_5_3.png">View a screenshot of 'BeerWanter' (version 5.3)</a>
  </li>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicWindows.png" alt="Windows"/><img src="PicSpacer.png" alt=" "/><img src="PicSpacer.png" alt=" "/> 
    <a href="GameBeerWanter5Exe.zip">Download the 'BeerWanter' Windows executable (version 5.0)(zip)</a>
  </li>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicNds.png" alt="NDS"/><img src="PicSpacer.png" alt=" "/><img src="PicSpacer.png" alt=" "/> 
    <a href="GameBeerWanterNds_5_3.zip">Download the 'BeerWanter' NDS executable (version 5.3)(zip)</a>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Older downloads</h2>
<p>&nbsp;</p>
<ul>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicNds.png" alt="NDS"/><img src="PicSpacer.png" alt=" "/>
    <a href="GameBeerWanter_5_1.png">View a screenshot of 'BeerWanter' under NDS (version 5.1)</a>
  </li>
  <li>
    <img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicSpacer.png" alt=" "/><img src="PicSpacer.png" alt=" "/>
    <a href="GameBeerWanter4.png">View a screenshot of 'BeerWanter' (version 4.0)</a>
  </li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameBeerWanter/GameBeerWanterConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterConsole.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">CppAbout</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">CppFileIo</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppHelp.htm">CppHelp</a>/<a href="CppHelp.htm">CppHelp</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>.pri)<br/>
include(../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameBeerWanter/GameBeerWanterDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>.pri)<br/>
<br/>
include(<a href="GameBeerWanter.htm">GameBeerWanter</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameBeerWanter/GameBeerWanterNds.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterNds.pro" border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by <a href="CppQtCreator.htm">QtCreator</a> 2010-07-22T22:43:13<br/>
#<br/>
#-------------------------------------------------<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>Nds.cpp<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;picbeer.h<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>+=ARM9<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += /opt/devkitpro/libnds-1.4.7/include<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += /opt/devkitpro/libnds-src-1.4.7/include/nds<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += /opt/devkitpro/devkitARM/arm-eabi/include<br/>
<a href="CppQmakeLibs.htm">LIBS</a> += -L/opt/devkitpro/libnds-1.4.7/lib -lnds9<br/>
<a href="CppQmakeLibs.htm">LIBS</a> += -L/opt/devkitpro/devkitARM/arm-eabi/lib -lstdc++<br/>
<a href="CppQmakeDefines.htm">DEFINES</a> += ARM9<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= qt<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
QMAKE_CC = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
QMAKE_CXX = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
QMAKE_LINK = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
QMAKE_LFLAGS = -T/opt/devkitpro/devkitARM/arm-eabi/lib/ds_arm9.ld<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./GameBeerWanter/GameBeerWanterWebsite.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterWebsite.pro" border = "1"><tr><td><code>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>All.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Wt.pri)<br/>
include(../../WebApplication.pri)<br/>
<br/>
#General<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">CppAbout</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">CppFileIo</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppHelp.htm">CppHelp</a>/<a href="CppHelp.htm">CppHelp</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
<br/>
#Website general<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppWtAboutDialog.htm">CppWtAboutDialog</a>/<a href="CppWtAboutDialog.htm">CppWtAboutDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppWtAutoConfig.htm">CppWtAutoConfig</a>/<a href="CppWtAutoConfig.htm">CppWtAutoConfig</a>.pri)<br/>
<br/>
#Specific<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppCanvas.htm">CppCanvas</a>/<a href="CppCanvas.htm">CppCanvas</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>/<a href="CppImageCanvas.htm">CppImageCanvas</a>.pri)<br/>
<br/>
include(../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>Website.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += wt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/GameBeerWanterConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">beerwanter</a><a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">beerwanter</a>menudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">beerwanter</a><a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>.qrc<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/GameBeerWanterDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppMain.htm">main</a>dialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppMain.htm">main</a>dialog.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppMain.htm">main</a>dialog.ui<br/>
<br/>
# Moved to <a href="GameBeerWanter.htm">GameBeerWanter</a>Console<br/>
#<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/GameBeerWanterWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/wt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Games.htm">Games</a>/<a href="GameBeerWanter.htm">GameBeerWanter</a>/wt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/beerwantermaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/beerwantermaindialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> BEERWANTERMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> BEERWANTERMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog contains the logic behind the game <a href="GameBeerWanter.htm">BeerWanter</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> screen_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> screen_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> sprite_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> sprite_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> window_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> window_height);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Click is called when the user presses a key. The <b><a href="CppBool.htm">bool</a></b> <b><a href="CppReturn.htm">return</a></b>ed<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/indicates whether the user successfully clicked on a beer<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> Click();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> ClickWilBeSuccess() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetCursorX() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_cursor_x; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetCursorY() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_cursor_y; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetLevel() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_level; }<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> GetResourceFilename() <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> ":/<a href="GameBeerWanter.htm">GameBeerWanter</a>/images/PicBeer.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSpriteX() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_sprite_x; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSpriteY() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_sprite_y; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSpriteHeight() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_sprite_height; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSpriteWidth()&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_sprite_width ; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetWindowHeight() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_window_height; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetWindowTitle() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetWindowWidth()&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_window_width ; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetWindowX() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_window_x; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetWindowY() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_window_y; }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetArenaSize(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCursorPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetSpriteSize(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/ShakeCursor shakes the cursor<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ShakeCursor();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/ShakeWindow shakes the window (on desktop computer only)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ShakeWindow();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Tick();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_cursor_x;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_cursor_y;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_level;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_screen_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_screen_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_sprite_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_sprite_width;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_sprite_x;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_sprite_y;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_window_height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_window_width;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_window_x;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_window_y;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetRandomCursorShake() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetRandomWindowShake() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> BEERWANTERMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/beerwantermaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/beerwantermaindialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> screen_width,<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> screen_height,<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> sprite_width,<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> sprite_height,<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> window_width,<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> window_height)<br/>
&nbsp;&nbsp;:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cursor_x{window_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cursor_y{window_height <a href="CppOperatorDivide.htm">/</a> 2},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_level{1},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_screen_height(screen_height),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_screen_width(screen_width),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_height(sprite_height),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_width(sprite_width),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_x{(window_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (sprite_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_y{(window_height <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (sprite_height <a href="CppOperatorDivide.htm">/</a> 2)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_window_height(window_height),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_window_width(window_width),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_window_x{(screen_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (window_width&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2)},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_window_y{(screen_height <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (window_height <a href="CppOperatorDivide.htm">/</a> 2)}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ClickWilBeSuccess() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (m_cursor_x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> m_sprite_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (m_cursor_x <a href="CppOperatorLessEqual.htm">&lt;=</a> m_sprite_x <a href="CppOperatorPlus.htm">+</a> m_sprite_width)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (m_cursor_y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> m_sprite_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (m_cursor_y <a href="CppOperatorLessEqual.htm">&lt;=</a> m_sprite_y <a href="CppOperatorPlus.htm">+</a> m_sprite_height));<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Click()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ClickWilBeSuccess())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Clicked the sprite<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move the sprite to a <b><a href="CppNew.htm">new</a></b> random position<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (m_window_width&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> m_sprite_width );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite_y <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (m_window_height <a href="CppOperatorMinus.htm">-</a> m_sprite_height);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_level;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetRandomCursorShake() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (2*((m_level-1)/2)+1))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> ((m_level-1)/2);<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetRandomWindowShake() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> (2*((m_level-1)/4)+1))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> ((m_level-1)/4);<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetWindowTitle() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">BeerWanter</a> (C) 2005-2014 Richel Bilderbeek. Beer already got: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(m_level <a href="CppOperatorMinus.htm">-</a> 1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::SetCursorPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;m_cursor_x <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;m_cursor_y <a href="CppOperatorAssign.htm">=</a> y;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ShakeCursor()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "ShakeCursor: ("<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_cursor_x<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ","<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_cursor_y<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ") <a href="CppOperatorMinus.htm">-</a>&gt; (";<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Note that cursor is allowed to leave the window :-)<br/>
&nbsp;&nbsp;m_cursor_x <a href="CppOperatorPlusAssign.htm">+=</a> GetRandomCursorShake();<br/>
&nbsp;&nbsp;m_cursor_y <a href="CppOperatorPlusAssign.htm">+=</a> GetRandomCursorShake();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_cursor_x<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ","<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> m_cursor_y<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")\n";<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ShakeWindow()<br/>
{<br/>
&nbsp;&nbsp;m_window_x <a href="CppOperatorPlusAssign.htm">+=</a> GetRandomWindowShake();<br/>
&nbsp;&nbsp;m_window_y <a href="CppOperatorPlusAssign.htm">+=</a> GetRandomWindowShake();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_width <a href="CppOperatorAssign.htm">=</a> 640;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_height <a href="CppOperatorAssign.htm">=</a> 400;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width <a href="CppOperatorAssign.htm">=</a> 32;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> 48;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_width <a href="CppOperatorAssign.htm">=</a> 320;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_height <a href="CppOperatorAssign.htm">=</a> 200;<br/>
<br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;screen_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;screen_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sprite_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sprite_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;window_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;window_height<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/beerwantermenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/beerwantermenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> BEERWANTERMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> BEERWANTERMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog <b><a href="CppFinal.htm">final</a></b> : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> BEERWANTERMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/beerwantermenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/beerwantermenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "imagecanvas.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display a beer<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (<a href="CppArgc.htm">argv</a>[1] <a href="CppOperatorEqual.htm">==</a> "-s" <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppArgc.htm">argv</a>[1] <a href="CppOperatorEqual.htm">==</a> "<a href="CppOperatorDecrement.htm">--</a>show"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename { <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().GetTempFileName(".png") };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qfile(<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetResourceFilename().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="GameBeerWanter.htm">BeerWanter</a> resource must exist");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> 78;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Image<a href="CppCanvas.htm">Canvas</a>&gt; canvas {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Image<a href="CppCanvas.htm">Canvas</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n_cols<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppDeleteFile.htm">DeleteFile</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*canvas) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetAbout().GetFileTitle() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " cannot be run in console mode\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="GameBeerWanter.htm">BeerWanter</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"a simple game",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 16th of January 2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2005-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppCanvas.htm">Canvas</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppCanvas.htm">Canvas</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Image<a href="CppCanvas.htm">Canvas</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Image<a href="CppCanvas.htm">Canvas</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Help::Option('s',"show","show a beer")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAbout().GetFileTitle() <a href="CppOperatorPlus.htm">+</a> " <a href="CppOperatorDecrement.htm">--</a>show"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "7.2";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2005-11-16: <a href="CppVersion.htm">version</a> 1.0: (at that <a href="CppTime.htm">time</a> called) 'Beerwanter 1' was programmed in C<a href="CppOperatorIncrement.htm">++</a> <b><a href="CppUsing.htm">using</a></b> the <a href="CppBuilder.htm">C++ Builder</a> IDE during a 'Spass programmieren' session, which made <a href="GameBeerWanter.htm">BeerWanter</a> a game <b><a href="CppFor.htm">for</a></b> <a href="CppWindows.htm">Windows</a> users only",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2005-11-18: <a href="CppVersion.htm">version</a> 2.0: (at that <a href="CppTime.htm">time</a> called) 'Beerwanter 2' was programmed after the success of <a href="GameBeerWanter.htm">BeerWanter</a> 1.0. The game was made tougher",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2005-11-22: <a href="CppVersion.htm">version</a> 3.0: (at that <a href="CppTime.htm">time</a> called) 'Beerwanter 3' was programmed after the success of <a href="GameBeerWanter.htm">BeerWanter</a> 2.0. The game was made even tougher",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-06-23: <a href="CppVersion.htm">version</a> 4.0: port code to <a href="CppQtCreator.htm">Qt Creator</a>, <a href="GameBeerWanter.htm">BeerWanter</a> is now cross-platform. The game its name is changed back to '<a href="GameBeerWanter.htm">BeerWanter</a>'",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-06-24: <a href="CppVersion.htm">version</a> 5.0: improved the GUI, changed the beer sprite to an adaptation of my favorite beer",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-10-10: <a href="CppVersion.htm">version</a> 5.1: (temporary <a href="CppNds.htm">NDS</a>-only <a href="CppFork.htm">fork</a>) start of port to <a href="CppNds.htm">NDS</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-10-11: <a href="CppVersion.htm">version</a> 5.2: <a href="GameBeerWanter.htm">BeerWanter</a> is one project again and build <b><a href="CppFor.htm">for</a></b> <a href="CppNds.htm">NDS</a>, <a href="CppUbuntu.htm">Ubuntu</a> and <a href="CppWindows.htm">Windows</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-12-19: <a href="CppVersion.htm">version</a> 6.0: seperated project files <b><a href="CppFor.htm">for</a></b> <a href="CppNds.htm">NDS</a>, <a href="CppUbuntu.htm">Ubuntu</a> and <a href="CppWindows.htm">Windows</a> development. Preparation <b><a href="CppFor.htm">for</a></b> seperating game logic from GUI",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-12-23: <a href="CppVersion.htm">version</a> 6.1: added ClickWilBeSuccess <a href="CppMemberFunction.htm">member function</a>, fixed <a href="CppBug.htm">bug</a> in <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ShakeWindow",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-03-06: <a href="CppVersion.htm">version</a> 7.0: added menu, conformized project architecture <b><a href="CppFor.htm">for</a></b> <a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-07-13: <a href="CppVersion.htm">version</a> 7.1: added <a href="CppLibcvautomation.htm">libcvautomation</a> script to beat the game, improved desktop menu and <a href="CppAbout.htm">about</a> screen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-01-16: <a href="CppVersion.htm">version</a> 7.2: added command line command 'show'"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Main dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_width <a href="CppOperatorAssign.htm">=</a> 640;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_height <a href="CppOperatorAssign.htm">=</a> 400;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width <a href="CppOperatorAssign.htm">=</a> 32;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> 48;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_width <a href="CppOperatorAssign.htm">=</a> 320;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_height <a href="CppOperatorAssign.htm">=</a> 200;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screen_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screen_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprite_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprite_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Resources<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> filename { <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().GetTempFileName(".png") };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qfile(<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetResourceFilename().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="GameBeerWanter.htm">BeerWanter</a> resource must exist");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppDeleteFile.htm">DeleteFile</a>(filename);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; args { <a href="CppRibi.htm">ribi</a>::MenuDialog::<a href="CppConvert.htm">Convert</a>Arguments(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>) };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog().Execute(args);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/myassert.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/myassert.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> MYASSERT_H<br/>
<a href="CppDefine.htm">#define</a> MYASSERT_H<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppQt.htm">Qt</a><a href="CppAssert.htm">Assert</a>.htm<br/>
<a href="CppIfdef.htm">#ifdef</a> MY_<a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppDefine.htm">#define</a> <a href="CppAssert.htm">Assert</a>(x) ((<b><a href="CppVoid.htm">void</a></b>)0)<br/>
<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
&nbsp;&nbsp;<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
&nbsp;&nbsp;<a href="CppDefine.htm">#define</a> <a href="CppAssert.htm">Assert</a>(x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!(x))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "ERROR!! <a href="CppAssert.htm">Assert</a>ion "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a>&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> (#x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a>&nbsp;&nbsp;" failed\n on line "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a>&nbsp;&nbsp;(__LINE__)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a>&nbsp;&nbsp;"\n in file "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a>&nbsp;&nbsp;__<a href="CppCfile.htm">FILE</a>__&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppAssert.htm">Assert</a>ion failed");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br/>
&nbsp;&nbsp;}<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> MYASSERT_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/ndsmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/ndsmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
&nbsp;&nbsp;Copyright (C) 2005-2010 Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From hhtp:<a href="CppComment.htm">//</a>www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;nds.h&gt;<br/>
<a href="CppInclude.htm">#include</a> "picbeer.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppInitialize.htm">Initialization</a>, thanks to http://dev-scene.com/<a href="CppNds.htm">NDS</a>/Tutorials_Day_3<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppPointer.htm">point</a> our video buffer to the start of bitmap background video<br/>
&nbsp;&nbsp;u16 * <b><a href="CppConst.htm">const</a></b> video_buffer_main <a href="CppOperatorAssign.htm">=</a> BG_BMP_RAM(0);<br/>
&nbsp;&nbsp;u16 * <b><a href="CppConst.htm">const</a></b> video_buffer_sub&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> BG_BMP_RAM_SUB(0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>set video mode to mode 5 with background 3 enabled<br/>
&nbsp;&nbsp;videoSetMode(&nbsp;&nbsp; MODE_5_2D | DISPLAY_BG3_ACTIVE);<br/>
&nbsp;&nbsp;videoSetModeSub(MODE_5_2D | DISPLAY_BG3_ACTIVE);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>map vram a to start of <a href="CppMain.htm">main</a> background graphics <a href="CppMemory.htm">memory</a><br/>
&nbsp;&nbsp;vramSetBankA(VRAM_A_MAIN_BG_0x06000000);<br/>
&nbsp;&nbsp;vramSetBankC(VRAM_C_SUB_BG_0x06200000);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppInitialize.htm">initialize</a> the background<br/>
&nbsp;&nbsp;BACKGROUND.control[3] <a href="CppOperatorAssign.htm">=</a> BG_BMP16_256x256 | BG_BMP_BASE(0);<br/>
&nbsp;&nbsp;BACKGROUND.bg3_rotation.hdy <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;BACKGROUND.bg3_rotation.hdx <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 8;<br/>
&nbsp;&nbsp;BACKGROUND.bg3_rotation.vdx <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;BACKGROUND.bg3_rotation.vdy <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 8;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppInitialize.htm">initialize</a> the sub background<br/>
&nbsp;&nbsp;BACKGROUND_SUB.control[3] <a href="CppOperatorAssign.htm">=</a> BG_BMP16_256x256 | BG_BMP_BASE(0);<br/>
&nbsp;&nbsp;BACKGROUND_SUB.bg3_rotation.hdy <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;BACKGROUND_SUB.bg3_rotation.hdx <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 8;<br/>
&nbsp;&nbsp;BACKGROUND_SUB.bg3_rotation.vdx <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;BACKGROUND_SUB.bg3_rotation.vdy <a href="CppOperatorAssign.htm">=</a> 1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 8;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> SCREEN_WIDTH;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> SCREEN_HEIGHT;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> PicBeer pic <a href="CppOperatorAssign.htm">=</a> PicBeer();<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> (maxx <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (pic.GetWidth()&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> (maxy <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (pic.GetHeight() <a href="CppOperatorDivide.htm">/</a> 2);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>swiWaitForVBlank();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pic.Draw(video_buffer_main,x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pic.Draw(video_buffer_sub,x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Respond to keys<br/>
&nbsp;&nbsp;&nbsp;&nbsp;scanKeys();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> held <a href="CppOperatorAssign.htm">=</a> keysHeld();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_RIGHT) { <b><a href="CppIf.htm">if</a></b> (x <a href="CppOperatorPlus.htm">+</a> 1 <a href="CppOperatorPlus.htm">+</a> pic.GetWidth() &lt; maxx) <a href="CppOperatorIncrement.htm">++</a>x; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_LEFT) { <a href="CppOperatorDecrement.htm">--</a>x; <b><a href="CppIf.htm">if</a></b> (x&lt;0) x=0; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_DOWN) { <b><a href="CppIf.htm">if</a></b> (y <a href="CppOperatorPlus.htm">+</a> 1 <a href="CppOperatorPlus.htm">+</a> pic.GetHeight() &lt; maxy) <a href="CppOperatorIncrement.htm">++</a>y; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_UP) { <a href="CppOperatorDecrement.htm">--</a>y; <b><a href="CppIf.htm">if</a></b> (y&lt;0) y=0; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_A) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_B) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_L) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (held &amp; KEY_R) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;systemShutDown();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/picbeer.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/picbeer.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PICBEER_H<br/>
<a href="CppDefine.htm">#define</a> PICBEER_H<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> ARM9<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;nds.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>Code generated by <a href="ToolPicToCode.htm">PicToCode</a><br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolPicToCode.htm">ToolPicToCode</a>.htm<br/>
<b><a href="CppStruct.htm">struct</a></b> PicBeer<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Draw(u16 * <b><a href="CppConst.htm">const</a></b> buffer,<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppConst.htm">const</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> 256;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> 192;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+0)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+1)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+2)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+3)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+4)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+5)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+6)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+7)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+8)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+9)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+10)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+11)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+12)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+13)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+14)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+15)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+16)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+17)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+18)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+19)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+20)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+21)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+22)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+23)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+24)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+25)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+26)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+27)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+28)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+29)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+30)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+31)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+32)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+33)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+34)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+35)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+36)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+37)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+38)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+39)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,22,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+40)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,13,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+41)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,11,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+42)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+43)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+44)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,7,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,13,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+45)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,25,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,28,27) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+46)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,25,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,24,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+47)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+48)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,26,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,22,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+49)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+50)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,6,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,9,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(4,6,3) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+51)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,26,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+52)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,25,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,23,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,6,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+53)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,23,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,5,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(4,6,3) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,6,3) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+54)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,26,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,27,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+55)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,29,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,23,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,6,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,6,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(5,6,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(4,5,3) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+56)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,29,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,22,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,23,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,7,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(6,8,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,15,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+57)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,24,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,25,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,4) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+58)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,23,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,7,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,15,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,11,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,28,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+59)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,15,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+60)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+61)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,10,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,5,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,13,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,15,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,15,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,15,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,11,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,12,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,11,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,11,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,13,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+62)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,13,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,12,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,26,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,9,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,11,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,27) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,12,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,11,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,27,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+63)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,20,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,18,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,26,25) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,13,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,25,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,28,28) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,10,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,29,28) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,26) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+64)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,22) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,15,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,26,26) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,12,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,12,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,28,28) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,28,28) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,24,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,20,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,5,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+65)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,21,21) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,10,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,10,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,9,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,23) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,28,27) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,11,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,27) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,10,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,5,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+66)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,13,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,9,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,6,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,5,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,5,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,6,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,8,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,7,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,4,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,5,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,5,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,10,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,6,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,6,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,10,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,12,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,13,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+67)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,14,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,8,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,9,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,12,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,15,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,14,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,11,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,7,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,14,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+68)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,13,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(30,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,16,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+69)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,13,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+70)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,14,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,14,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+71)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,25,18) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+72)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,21,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,22,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,18,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,12,9) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,25,24) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,8,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(14,14,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+73)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,11,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,10,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,10,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(7,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(17,16,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,26,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+74)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,20,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(10,11,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,14,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,21,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,20,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,17,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,6) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,5) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,22,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,22,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+75)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,21,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(18,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,15,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,12) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(11,12,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(9,10,8) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(15,16,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(8,9,7) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(12,12,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(13,13,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(24,21,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+76)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(26,23,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,20,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,19,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(19,17,14) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,19,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,20,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(22,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(29,27,19) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+77)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(28,25,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,22,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,18,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(20,17,11) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(21,17,10) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(23,19,13) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(25,21,15) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(27,24,17) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+78)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+79)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+80)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+81)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+82)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+83)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+84)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+85)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+86)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+87)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+88)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+89)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+90)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+91)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+92)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+93)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+94)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+95)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+96)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+97)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+98)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+99)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+100)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(31,29,20) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+101)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(16,16,16) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+102)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+0)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+1)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+2)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+3)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+4)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+5)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+6)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+7)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+8)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+9)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+10)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+11)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+12)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+13)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+14)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+15)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+16)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+17)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+18)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+19)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+20)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+21)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+22)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+23)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+24)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+25)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+26)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+27)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+28)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+29)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+30)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+31)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+32)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+33)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+34)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+35)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+36)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+37)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+38)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+39)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;buffer[((y+103)*maxx)+(x+40)] <a href="CppOperatorAssign.htm">=</a> RGB15(0,0,0) | BIT(15);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetWidth() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> 41; }<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetHeight() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> 104; }<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> ARM9<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PICBEER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwantermaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwantermaindialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTBEERWANTERMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTBEERWANTERMAINDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ChangeTitle(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; title) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnShake(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTBEERWANTERMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwantermaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwantermaindialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;<a href="GameBeerWanter.htm">beerwanter</a>_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="GameBeerWanter.htm">BeerWanter</a>()-&gt;GetWindowX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="GameBeerWanter.htm">BeerWanter</a>()-&gt;GetWindowY(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="GameBeerWanter.htm">BeerWanter</a>()-&gt;GetWindowWidth(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Get<a href="GameBeerWanter.htm">BeerWanter</a>()-&gt;GetWindowHeight()<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>.get(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::LevelUp,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ChangeTitle<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>.get(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::DoShake,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::OnShake<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::~<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::ChangeTitle(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; title) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle(title.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::OnShake(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(x,y,<b><a href="CppThis.htm">this</a></b>-&gt;width(),<b><a href="CppThis.htm">this</a></b>-&gt;height());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_width <a href="CppOperatorAssign.htm">=</a> 640;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> screen_height <a href="CppOperatorAssign.htm">=</a> 400;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_width <a href="CppOperatorAssign.htm">=</a> 32;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_height <a href="CppOperatorAssign.htm">=</a> 48;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_width <a href="CppOperatorAssign.htm">=</a> 320;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> window_height <a href="CppOperatorAssign.htm">=</a> 200;<br/>
<br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;screen_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;screen_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sprite_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;sprite_height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;window_width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;window_height<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwantermenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwantermenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTBEERWANTERMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTBEERWANTERMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTBEERWANTERMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwantermenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwantermenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::~<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::on_button_start_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a <a href="CppOperatorAssign.htm">=</a> <a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(a);<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;d.setWindowIcon(<b><a href="CppThis.htm">this</a></b>-&gt;windowIcon());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::on_button_quit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MainDialog();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwanterwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwanterwidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTBEERWANTERWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTBEERWANTERWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppTupleH.htm">tuple</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQMouseEvent.htm">QMouseEvent</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQPixmap.htm">QPixmap</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQWidget.htm">QWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog * Get<a href="GameBeerWanter.htm">BeerWanter</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppStdTuple.htm">std::tuple</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt; m_background_rgb;<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_<a href="CppDebug.htm">debug</a>_text;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog&gt; m_dialog;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQPixmap.htm">QPixmap</a>&gt; m_sprite;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQTimer.htm">QTimer</a>&gt; m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Modify the color value, keep it in <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> range<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Modify(<b><a href="CppInt.htm">int</a></b>&amp; color);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on<a href="CppTime.htm">Time</a>r();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *);<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoShake(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> LevelUp(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp;);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppPaint.htm">Paint</a>.htm<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> My<a href="CppPaint.htm">Paint</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a>&amp; pixmap,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> g,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> b,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> a <a href="CppOperatorAssign.htm">=</a> 255); <a href="CppComment.htm">//</a>Opaque<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTBEERWANTERWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtbeerwanterwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtbeerwanterwidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQImage.htm">QImage</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQWidget.htm">QWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_background_rgb(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::make_<a href="CppTuple.htm">tuple</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0xff <a href="CppOperatorPlus.htm">+</a> 0xff)/2, <a href="CppComment.htm">//</a>Average redness in stylesheet of menu<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0xff <a href="CppOperatorPlus.htm">+</a> 0xc5)/2, <a href="CppComment.htm">//</a>Average greenness in stylesheet of menu<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0x00 <a href="CppOperatorPlus.htm">+</a> 0x00)/2&nbsp;&nbsp;<a href="CppComment.htm">//</a>Average blueness in stylesheet of menu<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sprite(<b><a href="CppNew.htm">new</a></b> <a href="CppQPixmap.htm">QPixmap</a>(<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog::GetResourceFilename().c_str())),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_sprite.get()-&gt;isNull());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMouseTracking(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;m_dialog.reset(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;width(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;height(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sprite-&gt;width(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sprite-&gt;height(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;520,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;520));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Ensure the window does not get resized<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFixedHeight(m_dialog-&gt;GetWindowHeight());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFixedWidth(m_dialog-&gt;GetWindowWidth());<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r.get(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::on<a href="CppTime.htm">Time</a>r<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start(20); <a href="CppComment.htm">//</a>Framerate <a href="CppAbout.htm">about</a> (1000/20=) 50 fps<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog * <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::Get<a href="GameBeerWanter.htm">BeerWanter</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_dialog.get();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> event-&gt;x();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> event-&gt;y();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefine.htm">#define</a> DEBUG_SHOW_MOUSE_POSITION<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_POSITION<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "MOVE: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;ClickWilBeSuccess())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text <a href="CppOperatorPlusAssign.htm">+=</a> "-&gt; CLICK WILL BE SUCCESS";<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_x <a href="CppOperatorAssign.htm">=</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_y <a href="CppOperatorAssign.htm">=</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_maxx <a href="CppOperatorAssign.htm">=</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteX() <a href="CppOperatorPlus.htm">+</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteWidth();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_maxy <a href="CppOperatorAssign.htm">=</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteY() <a href="CppOperatorPlus.htm">+</a> m_<a href="GameBeerWanter.htm">beerwanter</a>-&gt;GetSpriteHeight();<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text <a href="CppOperatorPlusAssign.htm">+=</a> ", Sprite: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")-("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_maxx)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_maxy)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(event-&gt;type() <a href="CppOperatorEqual.htm">==</a> ::<a href="CppQMouseEvent.htm">QMouseEvent</a>::MouseMove);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(event);<br/>
&nbsp;&nbsp;m_dialog-&gt;SetCursorPos(mouse_x,mouse_y);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefine.htm">#define</a> DEBUG_SHOW_MOUSE_CLICK_POSITION<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_CLICK_POSITION<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> event-&gt;x();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> event-&gt;y();<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "CLICK: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_dialog-&gt;Click())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Inform user of level-up<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppEmit.htm">emit</a></b> LevelUp(m_dialog-&gt;GetWindowTitle());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::on<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;m_dialog-&gt;ShakeCursor();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetCursorX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetCursorY();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefine.htm">#define</a> DEBUG_SHOW_MOUSE_TIMER_POSITION<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_TIMER_POSITION<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "ONTIMER: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPoint.htm">QPoint</a> base_pos <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;mapToGlobal(<a href="CppQPoint.htm">QPoint</a>(0,0));<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_TIMER_POSITION<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlusAssign.htm">+=</a> "-&gt; ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(base_pos.x())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(base_pos.y())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;cursor().setPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;base_pos.x() <a href="CppOperatorPlus.htm">+</a> mouse_x,base_pos.y() <a href="CppOperatorPlus.htm">+</a> mouse_y);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move window<br/>
&nbsp;&nbsp;m_dialog-&gt;ShakeWindow();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a> cannot shake itself<br/>
&nbsp;&nbsp;<b><a href="CppEmit.htm">emit</a></b> DoShake(m_dialog-&gt;GetWindowX(),m_dialog-&gt;GetWindowY());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;Modify(<a href="CppStdGet.htm">std::get</a>&lt;0&gt;(m_background_rgb));<br/>
&nbsp;&nbsp;Modify(<a href="CppStdGet.htm">std::get</a>&lt;1&gt;(m_background_rgb));<br/>
&nbsp;&nbsp;Modify(<a href="CppStdGet.htm">std::get</a>&lt;2&gt;(m_background_rgb));<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a> p(<b><a href="CppThis.htm">this</a></b>-&gt;width(),<b><a href="CppThis.htm">this</a></b>-&gt;height());<br/>
&nbsp;&nbsp;My<a href="CppPaint.htm">Paint</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;p,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdGet.htm">std::get</a>&lt;0&gt;(m_background_rgb),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdGet.htm">std::get</a>&lt;1&gt;(m_background_rgb),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdGet.htm">std::get</a>&lt;2&gt;(m_background_rgb)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;painter.drawPixmap(0,0,p);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefine.htm">#define</a> DEBUG_SHOW_BEERWANTER_INFO<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_BEERWANTER_INFO<br/>
&nbsp;&nbsp;painter.drawText(<a href="CppQRect.htm">QRect</a>F(0.0,0.0,<b><a href="CppThis.htm">this</a></b>-&gt;width(),<b><a href="CppThis.htm">this</a></b>-&gt;height()),m_<a href="CppDebug.htm">debug</a>_text.c_str());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_sprite);<br/>
&nbsp;&nbsp;painter.drawPixmap(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteY(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*m_sprite.get());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::Modify(<b><a href="CppInt.htm">int</a></b>&amp; color)<br/>
{<br/>
&nbsp;&nbsp;color <a href="CppOperatorPlusAssign.htm">+=</a> ((<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (color &gt; 255) color <a href="CppOperatorAssign.htm">=</a> 255;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (color &lt; 0) color <a href="CppOperatorAssign.htm">=</a> 0;<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppPaint.htm">Paint</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::My<a href="CppPaint.htm">Paint</a>(<br/>
&nbsp;&nbsp;<a href="CppQPixmap.htm">QPixmap</a>&amp; pixmap,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> g,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> b,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> a) <a href="CppComment.htm">//</a>Opaque<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width <a href="CppOperatorAssign.htm">=</a> pixmap.width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> pixmap.height();<br/>
<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image <a href="CppOperatorAssign.htm">=</a> pixmap.toImage();<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image.bytesPerLine() <a href="CppOperatorDivide.htm">/</a> width <a href="CppOperatorEqual.htm">==</a> 4<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Assume there are 4 bytes per pixel");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>height; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> line<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *&gt;(image.scanLine(y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>width; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*4+3] <a href="CppOperatorAssign.htm">=</a> a; <a href="CppComment.htm">//</a>Alpha value<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*4+2] <a href="CppOperatorAssign.htm">=</a> r; <a href="CppComment.htm">//</a>Red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*4+1] <a href="CppOperatorAssign.htm">=</a> g; <a href="CppComment.htm">//</a>Green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[x*4+0] <a href="CppOperatorAssign.htm">=</a> b; <a href="CppComment.htm">//</a>Blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;pixmap <a href="CppOperatorAssign.htm">=</a> pixmap.fromImage(image);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="GameBeerWanter.htm">beerwanter</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="GameBeerWanter.htm">BeerWanter</a>MenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/wtbeerwanterwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/wtbeerwanterwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> WTBEERWANTERWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> WTBEERWANTERWIDGET_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.htm">WContainerWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintedWidget.htm">WPaintedWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.htm">WPainter</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWPaintDevice.htm">WPaintDevice</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWPaintedWidget.htm">WPaintedWidget</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWPainter.htm">WPainter</a>;<br/>
};<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWPaintedWidget.htm">Wt::WPaintedWidget</a><br/>
{<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWContainerWidget.htm">Wt::WContainerWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>() {}<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp; <b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> *paintDevice);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_<a href="CppDebug.htm">debug</a>_text;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="GameBeerWanter.htm">BeerWanter</a>MainDialog&gt; m_dialog;<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a>::Image * m_image;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClick(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnMouseMove(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTBEERWANTERWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/wtbeerwanterwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/wtbeerwanterwidget.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "wt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWBreak.htm">WBreak</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.htm">WContainerWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWFileResource.htm">WFileResource</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWImage.htm">WImage</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLineEdit.htm">WLineEdit</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.htm">WPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPushButton.htm">WPushButton</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWResource.htm">WResource</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWText.htm">WText</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTextArea.htm">WTextArea</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="GameBeerWanter.htm">beerwanter</a>maindialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<a href="CppWContainerWidget.htm">Wt::WContainerWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppWPaintedWidget.htm">Wt::WPaintedWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog(<b><a href="CppNew.htm">new</a></b> <a href="GameBeerWanter.htm">BeerWanter</a>MainDialog(600,500,39,102,600,500)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_image(<b><a href="CppNew.htm">new</a></b> <a href="CppWPainter.htm">Wt::WPainter</a>::Image("Beer.png",39,102))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_image);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;resize(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetWindowWidth(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetWindowHeight());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;mouseMoved().connect(<b><a href="CppThis.htm">this</a></b>, &amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::OnMouseMove);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;mouseWentDown().connect(<b><a href="CppThis.htm">this</a></b>, &amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::OnClick);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::OnClick(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; <a href="CppComment.htm">/*</a> e <a href="CppComment.htm">*/</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>No need to use 'e', because OnMouseMove updates the m_dialog its coordinats<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_CLICK_POSITION<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().y;<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "CLICK: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;m_dialog-&gt;Click();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::OnMouseMove(<b><a href="CppConst.htm">const</a></b> <a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&amp; e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_x <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> mouse_y <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.htm">widget</a>().y;<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_MOUSE_POSITION<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "MOVE: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(mouse_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_dialog-&gt;ClickWilBeSuccess())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text <a href="CppOperatorPlusAssign.htm">+=</a> "-&gt; CLICK WILL BE SUCCESS";<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_x <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetSpriteX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_y <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetSpriteX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_maxx <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetSpriteX() <a href="CppOperatorPlus.htm">+</a> m_dialog-&gt;GetSpriteWidth();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sprite_maxy <a href="CppOperatorAssign.htm">=</a> m_dialog-&gt;GetSpriteY() <a href="CppOperatorPlus.htm">+</a> m_dialog-&gt;GetSpriteHeight();<br/>
&nbsp;&nbsp;m_<a href="CppDebug.htm">debug</a>_text <a href="CppOperatorPlusAssign.htm">+=</a> ", Sprite: ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")-("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_maxx)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(sprite_maxy)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;m_dialog-&gt;SetCursorPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mouse_x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mouse_y);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>::paintEvent(<a href="CppWPaintDevice.htm">Wt::WPaintDevice</a> *paintDevice)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPainter.htm">Wt::WPainter</a> painter(paintDevice);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the current level<br/>
&nbsp;&nbsp;painter.drawText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0,0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetWindowWidth(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetWindowHeight(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWt.htm">Wt</a>::AlignCenter | <a href="CppWt.htm">Wt</a>::AlignMiddle,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(m_dialog-&gt;GetLevel()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the sprite<br/>
&nbsp;&nbsp;painter.drawImage(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog-&gt;GetSpriteY(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*m_image);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppDefine.htm">#define</a> DEBUG_SHOW_GRID<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> DEBUG_SHOW_GRID<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0; x<a href="CppOperatorNotEqual.htm">!=</a> 600; x<a href="CppOperatorPlusAssign.htm">+=</a>100)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawLine(x,0,x,600);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0; y<a href="CppOperatorNotEqual.htm">!=</a> 600; y<a href="CppOperatorPlusAssign.htm">+=</a>100)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.drawLine(0,y,600,y);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/wtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/wtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="GameBeerWanter.htm">BeerWanter</a>. A simple game.<br/>
Copyright (C) 2005-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From hhtp:<a href="CppComment.htm">//</a>www.richelbilderbeek.nl/<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWApplication.htm">WApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.htm">WContainerWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWtAutoConfig.htm">wtautoconfig</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "wt<a href="GameBeerWanter.htm">beerwanter</a><a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWApplication.htm">Wt::WApplication</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWEnvironment.htm">Wt::WEnvironment</a>&amp; env)<br/>
&nbsp;&nbsp;: <a href="CppWApplication.htm">Wt::WApplication</a>(env),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setTitle("<a href="GameBeerWanter.htm">BeerWanter</a>");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;root()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnLevelUp();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppWApplication.htm">Wt::WApplication</a> * create<a href="CppApplication.htm">Application</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWEnvironment.htm">Wt::WEnvironment</a>&amp; env)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWt.htm">Wt</a><a href="GameBeerWanter.htm">BeerWanter</a><a href="CppApplication.htm">Application</a>(env);<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> **<a href="CppArgc.htm">argv</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtAutoConfig.htm">WtAutoConfig</a> a(<a href="CppArgc.htm">argc</a>,<a href="CppArgc.htm">argv</a>,create<a href="CppApplication.htm">Application</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtAutoConfig.htm">WtAutoConfig</a>::SaveDefaultStylesheet();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.Run();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> WRun(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>, &amp;create<a href="CppApplication.htm">Application</a>);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./GameBeerWanter/GameBeerWanterTest.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./GameBeerWanter/GameBeerWanterTest.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
#Start the testing program in the background<br/>
./../build-GameBeerWanterDesktop-Desktop-Debug/BeerWanterDesktop &amp;<br/>
<br/>
#Wait for the application to appear<br/>
sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "wait_for PicStart.png"<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "icmouseclick PicStart.png"<br/>
<br/>
#Wait for the main dialog to appear<br/>
sleep 1<br/>
<br/>
for count in {0..9}<br/>
do<br/>
&nbsp;&nbsp;./../../Libraries/libcvautomation/examples/cva-input -s "wait_for PicBeer.png"<br/>
&nbsp;&nbsp;./../../Libraries/libcvautomation/examples/cva-input -s "tcmouseimage PicBeer.png"<br/>
&nbsp;&nbsp;./../../Libraries/libcvautomation/examples/cva-input -s "icmouseclick PicBeer.png"<br/>
done<br/>
<br/>
#Enjoy<br/>
sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "keyclick Escape"<br/>
<br/>
#Wait for the menu to reappear<br/>
sleep 1<br/>
<br/>
./../../Libraries/libcvautomation/examples/cva-input -s "keyclick Escape"<br/>
<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
