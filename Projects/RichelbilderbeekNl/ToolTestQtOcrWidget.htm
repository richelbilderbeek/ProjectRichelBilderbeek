<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestQtOcrWidget</title>
  <meta name="description" content="C++ TestQtOcrWidget"/>
  <meta name="keywords" content="C++ TestQtOcrWidget "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.637 at Thu May  1 21:09:59 2014
 -->
<p>
  <a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppQtOcrWidget.htm">QtOcrWidget</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestQtOcrWidgetConsoleExe.zip">Download the 'TestQtOcrWidget' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestQtOcrWidgetDesktopExe.zip">Download the 'TestQtOcrWidget' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestQtOcrWidgetWebsiteExe.zip">Download the 'TestQtOcrWidget' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestQtOcrWidget/ToolTestQtOcrWidgetDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/ToolTestQtOcrWidgetDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>NoWeffcpp.pri)<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Tesseract.pri) #Cannot use <a href="CppWeffcpp.htm">-Weffc++</a><br/>
<br/>
include(../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/ToolTestOcr<a href="CppWidget.htm">Widget</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/ToolTestOcrWidgetDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/ToolTestOcrWidgetDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtocrinputdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtocr<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtsketch<a href="CppWidget.htm">widget</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtocrinputdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtocr<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtsketch<a href="CppWidget.htm">widget</a>.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/qtocrinputdialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/ToolTestQtOcrWidgetConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/ToolTestQtOcrWidgetConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/ocr.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/tesseracthelper.cpp<br/>
<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/ocr.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/tesseracthelper.h<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>.qrc<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestQtOcr<a href="CppWidget.htm">Widget</a>/eng.traineddata<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/ocr.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/ocr.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppOcr.htm">OCR</a>_H<br/>
<a href="CppDefine.htm">#define</a> <a href="CppOcr.htm">OCR</a>_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> &lt;<a href="CppUtilityH.htm">utility</a>&gt;<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> tesseract { <b><a href="CppStruct.htm">struct</a></b> TessBaseAPI; }<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppOcr.htm">OCR</a> is an adapter <b><a href="CppFor.htm">for</a></b> Tesseract<br/>
<b><a href="CppStruct.htm">struct</a></b> Ocr<br/>
{<br/>
&nbsp;&nbsp;Ocr(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; data_path,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Read(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> image_data,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> bytes_per_pixel,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> bytes_per_line,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;tesseract::TessBaseAPI&gt; m_api;<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> <a href="CppOcr.htm">OCR</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/ocr.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/ocr.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "ocr.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "tesseract-3.00/api/baseapi.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
Ocr::Ocr(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; datafile,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist)<br/>
&nbsp;&nbsp;: m_api(<b><a href="CppNew.htm">new</a></b> tesseract::TessBaseAPI)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppQFile.htm">QFile</a>::exists(datafile.c_str())); <a href="CppComment.htm">//</a>Tesseract adds path<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> success <a href="CppOperatorAssign.htm">=</a> m_api-&gt;Init(datafile.c_str(),"eng"); <a href="CppComment.htm">//</a>English<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(success <a href="CppOperatorEqual.htm">==</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>CCUtil::main_setup(<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>tesseract::TessdataManager::Init(datafile.c_str());<br/>
&nbsp;&nbsp;m_api-&gt;SetVariable("tessedit_char_whitelist", whitelist.c_str());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_api-&gt;SetVariable("tessedit_char_whitelist", "ABCDEFGHIJKLMNOPQRSTUVWXYZ");<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Ocr::Read(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> image_data,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> bytes_per_pixel,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> bytes_per_line,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> left,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(width&nbsp;&nbsp;&gt; 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(height &gt; 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_api-&gt;TesseractRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_data,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bytes_per_pixel,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;bytes_per_line,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;left,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;top,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;height);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> text;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDir.htm">QDir</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ocr.h"<br/>
<a href="CppInclude.htm">#include</a> "qtocrinputdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtocr<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> dataset exists. If not, recreate it<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQrcFile.htm">qrcfile</a>name <a href="CppOperatorAssign.htm">=</a> "eng.traineddata";<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tesseract wants it to be in a folder called tessdata<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> tesseract_filename <a href="CppOperatorAssign.htm">=</a> "tessdata/eng.traineddata";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppQFile.htm">QFile</a>::exists(tesseract_filename.c_str()))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> f( (<a href="CppStdString.htm">std::string</a>(":/data/") <a href="CppOperatorPlus.htm">+</a> <a href="CppQrcFile.htm">qrcfile</a>name).c_str() );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f.size() &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQDir.htm">QDir</a>().mkdir("tessdata");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> success <a href="CppOperatorAssign.htm">=</a> f.copy(tesseract_filename.c_str());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(success);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f.close();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppQFile.htm">QFile</a>::exists(tesseract_filename.c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The <b><a href="CppChar.htm">char</a></b>s enabled to be detected<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> whitelist <a href="CppOperatorAssign.htm">=</a> "ABCDEFGHIJKLMNOPQRSTUVWXYZ";<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>But Tesseract wants the qrc filename, because it will add the 'tessdata' folder itself<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>OcrInputDialog w(<a href="CppStdString.htm">std::string</a>("./") <a href="CppOperatorPlus.htm">+</a> <a href="CppQrcFile.htm">qrcfile</a>name,whitelist);<br/>
<br/>
&nbsp;&nbsp;w.show();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtocrinputdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtocrinputdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QT<a href="CppOcr.htm">OCR</a>DIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QT<a href="CppOcr.htm">OCR</a>DIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>OcrInputDialog;<br/>
}<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>OcrInputDialog displays a GUI <b><a href="CppFor.htm">for</a></b> the <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a><br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>OcrInputDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>OcrInputDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; path,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>OcrInputDialog();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_clear_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>OcrInputDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>&gt; m_ocr_<a href="CppWidget.htm">widget</a>;<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QT<a href="CppOcr.htm">OCR</a>DIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtocrinputdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtocrinputdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtocrinputdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppNumericH.htm">numeric</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtocr<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtocrinputdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppQt.htm">Qt</a>OcrInputDialog::<a href="CppQt.htm">Qt</a>OcrInputDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; path,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>OcrInputDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_ocr_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>(path,whitelist))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;ocr_<a href="CppWidget.htm">widget</a>_placeholder-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;ocr_<a href="CppWidget.htm">widget</a>_placeholder-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_ocr_<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;ocr_<a href="CppWidget.htm">widget</a>_placeholder-&gt;layout());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_ocr_<a href="CppWidget.htm">widget</a>-&gt;resize(m_ocr_<a href="CppWidget.htm">widget</a>-&gt;size());<br/>
}<br/>
<br/>
<a href="CppQt.htm">Qt</a>OcrInputDialog::~<a href="CppQt.htm">Qt</a>OcrInputDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>OcrInputDialog::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_ocr_<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> m_ocr_<a href="CppWidget.htm">widget</a>-&gt;Read();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Remove trailing '\n' and '\r'<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s.empty()) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> last_<b><a href="CppChar.htm">char</a></b> <a href="CppOperatorAssign.htm">=</a> s.substr(s.size()-1,1)[0];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (last_<b><a href="CppChar.htm">char</a></b> <a href="CppOperatorEqual.htm">==</a> '\r' <a href="CppOperatorLogicalOr.htm">||</a> last_<b><a href="CppChar.htm">char</a></b> <a href="CppOperatorEqual.htm">==</a> '\n')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.resize(s.size() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle(s.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>OcrInputDialog::on_button_clear_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_ocr_<a href="CppWidget.htm">widget</a>-&gt;clear();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtocrwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtocrwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QT<a href="CppOcr.htm">OCR</a>WIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QT<a href="CppOcr.htm">OCR</a>WIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtsketch<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Ocr;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; path,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Read() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ocr&gt; m_ocr;<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QT<a href="CppOcr.htm">OCR</a>WIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtocrwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtocrwidget.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtocr<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ocr.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; datafile,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; whitelist,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_ocr(<b><a href="CppNew.htm">new</a></b> Ocr(datafile,whitelist))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppQFile.htm">QFile</a>::exists(datafile.c_str())); <a href="CppComment.htm">//</a>Tesseract adds path<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>::Read() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> copy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>*&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;grab().toImage();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQImage.htm">QImage</a> copy <a href="CppOperatorAssign.htm">=</a> <a href="CppQPixmap.htm">QPixmap</a>::grab<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>*&gt;(<b><a href="CppThis.htm">this</a></b>)).toImage();<br/>
&nbsp;&nbsp;copy.save("<a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>.png");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> m_ocr-&gt;Read(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy.bits(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy.depth() <a href="CppOperatorDivide.htm">/</a> 8, <a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> bit to byte<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy.bytesPerLine(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0, <a href="CppComment.htm">//</a>left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0, <a href="CppComment.htm">//</a>top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy.width(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy.height());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> text;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtsketchwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtsketchwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTSKETCHWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTSKETCHWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a> example<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQWidget.htm">QWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> clear();<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>() {}<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPoint.htm">QPoint</a>&gt; &gt; m_<a href="CppPointer.htm">point</a>s;<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTSKETCHWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/qtsketchwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/qtsketchwidget.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtsketch<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QSysInfo&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQWidget.htm">QWidget</a>(parent)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMouseTracking(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>::clear()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppPointer.htm">point</a>s.clear();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>::mouseMoveEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;buttons() &amp; <a href="CppQt.htm">Qt</a>::LeftButton)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppPointer.htm">point</a>s.back().push_back(e-&gt;pos());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;repaint();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;buttons() &amp; <a href="CppQt.htm">Qt</a>::LeftButton)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppPointer.htm">point</a>s.push_back(<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPoint.htm">QPoint</a>&gt;());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppPointer.htm">point</a>s.back().push_back(e-&gt;pos());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Sketch<a href="CppWidget.htm">Widget</a>::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen <a href="CppOperatorAssign.htm">=</a> painter.pen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setCapStyle(<a href="CppQt.htm">Qt</a>::RoundCap);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQt.htm">Qt</a>::gray);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidth(10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter.setPen(pen);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_lines <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_<a href="CppPointer.htm">point</a>s.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> line=0; line<a href="CppOperatorNotEqual.htm">!=</a>n_lines; <a href="CppOperatorIncrement.htm">++</a>line)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppQPoint.htm">QPoint</a>&gt;&amp; <a href="CppPointer.htm">point</a>s <a href="CppOperatorAssign.htm">=</a> m_<a href="CppPointer.htm">point</a>s[line];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_<a href="CppPointer.htm">point</a>s <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppPointer.htm">point</a>s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> <a href="CppPointer.htm">point</a>=1; <a href="CppPointer.htm">point</a><a href="CppOperatorNotEqual.htm">!=</a>n_<a href="CppPointer.htm">point</a>s; <a href="CppOperatorIncrement.htm">++</a><a href="CppPointer.htm">point</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawLine(<a href="CppPointer.htm">point</a>s[<a href="CppPointer.htm">point</a>-1],<a href="CppPointer.htm">point</a>s[<a href="CppPointer.htm">point</a>]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/tesseracthelper.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/tesseracthelper.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> TESSERACTHELPER_H<br/>
<a href="CppDefine.htm">#define</a> TESSERACTHELPER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>These <a href="CppFunction.htm">function</a>s must be in the global <b><a href="CppNamespace.htm">namespace</a></b>,<br/>
<a href="CppComment.htm">//</a>because tesseract assumes these exist in the<br/>
<a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b>-absent C <a href="CppHeaderFile.htm">header file</a>s<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSignal.htm">signal</a>.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;uni<a href="CppStd.htm">std</a>.h&gt;<br/>
<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_FIX_COMPILER_ERROR_CREATEPROCESS<br/>
<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_FSYNC<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_OTHER_MAIN<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_SLEEP<br/>
<br/>
<a href="CppComment.htm">//</a>Call of <a href="CppLinux.htm">Linux</a> <a href="CppFork.htm">fork</a>() or the <a href="CppWindows.htm">Windows</a> equivalent<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_SVSYNCH_STARTPROCESS_SVUTIL_CPP<br/>
<br/>
<a href="CppComment.htm">//</a>Call of <a href="CppLinux.htm">Linux</a> <a href="CppFork.htm">fork</a>() or the <a href="CppWindows.htm">Windows</a> equivalent<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_SVNETWORK_RECEIVE_SVUTIL_CPP<br/>
<br/>
<a href="CppDefine.htm">#define</a> BILDERBIKKEL_REMOVE_USELESS_GLOBAL_DEMODIR<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> BILDERBIKKEL_STRTOK_R_ALREADY_DEFINED<br/>
<a href="CppDefine.htm">#define</a> strtok_r(s, d, p) strtok(s, d)<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppLong.htm">long</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppNrand48.htm">Nrand48</a>(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppShort.htm">short</a></b> <b><a href="CppInt.htm">int</a></b> xsubi[3]);<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppM_PI.htm">M_PI</a><br/>
<a href="CppDefine.htm">#define</a> <a href="CppM_PI.htm">M_PI</a> 3.14159265359<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESSERACTHELPER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtOcrWidget/tesseracthelper.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtOcrWidget/tesseracthelper.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "tesseracthelper.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppLimitsH.htm">limits</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStd.htm">std</a>lib.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStd.htm">std</a>int.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">//</a>Identical to <a href="CppUnix.htm">UNIX</a> <a href="CppNrand48.htm">nrand48</a><br/>
<b><a href="CppLong.htm">long</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppNrand48.htm">Nrand48</a>(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppShort.htm">short</a></b> <b><a href="CppInt.htm">int</a></b> xsubi[3])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppLongLongInt.htm">long long int</a></b> a <a href="CppOperatorAssign.htm">=</a> 0x5deece66dull;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppShort.htm">short</a></b> <b><a href="CppInt.htm">int</a></b> c <a href="CppOperatorAssign.htm">=</a> 0xb;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> uint64_t x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;uint64_t&gt;(xsubi[2]) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 32<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;uint32_t&gt;(xsubi[1]) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 16<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| xsubi[0];<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> uint64_t y <a href="CppOperatorAssign.htm">=</a> x * a <a href="CppOperatorPlus.htm">+</a> c;<br/>
<br/>
&nbsp;&nbsp;xsubi[0] <a href="CppOperatorAssign.htm">=</a> y &amp; 0xffff;<br/>
&nbsp;&nbsp;xsubi[1] <a href="CppOperatorAssign.htm">=</a> (y <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 16) &amp; 0xffff;<br/>
&nbsp;&nbsp;xsubi[2] <a href="CppOperatorAssign.htm">=</a> (y <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 32) &amp; 0xffff;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppSizeof.htm">sizeof</a></b>(<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppShort.htm">short</a></b> <b><a href="CppInt.htm">int</a></b>) <a href="CppOperatorEqual.htm">==</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> xsubi[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 15 | xsubi[1] <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> xsubi[2] <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 1;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>Used by the original program<br/>
<a href="CppComment.htm">//</a>uinT32 <a href="CppNrand48.htm">nrand48</a>(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a>get <a href="CppRandomNumber.htm">random number</a><br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uinT16 *seeds&nbsp;&nbsp;<a href="CppComment.htm">//</a>seeds to use<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> uinT32 seed <a href="CppOperatorAssign.htm">=</a> 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>only seed<br/>
<a href="CppComment.htm">//</a><br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (seed <a href="CppOperatorEqual.htm">==</a> 0) {<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;seed <a href="CppOperatorAssign.htm">=</a> seeds[0] ^ (seeds[1] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 8) ^ (seeds[2] <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 16);<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;srand(seed);<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;}<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a><a href="CppMake.htm">make</a> 32 bit one<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> rand () | (rand () <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> 16);<br/>
<a href="CppComment.htm">//</a>}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
