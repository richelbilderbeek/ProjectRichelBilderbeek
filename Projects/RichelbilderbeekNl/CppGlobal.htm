<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>global</title>
  <meta name="description" content="C++ global"/>
  <meta name="keywords" content="C++ global code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGlobal.htm">global</a></h1>
<p>&nbsp;</p>
<p>
  A <a href="CppGlobal.htm">global</a> (also: <a href="CppGlobal.htm">global variable</a>) is a <a href="CppVariable.htm">variable</a> that is visible
  by all code (as opposite of a <a href="CppLocal.htm">local</a> <a href="CppVariable.htm">variable</a>,
  which is only visible in its <a href="CppScope.htm">scope</a>). A non-<a href="CppConst.htm">const</a> <a href="CppGlobal.htm">global</a> is
  one of the biggest contributors of increasing <a href="CppState.htm">state</a>-space.
</p>
<p>&nbsp;</p>
<p><a href="CppLocalVersusGlobal.htm">Compare the speed of local versus global variables</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Avoid using <a href="CppGlobal.htm">global</a> data [1-6,8]. 
    Instead, <a href="CppDeclaration.htm">declare</a> <a href="CppVariable.htm">variables</a>  as <a href="CppLocal.htm">locally</a> as possible [7]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. Modern C++ Design. 2001. ISBN: 0201704315. Item 10: 'Minimize global and shared data'.</li>
  <li><!--  2 -->Stephen C. Dewhurst. C++ Gotchas. 2003. ISBN: 0-321-12518-5. Gotcha #3: 'Avoid global variables'.</li>
  <li><!--  3 --><a href="http://www.parashift.com/c++-faq/global-vars.html">C++ FAQ Lite</a>: 'The names of global variables should start with //' and 'Instead of using a global variable, you should seriously consider if there are ways to limit the variable's visibility and/or lifetime'.</li>
  <li><!--  4 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition).ISBN: 0-201-88954-4. Chapter 1.8.2.a: 'Don't use global data (use members)'</li>
  <li><!--  5 --><a href="CppJarrodHollingworth.htm"> Jarrod Hollingworth</a> , Bob Swart, Mark Cashman, Paul Gustavson. Sams C++ Builder 6 Developer's Guide. ISBN: 0-672-32480-6. Chapter 3: 'Avoid using global variables'</li>
  <li><!--  6 --><a href="CppJesseLiberty.htm">Jesse Liberty</a> . Sams teach yourself C++ in 24 hours. ISBN: 0-672-32224-2. Hour 5, paragraph 'Global variables': 'In C++, global variables are avoided because they can create very confusing code that is hard to maintain.'</li>
  <li><!--  7 --><a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. Modern C++ Design. 2001. ISBN: 0201704315. Item 18: 'Declare variables as locally as possible'.</li>
  <li><!--  8 -->Joint Strike Fighter Air Vehicle C++ Coding Standards for the System Development and Demonstration Program. Document Number 2RDU00001 Rev C. December 2005. AV Rule 207: 'Unencapsulated global data will be avoided.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>