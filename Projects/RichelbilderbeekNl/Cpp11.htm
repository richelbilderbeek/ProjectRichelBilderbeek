<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>C++11</title>
  <meta name="description" content="C++ C++11 standard"/>
  <meta name="keywords" content="C++ C++11 standard"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>
  (<a href="Cpp.htm">C++</a>) 
  <img src="PicCpp11.png" alt="C++11"/> 
  <a href="Cpp11.htm">C++11</a>
</h1>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp0x.htm">C++11</a> is the official name of the C++ <a href="CppStandard.htm">standard</a> accepted in 2011. 
Before, this standard was called 'C++0x'.</p>
<p>&nbsp;</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCpp11.htm">Using C++11 under Qt Creator</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="Cpp11.htm">C++11</a> new features</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppDataType.htm">data types</a>:
    <ul>
      <li><a href="CppChar16_t.htm">char16_t</a>: a new 16-bit character <a href="CppDataType.htm">data type</a></li>
      <li><a href="CppChar32_t.htm">char32_t</a>: a new 32-bit character <a href="CppDataType.htm">data type</a></li>
      <li><a href="CppEnumClass.htm">enum class</a>: a new conversion-safe <a href="CppEnum.htm">enumeration</a></li>
      <li><a href="CppExternTemplate.htm">extern template</a>: <a href="CppForwardDeclaration.htm">forward declare</a> <a href="CppTemplateFunction.htm">template functions</a></li>
      <li><a href="CppLongLongInt.htm">long long int</a>: guaranteed to be 64-bit</li>
    </ul>
  </li>
  <li><a href="CppKeyword.htm">keywords</a>:
    <ul>
      <li><a href="CppAuto.htm">auto</a>: let the <a href="CppCompiler.htm">compiler</a> infer the <a href="CppDataType.htm">data type</a></li>
      <li><a href="CppConstexpr.htm">constexpr</a>: mark a generalized constant expressions</li>
      <li><a href="CppFinal.htm">final</a>: to indicate that a <a href="CppVirtual.htm">virtual</a> <a href="CppMemberFunction.htm">member function</a> cannot be overriden</li>
      <li><a href="CppFor.htm">for</a>: support of a range-based <a href="CppFor.htm">for</a> loop</li>
      <li><a href="CppNullptr.htm">nullptr</a>: set a <a href="CppPointer.htm">pointer</a> to uninitialized</li>
      <li><a href="CppStatic_assert.htm">static_assert</a>: same function as <a href="CppBOOST_STATIC_ASSERT.htm">BOOST_STATIC_ASSERT</a></li>
    </ul>
  </li>
  <li><a href="CppClass.htm">classes</a>:
    <ul>
      <li><a href="CppArray.htm">std::array</a></li>
      <li><a href="CppRegex.htm">std::regex</a></li>
      <li><a href="CppShared_ptr.htm">std::shared_ptr</a></li>
      <li><a href="CppThread.htm">std::thread</a></li>
      <li><a href="CppUnique_ptr.htm">std::unique_ptr</a></li>
    </ul>
  </li>
  <li><a href="CppAlgorithm.htm">algorithms</a>:
    <ul>
      <li><a href="CppAll_of.htm">std::all_of</a></li>
      <li><a href="CppAny_of.htm">std::any_of</a></li>
      <li><a href="CppCopy_if.htm">std::copy_if</a></li>
      <li><a href="CppCopy_n.htm">std::copy_n</a></li>
      <li><a href="CppFind_if_not.htm">std::find_if_not</a></li>
      <li><a href="CppIota.htm">std::iota</a></li>
      <li><a href="CppIs_heap.htm">std::is_heap</a></li>
      <li><a href="CppIs_heap_until.htm">std::is_heap_until</a></li>
      <li><a href="CppIs_sorted.htm">std::is_sorted</a></li>
      <li><a href="CppIs_sorted_until.htm">std::is_sorted_until</a></li>
      <li><a href="CppMinmax_element.htm">std::minmax_element</a></li>
      <li><a href="CppMinmax.htm">std::minmax</a></li>
      <li><a href="CppMove_backward.htm">std::move_backward</a></li>
      <li><a href="CppMove.htm">std::move</a></li>
      <li><a href="CppNone_of.htm">std::none_of</a></li>
      <li><a href="CppPartial_sort_copy.htm">std::partial_sort_copy</a></li>
      <li><a href="CppPartition_copy.htm">std::partition_copy</a></li>
      <li><a href="CppPartition_point.htm">std::partition_point</a></li>
    </ul>
  </li>
  <li>'&gt;&gt;' can be used as a <a href="CppNestedTemplateCloser.htm">nested template closer</a></li>
  <li><a href="CppDelegation.htm">delegation</a>: let <a href="CppConstructor.htm">constructors</a> call each other</li>
  <li><a href="CppEnumClassForwardDeclaration.htm">enum class forward declarations</a></li>
  <li><a href="CppInitializerList.htm">initializer lists</a></li>
  <li><a href="CppLambdaExpression.htm">lambda expressions</a></li>
  <li>std::move</li>
  <li>much more...</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ol>
  <li><a href="http://en.wikipedia.org/wiki/C%2B%2B0x">Wikipedia page about C++11</a></li>
  <li><a href="http://www.artima.com/cppsource/cpp0x.html">C++ source article about C++11 by Bjarne Stroustrup</a></li>
  <li><a href="http://www2.research.att.com/~bs/C++11FAQ.html">Bjarne Stroustrup's page about C++11</a></li>
  <li><a href="http://media.libsyn.com/media/seradio/seradio-episode159-cPlusPlus0x.mp3">Interview with Scott Meyers</a> (on <a href="http://www.se-radio.net">se-radio</a>, episode 159)</li>
  <li><a href="http://gcc.gnu.org/projects/cxx0x.html">GCC page about C++11 support</a></li>
  <li><a href="http://blog.aaronballman.com/tag/c0x">Aaron Ballman's blog about C++11</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
