<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QwtExample2</title>
  <meta name="description" content="C++ QwtExample2"/>
  <meta name="keywords" content="C++ QwtExample2 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQwtExample2.htm">QwtExample2</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:42:22 2014
 -->
<p><img src="PicQwt.png" alt="Qwt"/><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicWindows.png" alt="Windows"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppQwtExample2.htm">Qwt example 2: QwtPlot as QGraphicsItem</a> is a <a href="CppQwt.htm">Qwt</a>
  <a href="CppExample.htm">example</a> that shows how to add a QwtPlot to a 
  <a href="CppQGraphicsScene.htm">QGraphicsScene</a>.
</p>
<p>&nbsp;</p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppQwtExample2Lubuntu.png">View a screenshot of CppQwtExample2 (png)</a></li>
  <li><img src="PicWindows.png" alt="Lubuntu"/> <a href="CppQwtExample2Windows.png">View a screenshot of CppQwtExample2 (png)</a></li>
  <li><a href="CppQwtExample2.zip">Download the Qt Creator project 'CppQwtExample2' (zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppQwtExample2/CppQwtExample2.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/CppQwtExample2.pro" border = "1"><tr><td><code>
#<a href="CppQwt.htm">Qwt</a> does not go together with <a href="CppQwt.htm">Qwt</a><br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>NoWeffcpp.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppQwt.htm">Qwt</a>.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qwtplotitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qwtplot<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qttextitem.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qwtplotitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qwtplot<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qttextitem.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qwtplot<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a> <a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>.setGeometry(100,100,800,600);<br/>
&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qttextitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qttextitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTEXTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTTEXTITEM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsSimpleTextItem.htm">QGraphicsSimpleTextItem</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>TextItem : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsSimpleTextItem.htm">QGraphicsSimpleTextItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TextItem(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp; text, <a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<b><a href="CppDouble.htm">double</a></b>)&gt; m_signal_value;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event);<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTEXTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qttextitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qttextitem.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qttextitem.h"<br/>
<br/>
<a href="CppQt.htm">Qt</a>TextItem::<a href="CppQt.htm">Qt</a>TextItem(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a>&amp; text, <a href="CppQGraphicsItem.htm">QGraphicsItem</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsSimpleTextItem.htm">QGraphicsSimpleTextItem</a>(parent)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setText(text);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>TextItem::mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsSimpleTextItem.htm">QGraphicsSimpleTextItem</a>::mouseMoveEvent(event);<br/>
&nbsp;&nbsp;m_signal_value(<b><a href="CppThis.htm">this</a></b>-&gt;pos().y());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qtwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qtwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>PlotItem;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>(<a href="CppQGraphicsScene.htm">QGraphicsScene</a>* scene <a href="CppOperatorAssign.htm">=</a> 0, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>PlotItem * m_item;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ReceiveValue(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> value);<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qtwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qtwidget.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qt<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qwtplotitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qttextitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qwtplot<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>(<a href="CppQGraphicsScene.htm">QGraphicsScene</a>* scene, <a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsView.htm">QGraphicsView</a>(scene,parent), m_item(0)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setScene(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>(100);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> proxy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;scene()-&gt;addWidget(<a href="CppWidget.htm">widget</a>,<a href="CppQt.htm">Qt</a>::Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotItem(<a href="CppWidget.htm">widget</a>,proxy);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_item-&gt;m_proxy-&gt;setGeometry(<a href="CppQRect.htm">QRect</a>F(-200.0,-200.0,400.0,400.0));<br/>
&nbsp;&nbsp;m_item-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppAdd.htm">Add</a>Y(1.0);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>TextItem * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>TextItem("MOVE ME");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;m_signal_value.connect(<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::ReceiveValue,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;scene()-&gt;addItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setPos(300.0,0.0);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a><a href="CppWidget.htm">Widget</a>::ReceiveValue(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> value)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_item-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppAdd.htm">Add</a>Y(value);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qwtplotitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qwtplotitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QWTPLOTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QWTPLOTITEM_H<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>;<br/>
<br/>
<a href="CppComment.htm">///</a>Has access to item and original <a href="CppWidget.htm">widget</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>PlotItem<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>PlotItem(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> proxy);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> m_proxy;<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
};<br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QWTPLOTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qwtplotitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qwtplotitem.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qwtplotitem.h"<br/>
<br/>
<a href="CppQwt.htm">Qwt</a>PlotItem::<a href="CppQwt.htm">Qwt</a>PlotItem(<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>,<br/>
&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> proxy)<br/>
&nbsp;&nbsp;: m_proxy(proxy), m_<a href="CppWidget.htm">widget</a>(<a href="CppWidget.htm">widget</a>)<br/>
{<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qwtplotwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qwtplotwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QWTPLOTWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QWTPLOTWIDGET_H<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>Plot;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>PlotCurve;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQWidget.htm">QWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>Y(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y);<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>PlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve;<br/>
&nbsp;&nbsp;<a href="CppQwt.htm">Qwt</a>Plot * <b><a href="CppConst.htm">const</a></b> m_plot;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m_xs;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m_ys;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; CreateXs(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n);<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QWTPLOTWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/qwtplotwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/qwtplotwidget.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "qwtplot<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppDequeH.htm">deque</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_curve.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_grid.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_plot_zoomer.h&gt;<br/>
<br/>
<a href="CppPreIf.htm">#if</a> QWT_VERSION <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0x060100 <a href="CppOperatorLogicalOr.htm">||</a> !WIN32<br/>
<a href="CppInclude.htm">#include</a> "qwt_<a href="CppPointer.htm">point</a>_data.h"<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>::<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz)<br/>
&nbsp;&nbsp;: m_curve(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotCurve),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_plot(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>Plot),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_xs(CreateXs(sz))<br/>
{<br/>
<br/>
&nbsp;&nbsp;m_plot-&gt;setTitle("<a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>");<br/>
&nbsp;&nbsp;m_plot-&gt;setAxisTitle(<a href="CppQwt.htm">Qwt</a>Plot::yLeft,"Y coordinat");<br/>
&nbsp;&nbsp;m_plot-&gt;setAxisTitle(<a href="CppQwt.htm">Qwt</a>Plot::xBottom,"<a href="CppTime.htm">Time</a>");<br/>
&nbsp;&nbsp;m_curve-&gt;attach(m_plot);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> grid<br/>
&nbsp;&nbsp;{ <a href="CppQwt.htm">Qwt</a>PlotGrid * <b><a href="CppConst.htm">const</a></b> grid <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotGrid; grid-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(196,196,196))); grid-&gt;attach(m_plot); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> zoomer<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{ <b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a>PlotZoomer(m_plot-&gt;canvas()); }<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(-100.0,-100.0,200,200);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> some data<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y_val <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_ys.push_back(y_val);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreIf.htm">#if</a> QWT_VERSION <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0x060100 <a href="CppOperatorLogicalOr.htm">||</a> !WIN32<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve-&gt;setData(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a><a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;m_xs[0],&amp;m_ys[0],m_ys.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve-&gt;setData(&amp;m_xs[0],&amp;m_ys[0],m_ys.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_curve-&gt;setData(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a><a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;m_xs[0],&amp;m_ys[0],m_xs.size()));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQVBoxLayout.htm">QVBoxLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_plot);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>::<a href="CppAdd.htm">Add</a>Y(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Pop first, append y<br/>
&nbsp;&nbsp;<a href="CppStdDeque.htm">std::deque</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; d(m_ys.begin(),m_ys.end());<br/>
&nbsp;&nbsp;d.pop_front();<br/>
&nbsp;&nbsp;d.push_back(y);<br/>
&nbsp;&nbsp;m_ys <a href="CppOperatorAssign.htm">=</a> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(d.begin(),d.end());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_xs.size() <a href="CppOperatorEqual.htm">==</a> m_ys.size());<br/>
<br/>
&nbsp;&nbsp;m_curve-&gt;setData(<b><a href="CppNew.htm">new</a></b> <a href="CppQwt.htm">Qwt</a><a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;m_xs[0],&amp;m_ys[0],m_xs.size()));<br/>
&nbsp;&nbsp;m_plot-&gt;replot(); <a href="CppComment.htm">//</a>No replot, no glory<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; <a href="CppQwt.htm">Qwt</a>Plot<a href="CppWidget.htm">Widget</a>::CreateXs(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; v(n);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i) { v[i] <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i); }<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQwtExample2/crosscompiletowindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQwtExample2/crosscompiletowindows.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#From http://richelbilderbeek.nl/CppQtCrosscompileToWindowsExample15.htm<br/>
<br/>
echo "Cross compiling to Windows"<br/>
<br/>
echo "1/2: Creating Windows makefile"<br/>
i686-pc-mingw32-qmake CppQwtExample2.pro<br/>
<br/>
echo "2/2: making makefile"<br/>
<br/>
make<br/>
<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
