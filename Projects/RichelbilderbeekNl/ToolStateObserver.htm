<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>StateObserver</title>
  <meta name="description" content="C++ StateObserver"/>
  <meta name="keywords" content="C++ StateObserver "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolStateObserver.htm">StateObserver</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.636 at Sat Apr 26 14:38:05 2014
 -->
<p>
  <a href="ToolStateObserver.htm">StateObserver</a> is a <a href="Tools.htm">tool</a> to examine different state observers.
</p>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolStateObserver_1_1.png">View a screenshot of 'StateObserver' (version 1.1)(png)</a></li>
  <li><a href="ToolStateObserver_1_0.png">View a screenshot of 'StateObserver' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolStateObserverConsoleExe.zip">Download the 'StateObserver' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolStateObserverDesktopExe.zip">Download the 'StateObserver' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolStateObserverWebsiteExe.zip">Download the 'StateObserver' Windows executable (latest version)(zip)</a></li>
  <li><a href="ToolStateObserverExe_1_0.zip">Download the 'StateObserver' Windows executable (version 1.0)(zip)</a></li>
  <li><a href="ToolStateObserverSource_1_0.zip">Download the 'StateObserver' source code (version 1.0)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.2.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolStateObserver/ToolStateObserverDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/ToolStateObserverDesktop.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/CppQt<a href="CppStateObserver.htm">StateObserver</a>/qtalphafilterdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphabetafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphabetagammafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/floatingpointstateobserver.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integeralphafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integerstateobserver.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integersymmetricalphafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/multialphafilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/multiintegerstateobserver.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;lsqfilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;noisefunctionparser.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobserver<a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobservermenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;slidingmodeobserver.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;slsqfilter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;stateobservermenudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/CppQt<a href="CppStateObserver.htm">StateObserver</a>/qtalphafilterdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphabetafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphabetagammafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/alphafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/floatingpointstateobserver.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integeralphafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integerstateobserver.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/integersymmetricalphafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/multialphafilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/multiintegerstateobserver.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/stateobserverfwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;lsqfilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;noisefunctionparser.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobserver<a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobservermenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;slsqfilter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;stateobservermenudialog.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/CppQt<a href="CppStateObserver.htm">StateObserver</a>/qtalphafilterdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobserver<a href="CppMain.htm">main</a>dialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtstateobservermenudialog.ui<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="ToolStateObserver.htm">ToolStateObserver</a>.qrc<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppStateObserver.htm">CppStateObserver</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;crosscompiletowindows.sh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;zip.sh<br/>
<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a> <br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> +=&nbsp;&nbsp;<a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
<br/>
#<br/>
#<br/>
# Warp's function parser<br/>
#<br/>
#<br/>
#unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/extrasrc/fpaux.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/extrasrc/fptypes.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fparser_gmpint.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fparser.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fparser_mpfr.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fpconfig.hh<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fparser.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/fpoptimizer.cc<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/extrasrc/fp_identifier_parser.inc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/fparser4.5.1/extrasrc/fp_opcode_add.inc<br/>
#}<br/>
<br/>
#<br/>
#<br/>
# Qwt<br/>
#<br/>
#<br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += /usr/include/qwt<br/>
&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += -L/usr/lib -lqwt<br/>
}<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;message(Windows: Qwt: link dynamically)<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a>+= ../../<a href="CppLibrary.htm">Libraries</a>/qwt-6.1.0/src<br/>
&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a>+= -L../../<a href="CppLibrary.htm">Libraries</a>/qwt-6.1.0/lib<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;message(Windows: Qwt: Linking to qwt)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += -lqwt<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>(debug, debug|release) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;message(Windows: Qwt: Linking to qwtd)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += -lqwtd<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/ToolStateObserverConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/ToolStateObserverConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/noisefunctionparser.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/stateobservermenudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/noisefunctionparser.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/stateobservermenudialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/ToolStateObserverDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/ToolStateObserverDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>Console.pri)<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>.qrc<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobservermenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobserver<a href="CppMain.htm">main</a>dialog.ui<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobservermenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobserver<a href="CppMain.htm">main</a>dialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobservermenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/qtstateobserver<a href="CppMain.htm">main</a>dialog.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/ToolStateObserverWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/ToolStateObserverWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>/<a href="ToolStateObserver.htm">ToolStateObserver</a>Console.pri)<br/>
<a href="CppQmakeSources.htm">SOURCES</a> +=<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> +=<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/lsqfilter.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/lsqfilter.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> LSQFILTER_H<br/>
<a href="CppDefine.htm">#define</a> LSQFILTER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCinttypesH.htm">cinttypes</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> LsqFilter<br/>
{<br/>
&nbsp;&nbsp;LsqFilter(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> filter_shift,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_active <a href="CppOperatorAssign.htm">=</a> 0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_hidden <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t measurement);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t m_filter_shift;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t m_value_active;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t m_value_hidden;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> LSQFILTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/lsqfilter.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/lsqfilter.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "lsqfilter.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::LsqFilter::LsqFilter(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> filter_shift,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_active,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_hidden)<br/>
&nbsp;&nbsp;: m_filter_shift(filter_shift),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_value_active(value_active),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_value_hidden(value_hidden)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter_shift <a href="CppOperatorGreaterEqual.htm">&gt;=</a>&nbsp;&nbsp;0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A bitshift should not be done with negative values");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter_shift <a href="CppOperatorLessEqual.htm">&lt;=</a> 63 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "An <b><a href="CppInt.htm">int</a></b> can maximally be shifted 63 bits to the right");<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b>64_t <a href="CppRibi.htm">ribi</a>::LsqFilter::Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t measurement)<br/>
{<br/>
&nbsp;&nbsp;m_value_hidden <a href="CppOperatorPlusAssign.htm">+=</a> ((measurement&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> m_value_hidden) <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_filter_shift);<br/>
&nbsp;&nbsp;m_value_active <a href="CppOperatorPlusAssign.htm">+=</a> ((m_value_hidden <a href="CppOperatorMinus.htm">-</a> m_value_active) <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_filter_shift);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_value_active;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/noisefunctionparser.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/noisefunctionparser.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> NOISEFUNCTIONPARSER_H<br/>
<a href="CppDefine.htm">#define</a> NOISEFUNCTIONPARSER_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppFunctionParser.htm">FunctionParser</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Uses Warp's <a href="CppFunctionParser.htm">function parser</a> and adds a <a href="CppFunction.htm">function</a> to call <a href="CppRandomNumber.htm">random numbers</a><br/>
<b><a href="CppStruct.htm">struct</a></b> Noise<a href="CppFunctionParser.htm">FunctionParser</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/For example:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/my_function <a href="CppOperatorAssign.htm">=</a> 'x * x * sin(x) * rand(x)'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/variable_name <a href="CppOperatorAssign.htm">=</a> 'x'<br/>
&nbsp;&nbsp;Noise<a href="CppFunctionParser.htm">FunctionParser</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; my_function, <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; variable_name);<br/>
&nbsp;&nbsp;Noise<a href="CppFunctionParser.htm">FunctionParser</a>(<b><a href="CppConst.htm">const</a></b> Noise<a href="CppFunctionParser.htm">FunctionParser</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;Noise<a href="CppFunctionParser.htm">FunctionParser</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> Noise<a href="CppFunctionParser.htm">FunctionParser</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate the y <b><a href="CppFor.htm">for</a></b> 'y <a href="CppOperatorAssign.htm">=</a> f(x)'<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> Evaluate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppFunctionParser.htm">FunctionParser</a>&gt; m_parser;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppDouble.htm">double</a></b> MyRand(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> * <b><a href="CppConst.htm">const</a></b> max);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> NOISEFUNCTIONPARSER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/noisefunctionparser.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/noisefunctionparser.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "noise<a href="CppFunction.htm">function</a>parser.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>Warp's <a href="CppFunctionParser.htm">function parser</a><br/>
<a href="CppInclude.htm">#include</a> "fparser.hh"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Noise<a href="CppFunctionParser.htm">FunctionParser</a>::Noise<a href="CppFunctionParser.htm">FunctionParser</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; my_function,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; variable_name)<br/>
&nbsp;&nbsp;: m_parser(<b><a href="CppNew.htm">new</a></b> <a href="CppFunctionParser.htm">FunctionParser</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_parser);<br/>
&nbsp;&nbsp;m_parser-&gt;<a href="CppAdd.htm">Add</a><a href="CppFunction.htm">Function</a>("rand",MyRand,1);<br/>
&nbsp;&nbsp;m_parser-&gt;Parse(my_function,variable_name);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_parser-&gt;GetParseErrorType()<a href="CppOperatorNotEqual.htm">!=</a> <a href="CppFunctionParser.htm">FunctionParser</a>::FP_NO_ERROR)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> error<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "Input<a href="CppFunctionParser.htm">FunctionParser</a> cannot parse '"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> my_function<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "' with variable '"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> variable_name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "'";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdRuntime_error.htm">std::runtime_error</a>(error.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::Noise<a href="CppFunctionParser.htm">FunctionParser</a>::Evaluate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> xs[1] <a href="CppOperatorAssign.htm">=</a> { x };<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y <a href="CppOperatorAssign.htm">=</a> m_parser-&gt;Eval(xs);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> y;<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::Noise<a href="CppFunctionParser.htm">FunctionParser</a>::MyRand(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> * <b><a href="CppConst.htm">const</a></b> max)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(max);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (*max) * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>()) <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppStateObserver.htm">StateObserver</a>, <a href="Tools.htm">tool</a> to examine state observers<br/>
Copyright (C) 2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolStateObserver.htm">stateobserver</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/qtstateobservermaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/qtstateobservermaindialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTSTATEOBSERVERMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTSTATEOBSERVERMAINDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolStateObserver.htm">stateobserver</a>fwd.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> LsqFilter;<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> SlsqFilter;<br/>
<a href="CppComment.htm">//</a><b><a href="CppStruct.htm">struct</a></b> SymmetricLsqFilter;<br/>
<b><a href="CppStruct.htm">struct</a></b> QwtPlotCurve;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaFilter&gt; CreateAlphaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaBetaFilter&gt; CreateAlphaBetaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaBetaGammaFilter&gt; CreateAlphaBetaGammaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a>AlphaFilter&gt; CreateLsqFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter&gt; CreateSlsqFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MultiAlphaFilter&gt; CreateMultiAlphaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; CreateMiso() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> CreateDt() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> 1.0; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Run() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rerun_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog *ui;<br/>
<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_inputs;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_alpha;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_alpha_beta;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_alpha_beta_gamma;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_lsq;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_slsq;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_ma;<br/>
&nbsp;&nbsp;QwtPlotCurve * <b><a href="CppConst.htm">const</a></b> m_curve_outputs_miso;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTSTATEOBSERVERMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/qtstateobservermaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/qtstateobservermaindialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolStateObserver.htm">stateobserver</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qwt_legend.h"<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot.h"<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot_curve.h"<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot_grid.h"<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot_zoomer.h"<br/>
<a href="CppInclude.htm">#include</a> "qwt_plot_panner.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "alphabetafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "alphabetagammafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "alphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppInt.htm">integer</a>alphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppInt.htm">integer</a>symmetricalphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "multialphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "multi<a href="CppInt.htm">integer</a><a href="ToolStateObserver.htm">stateobserver</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "noise<a href="CppFunction.htm">function</a>parser.h"<br/>
<a href="CppInclude.htm">#include</a> "slidingmodeobserver.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolStateObserver.htm">stateobserver</a>maindialog.h"<br/>
<br/>
<a href="CppPreIf.htm">#if</a> QWT_VERSION <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0x060100<br/>
<a href="CppInclude.htm">#include</a> &lt;qwt_<a href="CppPointer.htm">point</a>_data.h&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog(<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_inputs(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Inputs")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Alpha filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Alpha beta filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Alpha beta gamma filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("LSQ filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("SLSQ filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_ma(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Multi alpha filter estimations")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso(<b><a href="CppNew.htm">new</a></b> QwtPlotCurve("Multi <a href="CppInt.htm">integer</a> state observer estimations"))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
&nbsp;&nbsp;ui-&gt;plot-&gt;set<a href="CppCanvas.htm">Canvas</a>Background(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>(255,255,255)));<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;ui-&gt;plot-&gt;set<a href="CppCanvas.htm">Canvas</a>Background(<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;plot-&gt;setAxisAutoScale(QwtPlot::xBottom);<br/>
&nbsp;&nbsp;ui-&gt;plot-&gt;setAxisAutoScale(QwtPlot::yLeft);<br/>
<br/>
&nbsp;&nbsp;m_curve_inputs-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;m_curve_inputs-&gt;setStyle(QwtPlotCurve::Dots);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>(0,0,0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidth(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_inputs-&gt;setPen(pen);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_curve_outputs_alpha-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(196,0,0)));<br/>
<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(255,127,0)));<br/>
<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(212,212,0)));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>LSQ<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>(0,196,0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidth(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setDashPattern( {2.0,2.0} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setPen(pen);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>SLSQ<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>(0,196,196));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidth(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setDashPattern( {2.0,3.0} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setPen(pen);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_curve_outputs_ma-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;m_curve_outputs_ma-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;m_curve_outputs_ma-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,212)));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>MI<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso-&gt;attach(ui-&gt;plot);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso-&gt;setStyle(QwtPlotCurve::Lines);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>(196,0,196));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidth(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setDashPattern( {3.0,3.0} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso-&gt;setPen(pen);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> grid<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QwtPlotGrid * <b><a href="CppConst.htm">const</a></b> grid <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QwtPlotGrid;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;grid-&gt;setPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;grid-&gt;attach(ui-&gt;plot);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> zoomer<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> QwtPlotZoomer(ui-&gt;plot-&gt;canvas());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> panner<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;QwtPlotPanner * <b><a href="CppConst.htm">const</a></b> panner <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QwtPlotPanner(ui-&gt;plot-&gt;canvas());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;panner-&gt;setMouseButton(<a href="CppQt.htm">Qt</a>::MiddleButton);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> legend<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QwtLegend * <b><a href="CppConst.htm">const</a></b> legend <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QwtLegend;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;legend-&gt;setFrameStyle(QFrame::Box|QFrame::Sunken);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;plot-&gt;insertLegend(legend, QwtPlot::RightLegend);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_alpha_a,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_alpha_ab,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_alpha_abg,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_beta_ab,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_beta_abg,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_gamma_abg,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_lsq_shift,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;check_miso_1,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;check_miso_2,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_slsq_shift,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_miso_shift_1,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_miso_shift_2,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_<a href="CppTime.htm">time</a>steps,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_noise,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_ma_1,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_ma_2,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppDouble.htm">double</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupbox_abg,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupbox_alpha,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupbox_beta,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupbox_lsq,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupBox_ma,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupBox_miso,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;groupBox_slsq,<a href="CppSignalMacro.htm">SIGNAL</a>(clicked()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(Run()));<br/>
<br/>
&nbsp;&nbsp;Run();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::~<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::AlphaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateAlphaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> alpha&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ui-&gt;box_alpha_a-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dt <a href="CppOperatorAssign.htm">=</a> CreateDt();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> AlphaFilter(alpha,dt));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::AlphaBetaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateAlphaBetaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> alpha <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_alpha_ab-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> beta <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_beta_ab-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dt <a href="CppOperatorAssign.htm">=</a> CreateDt();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaBetaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> AlphaBetaFilter(alpha,beta,dt));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::AlphaBetaGammaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateAlphaBetaGammaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> alpha <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_alpha_abg-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> beta <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_beta_abg-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> gamma <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_gamma_abg-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dt <a href="CppOperatorAssign.htm">=</a> CreateDt();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;AlphaBetaGammaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> AlphaBetaGammaFilter(alpha,beta,gamma,dt));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppInt.htm">Integer</a>AlphaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateLsqFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> shift_lsq <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_lsq_shift-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a>AlphaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>AlphaFilter(shift_lsq));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateSlsqFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> shift_slsq <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_slsq_shift-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter(shift_slsq));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::MultiAlphaFilter&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateMultiAlphaFilter() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ma_1 <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_ma_1-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ma_2 <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_ma_2-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; alphas <a href="CppOperatorAssign.htm">=</a> { ma_1, ma_2 };<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;MultiAlphaFilter&gt; filter(<b><a href="CppNew.htm">new</a></b> MultiAlphaFilter(alphas));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::CreateMiso() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; &gt; state_observers;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> is_symmetric <a href="CppOperatorAssign.htm">=</a> ui-&gt;check_miso_1-&gt;isChecked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> alpha <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_miso_shift_1-&gt;value();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; state_observer;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!is_symmetric) state_observer.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>AlphaFilter(alpha));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> state_observer.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter(alpha));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(state_observer);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;state_observers.push_back(state_observer);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> is_symmetric <a href="CppOperatorAssign.htm">=</a> ui-&gt;check_miso_2-&gt;isChecked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> alpha <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_miso_shift_2-&gt;value();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; state_observer;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!is_symmetric) state_observer.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>AlphaFilter(alpha));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> state_observer.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter(alpha));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(state_observer);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;state_observers.push_back(state_observer);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>&gt; filter(<b><a href="CppNew.htm">new</a></b> Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>(state_observers));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::Run() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppTime.htm">time</a>steps <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_<a href="CppTime.htm">time</a>steps-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> noise_function_str <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_noise-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Noise<a href="CppFunctionParser.htm">FunctionParser</a>(noise_function_str,"t");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdRuntime_error.htm">std::runtime_error</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Invalid <a href="CppFunction.htm">function</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;Noise<a href="CppFunctionParser.htm">FunctionParser</a> noise_function(noise_function_str,"t");<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; inputs;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_alpha;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_alpha_beta;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_alpha_beta_gamma;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_lsq;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_slsq;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_ma;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; outputs_miso;<br/>
<br/>
&nbsp;&nbsp;ui-&gt;label_value_dt_a-&gt;setText(<a href="CppQString.htm">QString</a>::number(CreateDt()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Use filters<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_alpha <a href="CppOperatorAssign.htm">=</a> CreateAlphaFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_alpha_beta <a href="CppOperatorAssign.htm">=</a> CreateAlphaBetaFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_alpha_beta_gamma <a href="CppOperatorAssign.htm">=</a> CreateAlphaBetaGammaFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_lsq <a href="CppOperatorAssign.htm">=</a> CreateLsqFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_slsq <a href="CppOperatorAssign.htm">=</a> CreateSlsqFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_ma <a href="CppOperatorAssign.htm">=</a> CreateMultiAlphaFilter();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filter_miso <a href="CppOperatorAssign.htm">=</a> CreateMiso();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> t=0; t<a href="CppOperatorNotEqual.htm">!=</a><a href="CppTime.htm">time</a>steps; <a href="CppOperatorIncrement.htm">++</a>t)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> measurement <a href="CppOperatorAssign.htm">=</a> noise_function.Evaluate(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(t));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_alpha-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_alpha_beta-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_alpha_beta_gamma-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_lsq-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_slsq-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_ma-&gt;Update(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_miso-&gt;Update(measurement);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_alpha&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> filter_alpha-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_alpha_beta&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> filter_alpha_beta-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_alpha_beta_gamma <a href="CppOperatorAssign.htm">=</a> filter_alpha_beta_gamma-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_lsq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> filter_lsq-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_slsq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> filter_slsq-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_ma&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> filter_ma-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> output_miso&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> filter_miso-&gt;GetEstimate();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputs.push_back(measurement);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_alpha.push_back(output_alpha);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_alpha_beta.push_back(output_alpha_beta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_alpha_beta_gamma.push_back(output_alpha_beta_gamma);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_lsq.push_back(output_lsq);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_slsq.push_back(output_slsq);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_ma.push_back(output_ma);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputs_miso.push_back(output_miso);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Clear all plots<br/>
&nbsp;&nbsp;<a href="CppPreIf.htm">#if</a> (QWT_VERSION <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0x060000)<br/>
&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_ma-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;m_curve_outputs_miso-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(0,0,0));<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_ma-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;m_curve_outputs_miso-&gt;setData(0,0,0);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Plot<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; <a href="CppTime.htm">time</a>series;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a><a href="CppTime.htm">time</a>steps; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">time</a>series.push_back(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreIf.htm">#if</a> (QWT_VERSION <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0x060000)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_inputs-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;inputs[0],inputs.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_alpha-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha[0],outputs_alpha.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_beta-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha_beta[0],outputs_alpha_beta.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_abg-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha_beta_gamma[0],outputs_alpha_beta_gamma.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_lsq-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_lsq[0],outputs_lsq.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_slsq-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_slsq[0],outputs_slsq.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_ma-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_ma-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_ma[0],outputs_ma.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_miso-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso-&gt;setData(<b><a href="CppNew.htm">new</a></b> Qwt<a href="CppPoint.htm">Point</a><a href="CppArray.htm">Array</a>Data(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_miso[0],outputs_miso.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_curve_inputs-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;inputs[0],inputs.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_alpha-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha[0],outputs_alpha.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_beta-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha_beta[0],outputs_alpha_beta.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_abg-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_alpha_beta_gamma-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_alpha_beta_gamma[0],outputs_alpha_beta_gamma.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupbox_lsq-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_lsq-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_lsq[0],outputs_lsq.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_slsq-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_slsq-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_slsq[0],outputs_slsq.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_ma-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_ma-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_ma[0],outputs_ma.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;groupBox_miso-&gt;isChecked())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_curve_outputs_miso-&gt;setData(&amp;<a href="CppTime.htm">time</a>series[0],&amp;outputs_miso[0],outputs_miso.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;plot-&gt;replot();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::on_button_rerun_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Run();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/qtstateobservermenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/qtstateobservermenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTSTATEOBSERVERMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTSTATEOBSERVERMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTSTATEOBSERVERMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/qtstateobservermenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/qtstateobservermenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolStateObserver.htm">stateobserver</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolStateObserver.htm">stateobserver</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolStateObserver.htm">stateobserver</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolStateObserver.htm">stateobserver</a>menudialog.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) <b><a href="CppNoexcept.htm">noexcept</a></b> :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::~<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::on_button_start_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MainDialog d;<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;d.setWindowIcon(<b><a href="CppThis.htm">this</a></b>-&gt;windowIcon());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a <a href="CppOperatorAssign.htm">=</a> <a href="CppStateObserver.htm">StateObserver</a>MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(a);<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;d.setWindowIcon(<b><a href="CppThis.htm">this</a></b>-&gt;windowIcon());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::on_button_quit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/slidingmodeobserver.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/slidingmodeobserver.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> SLIDINGMODEOBSERVER_H<br/>
<a href="CppDefine.htm">#define</a> SLIDINGMODEOBSERVER_H<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> TRY_GETTING_SLIDINGMODEOBSERVER_RIGHT_ONCE_8234752798253978650738<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/<a href="CppUblas.htm">ublas</a>/<a href="CppMatrix.htm">matrix</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/<a href="CppUblas.htm">ublas</a>/vector.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>;<br/>
<br/>
<a href="CppComment.htm">///</a>Keeps two states only<br/>
<b><a href="CppStruct.htm">struct</a></b> SlidingModeObserver<br/>
{<br/>
&nbsp;&nbsp;SlidingModeObserver(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> measurement);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>&gt; m_filter;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>&gt; CreateFilter(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create the control <a href="CppMatrix.htm">matrix</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; CreateControl(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create the initial covariance <a href="CppMatrix.htm">matrix</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; CreateInitialCovariance(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create the observation <a href="CppMatrix.htm">matrix</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; CreateObservation(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create the state transition <a href="CppMatrix.htm">matrix</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; Create<a href="CppState.htm">State</a>Transition(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d);<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> SLIDINGMODEOBSERVER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/slidingmodeobserver.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/slidingmodeobserver.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "slidingmodeobserver.h"<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> TRY_GETTING_SLIDINGMODEOBSERVER_RIGHT_ONCE_8234752798253978650738<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/<a href="CppUblas.htm">ublas</a>/io.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppKalmanFilter.htm">kalmanfilter</a>example.h"<br/>
<a href="CppInclude.htm">#include</a> "steadystate<a href="CppKalmanFilter.htm">kalmanfilter</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "steadystate<a href="CppKalmanFilter.htm">kalmanfilter</a>factory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
SlidingModeObserver::SlidingModeObserver(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d)<br/>
&nbsp;&nbsp;: m_filter(CreateFilter(2,d))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_control(CreateControl(2)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_state_estimates(<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(2,0.0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_state_transition(Create<a href="CppState.htm">State</a>Transition(2,d))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter-&gt;Get<a href="CppState.htm">State</a>Size() <a href="CppOperatorEqual.htm">==</a> 2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Only support two state estimates");<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>&gt; SlidingModeObserver::CreateFilter(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> )<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(size <a href="CppOperatorEqual.htm">==</a> 2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Only support two state estimates");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppKalmanFilter.htm">KalmanFilter</a>Example&gt; example <a href="CppOperatorAssign.htm">=</a> <a href="CppKalmanFilter.htm">KalmanFilter</a>Example::CreateExample9();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(example);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; control<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;GetControl();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; initial_state_estimate<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(2, <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>) );<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(initial_state_estimate(0) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(initial_state_estimate(1) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;GetInitial<a href="CppState.htm">State</a>Estimate();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; observation<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;GetObservation();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; state_transition<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;Get<a href="CppState.htm">State</a>Transition();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; initial_covariance<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;GetInitialCovarianceEstimate();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; measurement_noise<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> example-&gt;Get<a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters()-&gt;GetEstimatedMeasurementNoise();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; estimated_optimal_kalman_gain<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters::CalculateOptimalKalmanGain(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initial_covariance,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measurement_noise,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;observation,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_transition<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters&gt; parameters(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>Parameters(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;control,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimated_optimal_kalman_gain,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initial_state_estimate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;observation,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_transition<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(parameters);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>&gt; filter<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> Steady<a href="CppState.htm">State</a><a href="CppKalmanFilter.htm">KalmanFilter</a>Factory::Create(parameters);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filter);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Give the filter a head start<br/>
&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; measurements(2,0.0);<br/>
&nbsp;&nbsp;measurements(1) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; input(2,0.0);<br/>
&nbsp;&nbsp;filter-&gt;SupplyMeasurementAndInput(measurements,input);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> filter;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; SlidingModeObserver::CreateControl(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(size <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m(2,2,0.0);<br/>
&nbsp;&nbsp;m(0,0) <a href="CppOperatorAssign.htm">=</a> 1.0;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; SlidingModeObserver::CreateInitialCovariance(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::zero_<a href="CppMatrix.htm">matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(size);<br/>
&nbsp;&nbsp;m(0,0) <a href="CppOperatorAssign.htm">=</a> 1.0;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; SlidingModeObserver::CreateObservation(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::identity_<a href="CppMatrix.htm">matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(size,size);<br/>
&nbsp;&nbsp;m(0,0) <a href="CppOperatorAssign.htm">=</a> 1.0;<br/>
&nbsp;&nbsp;m(1,1) <a href="CppOperatorAssign.htm">=</a> 1.0;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; SlidingModeObserver::Create<a href="CppState.htm">State</a>Transition(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> size, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(size <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d <a href="CppOperatorLessEqual.htm">&lt;=</a> 1.0);<br/>
&nbsp;&nbsp;<a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m(2,2,0.0);<br/>
&nbsp;&nbsp;m(0,0) <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorMinus.htm">-</a> d;<br/>
&nbsp;&nbsp;m(1,0) <a href="CppOperatorAssign.htm">=</a> 0.0 <a href="CppOperatorPlus.htm">+</a> d;<br/>
&nbsp;&nbsp;m(0,1) <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;m(1,1) <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorMinus.htm">-</a> d;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> SlidingModeObserver::Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> measurement)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; input <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::zero_vector&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; prediction <a href="CppOperatorAssign.htm">=</a> m_filter-&gt;Predict<a href="CppState.htm">State</a>(input);<br/>
<br/>
&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; measurements <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::zero_vector&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>measurements(0) <a href="CppOperatorAssign.htm">=</a> measurement;<br/>
&nbsp;&nbsp;measurements(0) <a href="CppOperatorAssign.htm">=</a> measurement;<br/>
<br/>
&nbsp;&nbsp;m_filter-&gt;SupplyMeasurementAndInput(measurements,input);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> prediction(1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_state_estimates.size() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; input_vector(2,0.0);<br/>
&nbsp;&nbsp;input_vector(0) <a href="CppOperatorAssign.htm">=</a> input;<br/>
<br/>
&nbsp;&nbsp;m_state_estimates<br/>
&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::prod(m_state_transition,m_state_estimates)<br/>
&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostUblas.htm">boost::numeric::ublas</a>::prod(m_control,input_vector);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_state_estimates(1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/slsqfilter.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/slsqfilter.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> SLSQFILTER_H<br/>
<a href="CppDefine.htm">#define</a> SLSQFILTER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCinttypesH.htm">cinttypes</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Symmetric LSQ filter<br/>
<b><a href="CppStruct.htm">struct</a></b> SlsqFilter<br/>
{<br/>
&nbsp;&nbsp;SlsqFilter(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> filter_shift,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_active <a href="CppOperatorAssign.htm">=</a> 0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_hidden <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t measurement);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_filter_shift;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t m_value_active;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b>64_t m_value_hidden;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> SLSQFILTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/slsqfilter.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/slsqfilter.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "slsqfilter.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::SlsqFilter::SlsqFilter(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> filter_shift,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_active,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t value_hidden)<br/>
&nbsp;&nbsp;: m_filter_shift(filter_shift),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_value_active(value_active),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_value_hidden(value_hidden)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter_shift <a href="CppOperatorGreaterEqual.htm">&gt;=</a>&nbsp;&nbsp;0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A bitshift should not be done with negative values");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_filter_shift <a href="CppOperatorLessEqual.htm">&lt;=</a> 63 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "An <b><a href="CppInt.htm">int</a></b> can maximally be shifted 63 bits to the right");<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b>64_t <a href="CppRibi.htm">ribi</a>::SlsqFilter::Estimate(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t measurement)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t delta_1 <a href="CppOperatorAssign.htm">=</a> ((measurement&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> m_value_hidden) <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_filter_shift);<br/>
&nbsp;&nbsp;m_value_hidden <a href="CppOperatorPlusAssign.htm">+=</a> delta_1 <a href="CppOperatorPlus.htm">+</a> (delta_1 <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> measurement&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> m_value_hidden &gt; 0 ? 1 : 0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>64_t delta_2 <a href="CppOperatorAssign.htm">=</a> ((m_value_hidden <a href="CppOperatorMinus.htm">-</a> m_value_active) <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> m_filter_shift);<br/>
&nbsp;&nbsp;m_value_active <a href="CppOperatorPlusAssign.htm">+=</a> delta_2 <a href="CppOperatorPlus.htm">+</a> (delta_2 <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> m_value_hidden <a href="CppOperatorMinus.htm">-</a> m_value_active &gt; 0 ? 1 : 0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_value_active;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/stateobservermenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/stateobservermenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppStateObserver.htm">StateObserver</a>, <a href="Tools.htm">tool</a> to examine state observers<br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> TESTSTATEOBSERVERMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TESTSTATEOBSERVERMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppStateObserver.htm">StateObserver</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTSTATEOBSERVERMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/stateobservermenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/stateobservermenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppStateObserver.htm">StateObserver</a>, <a href="Tools.htm">tool</a> to examine state observers<br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolStateObserver.htm">stateobserver</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "alphabetafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "alphabetagammafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "alphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppInt.htm">integer</a>alphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppInt.htm">integer</a><a href="ToolStateObserver.htm">stateobserver</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppInt.htm">integer</a>symmetricalphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "multialphafilter.h"<br/>
<a href="CppInclude.htm">#include</a> "multi<a href="CppInt.htm">integer</a><a href="ToolStateObserver.htm">stateobserver</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppStateObserver.htm">StateObserver</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to examine state observers",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 12th of July 2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("AlphaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> AlphaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("AlphaBetaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> AlphaBetaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("AlphaBetaGammaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> AlphaBetaGammaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppInt.htm">Integer</a>AlphaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppInt.htm">Integer</a>AlphaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppInt.htm">Integer</a>SymmetricalAlphaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("MultiAlphaFilter <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> MultiAlphaFilter::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> Multi<a href="CppInt.htm">Integer</a><a href="CppStateObserver.htm">StateObserver</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTrace.htm">Trace</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.htm">Trace</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="CppStateObserver.htm">StateObserver</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.3";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-05-25: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-06-04: <a href="CppVersion.htm">version</a> 1.1: added more state observers, allow plotting of subset of state observers",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-06-17: <a href="CppVersion.htm">version</a> 1.1: improved menu screen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-07-12: <a href="CppVersion.htm">version</a> 1.2: transitioned to <a href="CppQt.htm">Qt</a>5 and <a href="CppBoost.htm">Boost</a> 1.54.0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-11-05: <a href="CppVersion.htm">version</a> 1.3: conformized <b><a href="CppFor.htm">for</a></b> <a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Console"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppStateObserver.htm">StateObserver</a>MenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/crosscompiletowindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/crosscompiletowindows.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#From http://richelbilderbeek.nl/CppQtCrosscompileToWindowsExample15.htm<br/>
<br/>
echo "Cross compiling to Windows"<br/>
<br/>
echo "1/2: Creating Windows makefile"<br/>
i686-pc-mingw32-qmake ToolStateObserverDesktop.pro<br/>
<br/>
echo "2/2: making makefile"<br/>
<br/>
make<br/>
<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolStateObserver/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolStateObserver/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
# Created from file '../../Tools/ToolStateObserver/ToolStateObserverDesktop.pro'<br/>
<br/>
echo "Creating of all folders"<br/>
<br/>
mkdir Projects<br/>
mkdir Projects/Tools<br/>
mkdir Projects/Classes<br/>
mkdir Projects/Libraries<br/>
mkdir Projects/Classes/CppAbout<br/>
mkdir Projects/Classes/CppTrace<br/>
mkdir Projects/Classes/CppMatrix<br/>
mkdir Projects/Classes/CppQtModel<br/>
mkdir Projects/Libraries/qwt-6.0.1<br/>
mkdir Projects/Libraries/fparser4.5.1<br/>
mkdir Projects/Classes/CppKalmanFilter<br/>
mkdir Projects/Libraries/qwt-6.0.1/src<br/>
mkdir Projects/Tools/ToolStateObserver<br/>
mkdir Projects/Classes/CppQtAboutDialog<br/>
mkdir Projects/Classes/CppStateObserver<br/>
mkdir Projects/Classes/ToolStateObserver<br/>
mkdir Projects/Libraries/qwt-6.0.1/include<br/>
mkdir Projects/Classes/CppQtHideAndShowDialog<br/>
mkdir Projects/Libraries/fparser4.5.1/extrasrc<br/>
<br/>
echo "Copying files"<br/>
<br/>
cp ../../Classes/CppAbout/about.h Projects/Classes/CppAbout/about.h<br/>
cp ../../Classes/CppTrace/trace.h Projects/Classes/CppTrace/trace.h<br/>
cp ../../Classes/CppAbout/about.cpp Projects/Classes/CppAbout/about.cpp<br/>
cp ../../Classes/CppMatrix/matrix.h Projects/Classes/CppMatrix/matrix.h<br/>
cp ../../Classes/CppAbout/Licence.txt Projects/Classes/CppAbout/Licence.txt<br/>
cp ../../Classes/CppMatrix/matrix.cpp Projects/Classes/CppMatrix/matrix.cpp<br/>
cp ../../Classes/CppTrace/Licence.txt Projects/Classes/CppTrace/Licence.txt<br/>
cp ../../Classes/CppMatrix/Licence.txt Projects/Classes/CppMatrix/Licence.txt<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt.h Projects/Libraries/qwt-6.0.1/src/qwt.h<br/>
cp ../../Tools/ToolStateObserver/zip.sh Projects/Tools/ToolStateObserver/zip.sh<br/>
cp ../../Libraries/fparser4.5.1/fparser.cc Projects/Libraries/fparser4.5.1/fparser.cc<br/>
cp ../../Libraries/fparser4.5.1/fparser.hh Projects/Libraries/fparser4.5.1/fparser.hh<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt.h Projects/Libraries/qwt-6.0.1/include/qwt.h<br/>
cp ../../Libraries/fparser4.5.1/fpconfig.hh Projects/Libraries/fparser4.5.1/fpconfig.hh<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dial.h Projects/Libraries/qwt-6.0.1/src/qwt_dial.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_knob.h Projects/Libraries/qwt-6.0.1/src/qwt_knob.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_math.h Projects/Libraries/qwt-6.0.1/src/qwt_math.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot.h Projects/Libraries/qwt-6.0.1/src/qwt_plot.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text.h Projects/Libraries/qwt-6.0.1/src/qwt_text.h<br/>
cp ../../Tools/ToolStateObserver/qtmain.cpp Projects/Tools/ToolStateObserver/qtmain.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_wheel.h Projects/Libraries/qwt-6.0.1/src/qwt_wheel.h<br/>
cp ../../Tools/ToolStateObserver/lsqfilter.h Projects/Tools/ToolStateObserver/lsqfilter.h<br/>
cp ../../Classes/CppQtAboutDialog/Licence.txt Projects/Classes/CppQtAboutDialog/Licence.txt<br/>
cp ../../Classes/CppStateObserver/Licence.txt Projects/Classes/CppStateObserver/Licence.txt<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_compat.h Projects/Libraries/qwt-6.0.1/src/qwt_compat.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dial.cpp Projects/Libraries/qwt-6.0.1/src/qwt_dial.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_global.h Projects/Libraries/qwt-6.0.1/src/qwt_global.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_knob.cpp Projects/Libraries/qwt-6.0.1/src/qwt_knob.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_legend.h Projects/Libraries/qwt-6.0.1/src/qwt_legend.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_math.cpp Projects/Libraries/qwt-6.0.1/src/qwt_math.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_panner.h Projects/Libraries/qwt-6.0.1/src/qwt_panner.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_picker.h Projects/Libraries/qwt-6.0.1/src/qwt_picker.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_slider.h Projects/Libraries/qwt-6.0.1/src/qwt_slider.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_spline.h Projects/Libraries/qwt-6.0.1/src/qwt_spline.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_symbol.h Projects/Libraries/qwt-6.0.1/src/qwt_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text.cpp Projects/Libraries/qwt-6.0.1/src/qwt_text.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_thermo.h Projects/Libraries/qwt-6.0.1/src/qwt_thermo.h<br/>
cp ../../Classes/ToolStateObserver/Licence.txt Projects/Classes/ToolStateObserver/Licence.txt<br/>
cp ../../Libraries/fparser4.5.1/fpoptimizer.cc Projects/Libraries/fparser4.5.1/fpoptimizer.cc<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_clipper.h Projects/Libraries/qwt-6.0.1/src/qwt_clipper.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_compass.h Projects/Libraries/qwt-6.0.1/src/qwt_compass.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_counter.h Projects/Libraries/qwt-6.0.1/src/qwt_counter.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_painter.h Projects/Libraries/qwt-6.0.1/src/qwt_painter.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_wheel.cpp Projects/Libraries/qwt-6.0.1/src/qwt_wheel.cpp<br/>
cp ../../Tools/ToolStateObserver/lsqfilter.cpp Projects/Tools/ToolStateObserver/lsqfilter.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilter.h Projects/Classes/CppKalmanFilter/kalmanfilter.h<br/>
cp ../../Classes/CppStateObserver/alphafilter.h Projects/Classes/CppStateObserver/alphafilter.h<br/>
cp ../../Libraries/fparser4.5.1/fparser_mpfr.hh Projects/Libraries/fparser4.5.1/fparser_mpfr.hh<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_dial.h Projects/Libraries/qwt-6.0.1/include/qwt_dial.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_knob.h Projects/Libraries/qwt-6.0.1/include/qwt_knob.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_math.h Projects/Libraries/qwt-6.0.1/include/qwt_math.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot.h Projects/Libraries/qwt-6.0.1/include/qwt_plot.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_text.h Projects/Libraries/qwt-6.0.1/include/qwt_text.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_interval.h Projects/Libraries/qwt-6.0.1/src/qwt_interval.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_legend.cpp Projects/Libraries/qwt-6.0.1/src/qwt_legend.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_panner.cpp Projects/Libraries/qwt-6.0.1/src/qwt_panner.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_picker.cpp Projects/Libraries/qwt-6.0.1/src/qwt_picker.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_point_3d.h Projects/Libraries/qwt-6.0.1/src/qwt_point_3d.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_slider.cpp Projects/Libraries/qwt-6.0.1/src/qwt_slider.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_spline.cpp Projects/Libraries/qwt-6.0.1/src/qwt_spline.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_symbol.cpp Projects/Libraries/qwt-6.0.1/src/qwt_symbol.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_thermo.cpp Projects/Libraries/qwt-6.0.1/src/qwt_thermo.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_wheel.h Projects/Libraries/qwt-6.0.1/include/qwt_wheel.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_clipper.cpp Projects/Libraries/qwt-6.0.1/src/qwt_clipper.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_color_map.h Projects/Libraries/qwt-6.0.1/src/qwt_color_map.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_compass.cpp Projects/Libraries/qwt-6.0.1/src/qwt_compass.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_counter.cpp Projects/Libraries/qwt-6.0.1/src/qwt_counter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_magnifier.h Projects/Libraries/qwt-6.0.1/src/qwt_magnifier.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_painter.cpp Projects/Libraries/qwt-6.0.1/src/qwt_painter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_dict.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_dict.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_grid.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_grid.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_item.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_item.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_div.h Projects/Libraries/qwt-6.0.1/src/qwt_scale_div.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_map.h Projects/Libraries/qwt-6.0.1/src/qwt_scale_map.h<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilter.cpp Projects/Classes/CppKalmanFilter/kalmanfilter.cpp<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.h Projects/Classes/CppQtAboutDialog/qtaboutdialog.h<br/>
cp ../../Classes/CppQtModel/modelfunctionparser.h Projects/Classes/CppQtModel/modelfunctionparser.h<br/>
cp ../../Classes/CppStateObserver/alphafilter.cpp Projects/Classes/CppStateObserver/alphafilter.cpp<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fpaux.hh Projects/Libraries/fparser4.5.1/extrasrc/fpaux.hh<br/>
cp ../../Libraries/fparser4.5.1/fparser_gmpint.hh Projects/Libraries/fparser4.5.1/fparser_gmpint.hh<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_compat.h Projects/Libraries/qwt-6.0.1/include/qwt_compat.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_global.h Projects/Libraries/qwt-6.0.1/include/qwt_global.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_legend.h Projects/Libraries/qwt-6.0.1/include/qwt_legend.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_panner.h Projects/Libraries/qwt-6.0.1/include/qwt_panner.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_picker.h Projects/Libraries/qwt-6.0.1/include/qwt_picker.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_slider.h Projects/Libraries/qwt-6.0.1/include/qwt_slider.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_spline.h Projects/Libraries/qwt-6.0.1/include/qwt_spline.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_symbol.h Projects/Libraries/qwt-6.0.1/include/qwt_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_thermo.h Projects/Libraries/qwt-6.0.1/include/qwt_thermo.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_interval.cpp Projects/Libraries/qwt-6.0.1/src/qwt_interval.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_curve.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_curve.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_xml.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_xml.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_point_3d.cpp Projects/Libraries/qwt-6.0.1/src/qwt_point_3d.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_draw.h Projects/Libraries/qwt-6.0.1/src/qwt_scale_draw.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text_label.h Projects/Libraries/qwt-6.0.1/src/qwt_text_label.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.ui Projects/Classes/CppQtAboutDialog/qtaboutdialog.ui<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_clipper.h Projects/Libraries/qwt-6.0.1/include/qwt_clipper.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_compass.h Projects/Libraries/qwt-6.0.1/include/qwt_compass.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_counter.h Projects/Libraries/qwt-6.0.1/include/qwt_counter.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_painter.h Projects/Libraries/qwt-6.0.1/include/qwt_painter.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_color_map.cpp Projects/Libraries/qwt-6.0.1/src/qwt_color_map.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dial_needle.h Projects/Libraries/qwt-6.0.1/src/qwt_dial_needle.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_legend_item.h Projects/Libraries/qwt-6.0.1/src/qwt_legend_item.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_magnifier.cpp Projects/Libraries/qwt-6.0.1/src/qwt_magnifier.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_axis.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_axis.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_canvas.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_canvas.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_dict.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_dict.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_grid.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_grid.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_item.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_item.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_layout.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_layout.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_marker.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_marker.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_panner.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_panner.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_picker.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_picker.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_zoomer.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_zoomer.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_point_polar.h Projects/Libraries/qwt-6.0.1/src/qwt_point_polar.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_raster_data.h Projects/Libraries/qwt-6.0.1/src/qwt_raster_data.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_div.cpp Projects/Libraries/qwt-6.0.1/src/qwt_scale_div.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_map.cpp Projects/Libraries/qwt-6.0.1/src/qwt_scale_map.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_series_data.h Projects/Libraries/qwt-6.0.1/src/qwt_series_data.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text_engine.h Projects/Libraries/qwt-6.0.1/src/qwt_text_engine.h<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltertype.h Projects/Classes/CppKalmanFilter/kalmanfiltertype.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.cpp Projects/Classes/CppQtAboutDialog/qtaboutdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/Licence.txt Projects/Classes/CppQtHideAndShowDialog/Licence.txt<br/>
cp ../../Classes/CppQtModel/modelfunctionparser.cpp Projects/Classes/CppQtModel/modelfunctionparser.cpp<br/>
cp ../../Classes/CppStateObserver/alphabetafilter.h Projects/Classes/CppStateObserver/alphabetafilter.h<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fptypes.hh Projects/Libraries/fparser4.5.1/extrasrc/fptypes.hh<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_interval.h Projects/Libraries/qwt-6.0.1/include/qwt_interval.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_point_3d.h Projects/Libraries/qwt-6.0.1/include/qwt_point_3d.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_analog_clock.h Projects/Libraries/qwt-6.0.1/src/qwt_analog_clock.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_arrow_button.h Projects/Libraries/qwt-6.0.1/src/qwt_arrow_button.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_compass_rose.h Projects/Libraries/qwt-6.0.1/src/qwt_compass_rose.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_curve_fitter.h Projects/Libraries/qwt-6.0.1/src/qwt_curve_fitter.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_double_range.h Projects/Libraries/qwt-6.0.1/src/qwt_double_range.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_curve.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_curve.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_draw.cpp Projects/Libraries/qwt-6.0.1/src/qwt_scale_draw.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_engine.h Projects/Libraries/qwt-6.0.1/src/qwt_scale_engine.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_widget.h Projects/Libraries/qwt-6.0.1/src/qwt_scale_widget.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_system_clock.h Projects/Libraries/qwt-6.0.1/src/qwt_system_clock.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text_label.cpp Projects/Libraries/qwt-6.0.1/src/qwt_text_label.cpp<br/>
cp ../../Classes/CppStateObserver/multialphafilter.h Projects/Classes/CppStateObserver/multialphafilter.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_color_map.h Projects/Libraries/qwt-6.0.1/include/qwt_color_map.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_magnifier.h Projects/Libraries/qwt-6.0.1/include/qwt_magnifier.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_dict.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_dict.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_grid.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_grid.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_item.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_item.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_scale_div.h Projects/Libraries/qwt-6.0.1/include/qwt_scale_div.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_scale_map.h Projects/Libraries/qwt-6.0.1/include/qwt_scale_map.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_column_symbol.h Projects/Libraries/qwt-6.0.1/src/qwt_column_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dial_needle.cpp Projects/Libraries/qwt-6.0.1/src/qwt_dial_needle.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_event_pattern.h Projects/Libraries/qwt-6.0.1/src/qwt_event_pattern.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_legend_item.cpp Projects/Libraries/qwt-6.0.1/src/qwt_legend_item.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_canvas.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_canvas.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_layout.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_layout.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_marker.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_marker.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_panner.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_panner.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_picker.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_picker.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_renderer.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_renderer.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_rescaler.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_rescaler.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_zoomer.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_zoomer.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_point_polar.cpp Projects/Libraries/qwt-6.0.1/src/qwt_point_polar.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_raster_data.cpp Projects/Libraries/qwt-6.0.1/src/qwt_raster_data.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_series_data.cpp Projects/Libraries/qwt-6.0.1/src/qwt_series_data.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_text_engine.cpp Projects/Libraries/qwt-6.0.1/src/qwt_text_engine.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltertype.cpp Projects/Classes/CppKalmanFilter/kalmanfiltertype.cpp<br/>
cp ../../Classes/CppStateObserver/alphabetafilter.cpp Projects/Classes/CppStateObserver/alphabetafilter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_curve.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_curve.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_scale_draw.h Projects/Libraries/qwt-6.0.1/include/qwt_scale_draw.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_text_label.h Projects/Libraries/qwt-6.0.1/include/qwt_text_label.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_scale.h Projects/Libraries/qwt-6.0.1/src/qwt_abstract_scale.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_analog_clock.cpp Projects/Libraries/qwt-6.0.1/src/qwt_analog_clock.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_arrow_button.cpp Projects/Libraries/qwt-6.0.1/src/qwt_arrow_button.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_compass_rose.cpp Projects/Libraries/qwt-6.0.1/src/qwt_compass_rose.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_curve_fitter.cpp Projects/Libraries/qwt-6.0.1/src/qwt_curve_fitter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_double_range.cpp Projects/Libraries/qwt-6.0.1/src/qwt_double_range.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dyngrid_layout.h Projects/Libraries/qwt-6.0.1/src/qwt_dyngrid_layout.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_picker_machine.h Projects/Libraries/qwt-6.0.1/src/qwt_picker_machine.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_histogram.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_histogram.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_magnifier.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_magnifier.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_scaleitem.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_scaleitem.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_engine.cpp Projects/Libraries/qwt-6.0.1/src/qwt_scale_engine.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_scale_widget.cpp Projects/Libraries/qwt-6.0.1/src/qwt_scale_widget.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_system_clock.cpp Projects/Libraries/qwt-6.0.1/src/qwt_system_clock.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterexample.h Projects/Classes/CppKalmanFilter/kalmanfilterexample.h<br/>
cp ../../Classes/CppStateObserver/multialphafilter.cpp Projects/Classes/CppStateObserver/multialphafilter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_dial_needle.h Projects/Libraries/qwt-6.0.1/include/qwt_dial_needle.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_legend_item.h Projects/Libraries/qwt-6.0.1/include/qwt_legend_item.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_canvas.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_canvas.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_layout.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_layout.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_marker.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_marker.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_panner.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_panner.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_picker.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_picker.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_zoomer.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_zoomer.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_point_polar.h Projects/Libraries/qwt-6.0.1/include/qwt_point_polar.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_raster_data.h Projects/Libraries/qwt-6.0.1/include/qwt_raster_data.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_series_data.h Projects/Libraries/qwt-6.0.1/include/qwt_series_data.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_text_engine.h Projects/Libraries/qwt-6.0.1/include/qwt_text_engine.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_slider.h Projects/Libraries/qwt-6.0.1/src/qwt_abstract_slider.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_column_symbol.cpp Projects/Libraries/qwt-6.0.1/src/qwt_column_symbol.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_event_pattern.cpp Projects/Libraries/qwt-6.0.1/src/qwt_event_pattern.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_interval_symbol.h Projects/Libraries/qwt-6.0.1/src/qwt_interval_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_rasteritem.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_rasteritem.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_renderer.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_renderer.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_rescaler.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_rescaler.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_seriesitem.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_seriesitem.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_sampling_thread.h Projects/Libraries/qwt-6.0.1/src/qwt_sampling_thread.h<br/>
cp ../../Tools/ToolStateObserver/ToolStateObserver.qrc Projects/Tools/ToolStateObserver/ToolStateObserver.qrc<br/>
cp ../../Tools/ToolStateObserver/noisefunctionparser.h Projects/Tools/ToolStateObserver/noisefunctionparser.h<br/>
cp ../../Tools/ToolStateObserver/slidingmodeobserver.h Projects/Tools/ToolStateObserver/slidingmodeobserver.h<br/>
cp ../../Classes/CppKalmanFilter/whitenoisesystemtype.h Projects/Classes/CppKalmanFilter/whitenoisesystemtype.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_analog_clock.h Projects/Libraries/qwt-6.0.1/include/qwt_analog_clock.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_arrow_button.h Projects/Libraries/qwt-6.0.1/include/qwt_arrow_button.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_compass_rose.h Projects/Libraries/qwt-6.0.1/include/qwt_compass_rose.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_curve_fitter.h Projects/Libraries/qwt-6.0.1/include/qwt_curve_fitter.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_double_range.h Projects/Libraries/qwt-6.0.1/include/qwt_double_range.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_scale_engine.h Projects/Libraries/qwt-6.0.1/include/qwt_scale_engine.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_scale_widget.h Projects/Libraries/qwt-6.0.1/include/qwt_scale_widget.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_system_clock.h Projects/Libraries/qwt-6.0.1/include/qwt_system_clock.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_scale.cpp Projects/Libraries/qwt-6.0.1/src/qwt_abstract_scale.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_dyngrid_layout.cpp Projects/Libraries/qwt-6.0.1/src/qwt_dyngrid_layout.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_null_paintdevice.h Projects/Libraries/qwt-6.0.1/src/qwt_null_paintdevice.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_picker_machine.cpp Projects/Libraries/qwt-6.0.1/src/qwt_picker_machine.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_histogram.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_histogram.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_magnifier.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_magnifier.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_scaleitem.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_scaleitem.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_round_scale_draw.h Projects/Libraries/qwt-6.0.1/src/qwt_round_scale_draw.h<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterexample.cpp Projects/Classes/CppKalmanFilter/kalmanfilterexample.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparameter.h Projects/Classes/CppKalmanFilter/kalmanfilterparameter.h<br/>
cp ../../Classes/CppStateObserver/alphabetagammafilter.h Projects/Classes/CppStateObserver/alphabetagammafilter.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_column_symbol.h Projects/Libraries/qwt-6.0.1/include/qwt_column_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_event_pattern.h Projects/Libraries/qwt-6.0.1/include/qwt_event_pattern.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_renderer.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_renderer.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_rescaler.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_rescaler.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_slider.cpp Projects/Libraries/qwt-6.0.1/src/qwt_abstract_slider.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_interval_symbol.cpp Projects/Libraries/qwt-6.0.1/src/qwt_interval_symbol.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_rasteritem.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_rasteritem.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_seriesitem.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_seriesitem.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_spectrocurve.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_spectrocurve.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_sampling_thread.cpp Projects/Libraries/qwt-6.0.1/src/qwt_sampling_thread.cpp<br/>
cp ../../Tools/ToolStateObserver/noisefunctionparser.cpp Projects/Tools/ToolStateObserver/noisefunctionparser.cpp<br/>
cp ../../Tools/ToolStateObserver/slidingmodeobserver.cpp Projects/Tools/ToolStateObserver/slidingmodeobserver.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparameters.h Projects/Classes/CppKalmanFilter/kalmanfilterparameters.h<br/>
cp ../../Classes/CppKalmanFilter/whitenoisesystemtype.cpp Projects/Classes/CppKalmanFilter/whitenoisesystemtype.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_abstract_scale.h Projects/Libraries/qwt-6.0.1/include/qwt_abstract_scale.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_dyngrid_layout.h Projects/Libraries/qwt-6.0.1/include/qwt_dyngrid_layout.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_picker_machine.h Projects/Libraries/qwt-6.0.1/include/qwt_picker_machine.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_histogram.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_histogram.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_magnifier.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_magnifier.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_scaleitem.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_scaleitem.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_legend_itemmanager.h Projects/Libraries/qwt-6.0.1/src/qwt_legend_itemmanager.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_matrix_raster_data.h Projects/Libraries/qwt-6.0.1/src/qwt_matrix_raster_data.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_null_paintdevice.cpp Projects/Libraries/qwt-6.0.1/src/qwt_null_paintdevice.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_directpainter.h Projects/Libraries/qwt-6.0.1/src/qwt_plot_directpainter.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_round_scale_draw.cpp Projects/Libraries/qwt-6.0.1/src/qwt_round_scale_draw.cpp<br/>
cp ../../Tools/ToolStateObserver/crosscompiletowindows.sh Projects/Tools/ToolStateObserver/crosscompiletowindows.sh<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparameter.cpp Projects/Classes/CppKalmanFilter/kalmanfilterparameter.cpp<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilter.h Projects/Classes/CppKalmanFilter/steadystatekalmanfilter.h<br/>
cp ../../Classes/CppStateObserver/alphabetagammafilter.cpp Projects/Classes/CppStateObserver/alphabetagammafilter.cpp<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fp_opcode_add.inc Projects/Libraries/fparser4.5.1/extrasrc/fp_opcode_add.inc<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_abstract_slider.h Projects/Libraries/qwt-6.0.1/include/qwt_abstract_slider.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_interval_symbol.h Projects/Libraries/qwt-6.0.1/include/qwt_interval_symbol.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_rasteritem.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_rasteritem.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_seriesitem.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_seriesitem.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_sampling_thread.h Projects/Libraries/qwt-6.0.1/include/qwt_sampling_thread.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_scale_draw.h Projects/Libraries/qwt-6.0.1/src/qwt_abstract_scale_draw.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_spectrocurve.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_spectrocurve.cpp<br/>
cp ../../Tools/ToolStateObserver/stateobservermenudialog.h Projects/Tools/ToolStateObserver/stateobservermenudialog.h<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparameters.cpp Projects/Classes/CppKalmanFilter/kalmanfilterparameters.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_null_paintdevice.h Projects/Libraries/qwt-6.0.1/include/qwt_null_paintdevice.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_round_scale_draw.h Projects/Libraries/qwt-6.0.1/include/qwt_round_scale_draw.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_matrix_raster_data.cpp Projects/Libraries/qwt-6.0.1/src/qwt_matrix_raster_data.cpp<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_plot_directpainter.cpp Projects/Libraries/qwt-6.0.1/src/qwt_plot_directpainter.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparametertype.h Projects/Classes/CppKalmanFilter/kalmanfilterparametertype.h<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilter.cpp Projects/Classes/CppKalmanFilter/steadystatekalmanfilter.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_spectrocurve.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_spectrocurve.h<br/>
cp ../../Libraries/qwt-6.0.1/src/qwt_abstract_scale_draw.cpp Projects/Libraries/qwt-6.0.1/src/qwt_abstract_scale_draw.cpp<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermaindialog.h Projects/Tools/ToolStateObserver/qtstateobservermaindialog.h<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermenudialog.h Projects/Tools/ToolStateObserver/qtstateobservermenudialog.h<br/>
cp ../../Tools/ToolStateObserver/stateobservermenudialog.cpp Projects/Tools/ToolStateObserver/stateobservermenudialog.cpp<br/>
cp ../../Classes/CppKalmanFilter/whitenoisesystemparameters.h Projects/Classes/CppKalmanFilter/whitenoisesystemparameters.h<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.h Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_legend_itemmanager.h Projects/Libraries/qwt-6.0.1/include/qwt_legend_itemmanager.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_mathml_text_engine.h Projects/Libraries/qwt-6.0.1/include/qwt_mathml_text_engine.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_matrix_raster_data.h Projects/Libraries/qwt-6.0.1/include/qwt_matrix_raster_data.h<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_plot_directpainter.h Projects/Libraries/qwt-6.0.1/include/qwt_plot_directpainter.h<br/>
cp ../../Tools/ToolStateObserver/ToolStateObserverDesktop.pro Projects/Tools/ToolStateObserver/ToolStateObserverDesktop.pro<br/>
cp ../../Tools/ToolStateObserver/ToolStateObserverWelcome.png Projects/Tools/ToolStateObserver/ToolStateObserverWelcome.png<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermaindialog.ui Projects/Tools/ToolStateObserver/qtstateobservermaindialog.ui<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermenudialog.ui Projects/Tools/ToolStateObserver/qtstateobservermenudialog.ui<br/>
cp ../../Classes/CppKalmanFilter/kalmanfilterparametertype.cpp Projects/Classes/CppKalmanFilter/kalmanfilterparametertype.cpp<br/>
cp ../../Libraries/qwt-6.0.1/include/qwt_abstract_scale_draw.h Projects/Libraries/qwt-6.0.1/include/qwt_abstract_scale_draw.h<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermaindialog.cpp Projects/Tools/ToolStateObserver/qtstateobservermaindialog.cpp<br/>
cp ../../Tools/ToolStateObserver/qtstateobservermenudialog.cpp Projects/Tools/ToolStateObserver/qtstateobservermenudialog.cpp<br/>
cp ../../Classes/CppKalmanFilter/whitenoisesystemparameters.cpp Projects/Classes/CppKalmanFilter/whitenoisesystemparameters.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp<br/>
cp ../../Classes/CppKalmanFilter/standardkalmanfilterparameters.h Projects/Classes/CppKalmanFilter/standardkalmanfilterparameters.h<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilterfactory.h Projects/Classes/CppKalmanFilter/steadystatekalmanfilterfactory.h<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fp_identifier_parser.inc Projects/Libraries/fparser4.5.1/extrasrc/fp_identifier_parser.inc<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltercalculationelements.h Projects/Classes/CppKalmanFilter/kalmanfiltercalculationelements.h<br/>
cp ../../Classes/CppKalmanFilter/standardkalmanfilterparameters.cpp Projects/Classes/CppKalmanFilter/standardkalmanfilterparameters.cpp<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilterfactory.cpp Projects/Classes/CppKalmanFilter/steadystatekalmanfilterfactory.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltercalculationelements.cpp Projects/Classes/CppKalmanFilter/kalmanfiltercalculationelements.cpp<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilterparameters.h Projects/Classes/CppKalmanFilter/steadystatekalmanfilterparameters.h<br/>
cp ../../Classes/CppKalmanFilter/standardwhitenoisesystemparameters.h Projects/Classes/CppKalmanFilter/standardwhitenoisesystemparameters.h<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfilterparameters.cpp Projects/Classes/CppKalmanFilter/steadystatekalmanfilterparameters.cpp<br/>
cp ../../Classes/CppKalmanFilter/standardwhitenoisesystemparameters.cpp Projects/Classes/CppKalmanFilter/standardwhitenoisesystemparameters.cpp<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltercalculationelementsfactory.h Projects/Classes/CppKalmanFilter/kalmanfiltercalculationelementsfactory.h<br/>
cp ../../Classes/CppKalmanFilter/standardkalmanfiltercalculationelements.h Projects/Classes/CppKalmanFilter/standardkalmanfiltercalculationelements.h<br/>
cp ../../Classes/CppKalmanFilter/kalmanfiltercalculationelementsfactory.cpp Projects/Classes/CppKalmanFilter/kalmanfiltercalculationelementsfactory.cpp<br/>
cp ../../Classes/CppKalmanFilter/standardkalmanfiltercalculationelements.cpp Projects/Classes/CppKalmanFilter/standardkalmanfiltercalculationelements.cpp<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfiltercalculationelements.h Projects/Classes/CppKalmanFilter/steadystatekalmanfiltercalculationelements.h<br/>
cp ../../Classes/CppKalmanFilter/steadystatekalmanfiltercalculationelements.cpp Projects/Classes/CppKalmanFilter/steadystatekalmanfiltercalculationelements.cpp<br/>
cp ../../Classes/CppKalmanFilter/fixedlagsmootherkalmanfiltercalculationelements.h Projects/Classes/CppKalmanFilter/fixedlagsmootherkalmanfiltercalculationelements.h<br/>
cp ../../Classes/CppKalmanFilter/fixedlagsmootherkalmanfiltercalculationelements.cpp Projects/Classes/CppKalmanFilter/fixedlagsmootherkalmanfiltercalculationelements.cpp<br/>
<br/>
FILENAME="../../Tools/ToolStateObserverSource"<br/>
ZIP_FILENAME=$FILENAME".zip"<br/>
<br/>
echo "Compressing files"<br/>
<br/>
zip -r $FILENAME Projects<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Emptying subfolders"<br/>
<br/>
rm Projects/Libraries/fparser4.5.1/extrasrc/*.*<br/>
rm Projects/Classes/CppQtHideAndShowDialog/*.*<br/>
rm Projects/Libraries/qwt-6.0.1/include/*.*<br/>
rm Projects/Classes/ToolStateObserver/*.*<br/>
rm Projects/Classes/CppStateObserver/*.*<br/>
rm Projects/Classes/CppQtAboutDialog/*.*<br/>
rm Projects/Tools/ToolStateObserver/*.*<br/>
rm Projects/Libraries/qwt-6.0.1/src/*.*<br/>
rm Projects/Classes/CppKalmanFilter/*.*<br/>
rm Projects/Libraries/fparser4.5.1/*.*<br/>
rm Projects/Libraries/qwt-6.0.1/*.*<br/>
rm Projects/Classes/CppQtModel/*.*<br/>
rm Projects/Classes/CppMatrix/*.*<br/>
rm Projects/Classes/CppTrace/*.*<br/>
rm Projects/Classes/CppAbout/*.*<br/>
rm Projects/Libraries/*.*<br/>
rm Projects/Classes/*.*<br/>
rm Projects/Tools/*.*<br/>
rm Projects/*.*<br/>
rmdir Projects/Libraries/fparser4.5.1/extrasrc<br/>
rmdir Projects/Classes/CppQtHideAndShowDialog<br/>
rmdir Projects/Libraries/qwt-6.0.1/include<br/>
rmdir Projects/Classes/ToolStateObserver<br/>
rmdir Projects/Classes/CppStateObserver<br/>
rmdir Projects/Classes/CppQtAboutDialog<br/>
rmdir Projects/Tools/ToolStateObserver<br/>
rmdir Projects/Libraries/qwt-6.0.1/src<br/>
rmdir Projects/Classes/CppKalmanFilter<br/>
rmdir Projects/Libraries/fparser4.5.1<br/>
rmdir Projects/Libraries/qwt-6.0.1<br/>
rmdir Projects/Classes/CppQtModel<br/>
rmdir Projects/Classes/CppMatrix<br/>
rmdir Projects/Classes/CppTrace<br/>
rmdir Projects/Classes/CppAbout<br/>
rmdir Projects/Libraries<br/>
rmdir Projects/Classes<br/>
rmdir Projects/Tools<br/>
rmdir Projects<br/>
<br/>
echo "Done"<br/>
<br/>
# QtCreatorProFileZipScript, version 1.0<br/>
# Copyright (C) 2013 Richel Bilderbeek<br/>
# Programmed on the 19th of May 2013<br/>
# by Richel Bilderbeek<br/>
# <br/>
# QtCreatorProFileZipScript can be downloaded from http://www.richelbilderbeek.nl/CppQtCreatorProFileZipScript.htm<br/>
# Licenced under GPL 3.0<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
