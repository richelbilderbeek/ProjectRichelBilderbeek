<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtSelectFileDialog</title>
  <meta name="description" content="C++ WtSelectFileDialog"/>
  <meta name="keywords" content="C++ WtSelectFileDialog "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Sun Aug 17 15:23:45 2014
 -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a> is a <a href="CppWt.htm">Wt</a> 
<a href="CppClass.htm">class</a> to let a user select a file from the server. To let a user select a file from his/her
computer, the <a href="CppWFileUpload.htm">Wt::WFileUpload</a> <a href="CppClass.htm">class</a> might be convenient.</p>
<p>&nbsp;</p>
<p><a href="ToolTestSelectFileDialog.htm">TestSelectFileDialog</a> is a <a href="Tools.htm">tool</a> to test 
the <a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a> <a href="CppClass.htm">class</a>.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtSelectFileDialog/CppWtSelectFileDialog.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtSelectFileDialog/CppWtSelectFileDialog.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a>/<a href="CppWtSelectFileDialog.htm">wtselectfiledialog</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a>/<a href="CppWtSelectFileDialog.htm">wtselectfiledialog</a>.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtSelectFileDialog/wtselectfiledialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtSelectFileDialog/wtselectfiledialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>, <a href="CppWt.htm">Wt</a> dialog <b><a href="CppFor.htm">for</a></b> selecting a file<br/>
Copyright (C) 2011-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> WTSELECT<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<a href="CppDefine.htm">#define</a> WTSELECT<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.htm">WContainerWidget</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWLineEdit.htm">WLineEdit</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWPushButton.htm">WPushButton</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> WSelectionBox;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a> is a <a href="CppWt.htm">Wt</a> dialog to select a file<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWContainerWidget.htm">Wt::WContainerWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>();<br/>
&nbsp;&nbsp;<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Check the folder <b><a href="CppFor.htm">for</a></b> files again<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRefresh();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the path in which <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> will look <b><a href="CppFor.htm">for</a></b> files<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppGetPath.htm">GetPath</a>() { <b><a href="CppReturn.htm">return</a></b> m_path; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the currently selected file<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetSelectedFile() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppRegex.htm">regex</a> filter filenames are selected <b><a href="CppFor.htm">for</a></b><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFilter(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename_filter);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set <b><a href="CppIf.htm">if</a></b> the <a href="CppRegex.htm">regex</a> filter is readonly<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFilterReadOnly(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> readonly);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the path in which <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> will look <b><a href="CppFor.htm">for</a></b> files<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> SetPath(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; path);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppSignal.htm">signal</a> that is <a href="CppEmit.htm">emitted</a> when a file is selected<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_selected;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The path <b><a href="CppThis.htm">this</a></b> dialog starts at<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> m_path;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The user <a href="CppInterface.htm">interface</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> Ui<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Ui();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Ui(<b><a href="CppConst.htm">const</a></b> Ui&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Ui&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> Ui&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWLineEdit.htm">Wt::WLineEdit</a> * <b><a href="CppConst.htm">const</a></b> m_edit_filter;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWLabel.htm">Wt::WLabel</a> * <b><a href="CppConst.htm">const</a></b> m_label_filter;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWSelectionBox.htm">Wt::WSelectionBox</a> * <b><a href="CppConst.htm">const</a></b> m_selection_box;<br/>
&nbsp;&nbsp;} m_ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get all the files in a folder<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetFilesInFolder.htm">GetFilesInFolder</a>.htm<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppGetFilesInFolder.htm">GetFilesInFolder</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; folder);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\brief<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppMemberFunction.htm">member function</a> how to select files from a folder<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppDefault.htm">default</a></b> behavior: select all files in the folder m_path that match the <a href="CppRegex.htm">regex</a> in m_edit_filter<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; SelectFiles() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\brief<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnUpdateDialog updates the list of filenames in the m_selection_box<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnUpdateDialog is called automatically when the selection filter is changed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnUpdateDialog();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnSelect is called when a client selected a file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnSelect();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTSELECT<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtSelectFileDialog/wtselectfiledialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtSelectFileDialog/wtselectfiledialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>, <a href="CppWt.htm">Wt</a> dialog <b><a href="CppFor.htm">for</a></b> selecting a file<br/>
Copyright (C) 2011-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtSelectFileDialog.htm">CppWtSelectFileDialog</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-variable"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWtSelectFileDialog.htm">wtselectfiledialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppBoostXpressive.htm">xpressive</a>/<a href="CppBoostXpressive.htm">xpressive</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWBreak.htm">WBreak</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLabel.htm">WLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLineEdit.htm">WLineEdit</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/WSelectionBox&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>The path <b><a href="CppThis.htm">this</a></b> dialog starts at<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::m_path <a href="CppOperatorAssign.htm">=</a> "";<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::<a href="CppUi.htm">Ui</a>::Ui()<br/>
 : m_edit_filter(<b><a href="CppNew.htm">new</a></b> <a href="CppWLineEdit.htm">Wt::WLineEdit</a>(".*")),<br/>
&nbsp;&nbsp; m_label_filter(<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.htm">Wt::WLabel</a>("File filter: ")),<br/>
&nbsp;&nbsp; m_selection_box(<b><a href="CppNew.htm">new</a></b> <a href="CppWSelectionBox.htm">Wt::WSelectionBox</a>)<br/>
{<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>()<br/>
&nbsp;&nbsp;: m_signal_selected{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_ui{}<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_path.empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Path must be set from <a href="CppArgc.htm">argv</a>[0]:"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::SetPath(<a href="CppBoostFilesystem.htm">boost::filesystem</a>::path(<a href="CppArgc.htm">argv</a>[0]).parent_path().string());");<br/>
&nbsp;&nbsp;clear();<br/>
&nbsp;&nbsp;setContentAlignment(<a href="CppWt.htm">Wt</a>::AlignCenter);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_ui.m_selection_box);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_ui.m_label_filter);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_ui.m_edit_filter);<br/>
<br/>
&nbsp;&nbsp;m_ui.m_edit_filter-&gt;changed().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnUpdateDialog);<br/>
&nbsp;&nbsp;m_ui.m_edit_filter-&gt;enterPressed().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnUpdateDialog);<br/>
&nbsp;&nbsp;m_ui.m_edit_filter-&gt;keyWentUp().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnUpdateDialog);<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;activated().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnSelect);<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;clicked().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnSelect);<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;<b><a href="CppDouble.htm">double</a></b>Clicked().connect(<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnSelect);<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;setSelectionMode(<a href="CppWt.htm">Wt</a>::SingleSelection);<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;resize(400,<a href="CppWLength.htm">Wt::WLength</a>::Auto);<br/>
&nbsp;&nbsp;OnUpdateDialog();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::DoRefresh()<br/>
{<br/>
&nbsp;&nbsp;OnUpdateDialog();<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::<a href="CppGetFilesInFolder.htm">GetFilesInFolder</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; folder)<br/>
<a href="CppComment.htm">//</a>{<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_path.empty() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Path must be set from <a href="CppArgc.htm">argv</a>[0]");<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppGetFilesInFolder.htm">GetFilesInFolder</a>(m_path);<br/>
<a href="CppComment.htm">//</a>}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::GetSelectedFile() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_ui.m_selection_box-&gt;currentIndex() <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b> <a href="CppStdString.htm">std::string</a>();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_ui.m_selection_box-&gt;itemText(m_ui.m_selection_box-&gt;currentIndex()).toUTF8();<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.5";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-07-01: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-07-01: <a href="CppVersion.htm">version</a> 1.1: added support <b><a href="CppFor.htm">for</a></b> setting the <a href="CppRegex.htm">regex</a> filter",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-07-03: <a href="CppVersion.htm">version</a> 1.2: added support <b><a href="CppFor.htm">for</a></b> setting the <a href="CppRegex.htm">regex</a> filter to readonly",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-07-15: <a href="CppVersion.htm">version</a> 1.3: added <a href="CppGetPath.htm">GetPath</a> <a href="CppMemberFunction.htm">member function</a>, removed \'Select\' <a href="CppWPushButton.htm">Wt::WPushButton</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-10-16: <a href="CppVersion.htm">version</a> 1.4: put UI elements in Ui <b><a href="CppStruct.htm">struct</a></b>, added <b><a href="CppVirtual.htm">virtual</a></b> SelectFiles <a href="CppMemberFunction.htm">member function</a> (<b><a href="CppFor.htm">for</a></b> <a href="ToolHometrainer.htm">Hometrainer</a>)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-10-24: <a href="CppVersion.htm">version</a> 1.5: added DoRefresh <a href="CppMemberFunction.htm">member function</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnUpdateDialog()<br/>
{<br/>
&nbsp;&nbsp;m_ui.m_selection_box-&gt;clear();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> SelectFiles();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> s: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_ui.m_selection_box-&gt;addItem(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::OnSelect()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_ui.m_selection_box-&gt;currentIndex() <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;m_signal_selected();<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::SelectFiles() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>::<a href="CppCompile.htm">compile</a>(m_ui.m_edit_filter-&gt;text().toUTF8());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b>(<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_error&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Get all filenames<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppFileIo.htm">fileio</a>::<a href="CppFileIo.htm">FileIo</a>().<a href="CppGetFilesInFolder.htm">GetFilesInFolder</a>(m_path);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create the <a href="CppRegex.htm">regex</a> <b><a href="CppFor.htm">for</a></b> a correct text file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a> txt_file_<a href="CppRegex.htm">regex</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>::<a href="CppCompile.htm">compile</a>(m_ui.m_edit_filter-&gt;text().toUTF8());<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; w;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppCopy_if.htm">Copy_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppStdBack_inserter.htm">std::back_inserter</a>(w),<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostRegex_match.htm">boost::regex_match</a>(<a href="CppBoostBind.htm">boost::bind</a>(<a href="CppBoostLambda.htm">boost::lambda</a>::_1),txt_file_<a href="CppRegex.htm">regex</a>));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy all filenames matching the <a href="CppRegex.htm">regex</a> in the resulting <a href="CppStdVector.htm">std::vector</a><br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> s: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_match(s,txt_file_<a href="CppRegex.htm">regex</a>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.push_back(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdSort.htm">std::sort</a>(w.begin(),w.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::SetFilter(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename_filter)<br/>
{<br/>
&nbsp;&nbsp;m_ui.m_edit_filter-&gt;setText(filename_filter.c_str());<br/>
&nbsp;&nbsp;OnUpdateDialog();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::SetFilterReadOnly(<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> readonly)<br/>
{<br/>
&nbsp;&nbsp;m_ui.m_edit_filter-&gt;setReadOnly(readonly);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtSelectFileDialog.htm">WtSelectFileDialog</a>::SetPath(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; path)<br/>
{<br/>
&nbsp;&nbsp;m_path <a href="CppOperatorAssign.htm">=</a> path;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
