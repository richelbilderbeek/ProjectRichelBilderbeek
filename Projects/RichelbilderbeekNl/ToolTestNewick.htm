<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestNewick</title>
  <meta name="description" content="C++ TestNewick"/>
  <meta name="keywords" content="C++ TestNewick "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestNewick.htm">TestNewick</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:08:21 2015
 -->
<p>
  <a href="ToolTestNewick.htm">TestNewick</a> is a <a href="Tools.htm">tool</a>
  to test the <a href="CppNewick.htm">Newick</a> <a href="CppClass.htm">class</a>.
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestNewickConsoleExe.zip">Download the 'TestNewick' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestNewickDesktopExe.zip">Download the 'TestNewick' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestNewickWebsiteExe.zip">Download the 'TestNewick' Windows executable (latest version)(zip)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
  <li><img src="PicWeb.png" alt="Web"/> <a href="CppWebApplication.htm">Web application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.55</li>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.3.0 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
  <li><img src="PicWt.png" alt="Wt"/> <a href="CppWt.htm">Wt</a>: version 3.3.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestNewick/ToolTestNewickDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/ToolTestNewickDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBigInt.htm">BigInteger</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMultiVector.htm">CppMultiVector</a>/<a href="CppMultiVector.htm">CppMultiVector</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">CppNewick</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a>/<a href="CppNewickVector.htm">CppNewickVector</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppSortedBinaryNewickVector.htm">CppSortedBinaryNewickVector</a>/<a href="CppSortedBinaryNewickVector.htm">CppSortedBinaryNewickVector</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>.pri)<br/>
<br/>
include(ToolTestNewickDesktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp\<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestNewick/ToolTestNewickWebsite.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/ToolTestNewickWebsite.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
<a href="CppQmakeLibs.htm">LIBS</a> += <a href="CppWt.htm">-lwt</a> <a href="CppWt.htm">-lwt</a>http <a href="CppProgram_options.htm">-lboost_program_options</a><br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
#Use C++0x standard<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp0x.htm">c++0x</a><br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -DNDEBUG<br/>
<a href="CppQmakeDefines.htm">DEFINES</a> += USE_WT_LIBRARY<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppEncranger.htm">CppEncranger</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppLoopReader.htm">CppLoopReader</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMultiVector.htm">CppMultiVector</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>Ravindran \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppSortedBinaryNewickVector.htm">CppSortedBinaryNewickVector</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtAboutDialog.htm">CppWtAboutDialog</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += wt<a href="CppMain.htm">main</a>.cpp\<br/>
&nbsp;&nbsp;&nbsp;&nbsp;wttest<a href="CppNewick.htm">newick</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>/<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>s.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indexer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indextable.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>derivative.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppSortedBinaryNewickVector.htm">CppSortedBinaryNewickVector</a>/<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsignedInABase.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsigned.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>Utils.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>Algorithms.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">newick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>s.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indexer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indextable.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>derivative.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>Ravindran/<a href="CppNewick.htm">newick</a>ravindransort.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>Ravindran/<a href="CppNewick.htm">newick</a>ravindrancalculate.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>Ravindran/<a href="CppNewick.htm">newick</a>ravindran.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a>/<a href="CppNewickVector.htm">newickvector</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtAboutDialog.htm">CppWtAboutDialog</a>/<a href="CppWtAboutDialog.htm">wtaboutdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppEncranger.htm">CppEncranger</a>/<a href="CppEncranger.htm">encranger</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test<a href="CppNewick.htm">newick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>coordinat.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test<a href="CppNewick.htm">newick</a>dialog.cpp<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;wttest<a href="CppNewick.htm">newick</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>/<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>s.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indexer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indextable.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>derivative.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppSortedBinaryNewickVector.htm">CppSortedBinaryNewickVector</a>/<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/NumberlikeArray.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsignedInABase.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsigned.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>Utils.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>Library.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>Algorithms.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/<a href="CppBigInt.htm">BigInteger</a>.hh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">newick</a>storage.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">newick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>s.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indexer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indextable.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>derivative.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>Ravindran/<a href="CppNewick.htm">newick</a>ravindran.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a>/<a href="CppNewickVector.htm">newickvector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMultiVector.htm">CppMultiVector</a>/<a href="CppMultiVector.htm">multivector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAssert.htm">CppAssert</a>/<a href="CppAssert.htm">assert</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppWtAboutDialog.htm">CppWtAboutDialog</a>/<a href="CppWtAboutDialog.htm">wtaboutdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppEncranger.htm">CppEncranger</a>/<a href="CppEncranger.htm">encranger</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppLoopReader.htm">CppLoopReader</a>/<a href="CppLoopReader.htm">loopreader</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test<a href="CppNewick.htm">newick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>coordinat.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test<a href="CppNewick.htm">newick</a>dialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;wt.css<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/ToolTestNewickConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/ToolTestNewickConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += ../../<a href="Tools.htm">Tools</a>/ToolTestNewick<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>result.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/test<a href="CppNewick.htm">newick</a>result.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/ToolTestNewickDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/ToolTestNewickDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/ToolTestNewick/ToolTestNewickConsole.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/qttest<a href="CppNewick.htm">newick</a>dialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/qttest<a href="CppNewick.htm">newick</a>dialog.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/ToolTestNewick/qttest<a href="CppNewick.htm">newick</a>dialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppProgram_options.htm">boost/program_options.hpp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qttest<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> Declare the supported options.<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::options_description d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Allowed options <b><a href="CppFor.htm">for</a></b> <a href="ToolTestNewick.htm">TestNewick</a>");<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> <a href="CppNewick.htm">newick</a>_str;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> theta_str;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> types_str;<br/>
&nbsp;&nbsp;d.add_options()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("<a href="CppAbout.htm">about</a>,a",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"shows the <a href="CppAbout.htm">about</a> information")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("help,h",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"produce <b><a href="CppThis.htm">this</a></b> help message")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("typeinfo,i",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Shows help <a href="CppAbout.htm">about</a> the types of <a href="CppAlgorithm.htm">algorithm</a>s")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("licence,l",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Shows <b><a href="CppThis.htm">this</a></b> program's licence")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("<a href="CppVersion.htm">version</a>,v",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"shows the <a href="CppVersion.htm">version</a> number")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("<a href="CppNewick.htm">newick</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;<a href="CppNewick.htm">newick</a>_str)-&gt;default_value("((2,2),2)"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "phylogeny in <a href="CppNewick.htm">Newick</a> format")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("theta",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;theta_str)-&gt;default_value(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(10.0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "mutation parameter")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("types",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;types_str)-&gt;default_value(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_two_digit_<a href="CppNewick.htm">newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_<a href="CppNewick.htm">newick</a>_vector)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "types of <a href="CppAlgorithm.htm">algorithm</a>s used")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::variables_map m;<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::store(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::parse_command_line(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>, d), m);<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::notify(m);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("a") <a href="CppOperatorLogicalOr.htm">||</a> m.count("<a href="CppAbout.htm">about</a>"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetAbout().Create<a href="CppAbout.htm">About</a>Text();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(<a href="CppStdCout.htm">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("h") <a href="CppOperatorLogicalOr.htm">||</a> m.count("help"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the options_description<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> d <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("i") <a href="CppOperatorLogicalOr.htm">||</a> m.count("typeinfo"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppAlgorithm.htm">Algorithm</a> types:\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_binary_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": <a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_many_digit_<a href="CppNewick.htm">newick</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": <a href="CppManyDigitNewick.htm">ManyDigitNewick</a>\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": <a href="CppNewickVector.htm">NewickVector</a> (*)\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_sorted_binary_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": <a href="CppSortedBinaryNewickVector.htm">SortedBinaryNewickVector</a>\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_two_digit_<a href="CppNewick.htm">newick</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": <a href="CppTwoDigitNewick.htm">TwoDigitNewick</a> (**)\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_all <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": All\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "(*) Recommended <b><a href="CppFor.htm">for</a></b> unary and binary phylogenies\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "(**) Recommended <b><a href="CppFor.htm">for</a></b> phylogenies of higher arities\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Multiple <a href="CppAlgorithm.htm">algorithm</a>s can be run sequentially by adding these values";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("l") <a href="CppOperatorLogicalOr.htm">||</a> m.count("licence"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetAbout().CreateLicenceText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(<a href="CppStdCout.htm">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("v") <a href="CppOperatorLogicalOr.htm">||</a> m.count("<a href="CppVersion.htm">version</a>"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::Get<a href="CppVersion.htm">Version</a>History();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(<a href="CppStdCout.htm">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppRibi.htm">ribi</a>::<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Invalid phylogeny\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(theta_str);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b>(<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Invalid theta\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog dialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_two_digit_<a href="CppNewick.htm">newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_<a href="CppNewick.htm">newick</a>_vector);<br/>
&nbsp;&nbsp;dialog.DoCalculate(<a href="CppNewick.htm">newick</a>_str,theta_str);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the results<br/>
&nbsp;&nbsp;<a href="CppStdCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.GetTable().begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.GetTable().end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt;(<a href="CppStdCout.htm">std::cout</a>,"\n"));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/qttestnewickdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/qttestnewickdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTTESTNEWICKDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTESTNEWICKDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestNewick.htm">TestNewick</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog *ui;<br/>
&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>Dialog m_dialog;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Display();<br/>
<br/>
<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_<a href="CppAny.htm">any</a>_change();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_compare_clicked();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTESTNEWICKDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/qttestnewickdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/qttestnewickdialog.cpp" border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppBigInt.htm">BigInteger</a>.hh"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewickVector.htm">newickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qttest<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qttest<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialog{}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle( <b><a href="CppThis.htm">this</a></b>-&gt;windowTitle() <a href="CppOperatorPlus.htm">+</a> " (release)");<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle( <b><a href="CppThis.htm">this</a></b>-&gt;windowTitle() <a href="CppOperatorPlus.htm">+</a> " (<a href="CppDebug.htm">debug</a>)");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_max_<b><a href="CppCompl.htm">compl</a></b>exity,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(on_<a href="CppAny.htm">any</a>_change()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_<a href="CppNewick.htm">newick</a>,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(on_<a href="CppAny.htm">any</a>_change()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_theta,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(on_<a href="CppAny.htm">any</a>_change()));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;on_button_compare_clicked();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::Display()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display text<br/>
&nbsp;&nbsp;ui-&gt;text-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;text-&gt;appendPlainText(m_dialog.GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display table<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt;&amp; table <a href="CppOperatorAssign.htm">=</a> m_dialog.GetTable();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_results <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(table.size());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setRowCount(n_results);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> result <a href="CppOperatorAssign.htm">=</a> 0; result<a href="CppOperatorNotEqual.htm">!=</a>n_results; <a href="CppOperatorIncrement.htm">++</a>result)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppNewick.htm">Newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(result,0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item(<a href="CppQString.htm">QString</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].<a href="CppNewick.htm">newick</a>).c_str())));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Theta<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(result,1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item(<a href="CppQString.htm">QString</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].theta).c_str())));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(result,2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item(<a href="CppQString.htm">QString</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].test_name).c_str())));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Probability<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(result,3,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item(<a href="CppQString.htm">QString</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].probability).c_str())));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTime.htm">Time</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(result,4,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item(<a href="CppQString.htm">QString</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].<a href="CppTime.htm">time</a>).c_str())));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> ui-&gt;table-&gt;columnCount();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> col_width <a href="CppOperatorAssign.htm">=</a> ui-&gt;table-&gt;width() <a href="CppOperatorDivide.htm">/</a> n_cols;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_cols; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setColumnWidth(i,col_width);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::on_button_compare_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_dialog.DoCalculate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_<a href="CppNewick.htm">newick</a>-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_theta-&gt;text().toStdString());<br/>
&nbsp;&nbsp;Display();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::on_<a href="CppAny.htm">any</a>_change()<br/>
{<br/>
&nbsp;&nbsp;m_dialog.DoAutoCalculate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_<a href="CppNewick.htm">newick</a>-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_theta-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_max_<b><a href="CppCompl.htm">compl</a></b>exity-&gt;text().toStdString());<br/>
&nbsp;&nbsp;Display();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetAbout());<br/>
&nbsp;&nbsp;d.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewick.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewick.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> TESTNEWICK_H<br/>
<a href="CppDefine.htm">#define</a> TESTNEWICK_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppBigInt.htm">BigIntegerLibrary</a>.hh"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="ToolTestNewick.htm">TestNewick</a> is the <a href="CppBaseClass.htm">base class</a> <b><a href="CppFor.htm">for</a></b> testing <a href="CppNewick.htm">Newick</a>s <b><a href="CppFor.htm">for</a></b><br/>
<a href="CppComment.htm">///</a>their calculated probabilities and its calculation <a href="CppTime.htm">time</a>.<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>();<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta) <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta) <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetProbability() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_probability; }<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> <a href="CppGetTime.htm">GetTime</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppTime.htm">time</a>; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetProbability(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> probability);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppTime.htm">Time</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppTime.htm">time</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_probability;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt; &gt; CreateTests(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> flags);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_all;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_binary_<a href="CppNewick.htm">newick</a>_vector;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_many_digit_<a href="CppNewick.htm">newick</a>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_<a href="CppNewick.htm">newick</a>_vector;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_sorted_binary_<a href="CppNewick.htm">newick</a>_vector;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_flag_two_digit_<a href="CppNewick.htm">newick</a>;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>() : <a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;~<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>() : <a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;~<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppManyDigitNewick.htm">ManyDigitNewick</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestNewickVector.htm">TestNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestNewickVector.htm">TestNewickVector</a>() : <a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;~<a href="ToolTestNewickVector.htm">TestNewickVector</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppNewickVector.htm">NewickVector</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a>() : <a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;~<a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppSortedBinaryNewickVector.htm">SortedBinaryNewickVector</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> <a href="ToolTestNewick.htm">TestNewick</a><br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>() : <a href="ToolTestNewick.htm">TestNewick</a>() {}<br/>
&nbsp;&nbsp;~<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>() {}<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> GetTestName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>"; }<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a>~TESTNEWICK_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewick.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewick.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;The Rampal Etienne Project, calculates the probability of a phylogeny<br/>
&nbsp;&nbsp;(C) 2009-2014 Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTime.htm">time</a>r.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewickVector.htm">newickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_all <a href="CppOperatorAssign.htm">=</a> 63;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_binary_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorAssign.htm">=</a> 1;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_many_digit_<a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> 2;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorAssign.htm">=</a> 4;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_sorted_binary_<a href="CppNewick.htm">newick</a>_vector <a href="CppOperatorAssign.htm">=</a> 8;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_two_digit_<a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> 16;<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::<a href="ToolTestNewick.htm">TestNewick</a>()<br/>
&nbsp;&nbsp;: m_<a href="CppTime.htm">time</a>(0.0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_probability(0.0)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do nothing<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>CreateAllTests creates all tests<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::CreateTests(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> flags)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt; &gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (flags &amp; m_flag_binary_<a href="CppNewick.htm">newick</a>_vector)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (flags &amp; m_flag_many_digit_<a href="CppNewick.htm">newick</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (flags &amp; m_flag_<a href="CppNewick.htm">newick</a>_vector)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="ToolTestNewickVector.htm">TestNewickVector</a>));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (flags &amp; m_flag_sorted_binary_<a href="CppNewick.htm">newick</a>_vector)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a>));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (flags &amp; m_flag_two_digit_<a href="CppNewick.htm">newick</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::SetProbability(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> probability)<br/>
{<br/>
&nbsp;&nbsp;m_probability <a href="CppOperatorAssign.htm">=</a> probability;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>::Set<a href="CppTime.htm">Time</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppTime.htm">time</a>)<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppTime.htm">time</a>;<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>Ewensprobability <a href="CppOperatorAssign.htm">=</a> probability * num_of_combinations<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Test::GetEwensProbability() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBigInt.htm">BigInteger</a> n_combinations<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppCalcNumOfCombinations.htm">CalcNumOfCombinations</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>(Get<a href="CppNewick.htm">Newick</a>()).Get());<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> n_combinations.toInt();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> d <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ewens_probability <a href="CppOperatorAssign.htm">=</a> d * GetProbability();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(ewens_probability);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> big<a href="CppInt.htm">Integer</a>ToString(n_combinations)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppStdString.htm">std::string</a>(" * ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(GetProbability());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>::CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (theta <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::IsUnary<a href="CppNewick.htm">Newick</a>(<a href="CppNewick.htm">newick</a>) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !<a href="CppNewick.htm">Newick</a>::<a href="CppIsBinaryNewick.htm">IsBinaryNewick</a>(<a href="CppNewick.htm">newick</a>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>::Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta));<br/>
&nbsp;&nbsp;<a href="CppBoostTimer.htm">boost::timer</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> p<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>::CalculateProbability(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>_str,theta);<br/>
&nbsp;&nbsp;Set<a href="CppTime.htm">Time</a>(t.elapsed());<br/>
&nbsp;&nbsp;SetProbability(p);<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>::CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (theta <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>::Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta));<br/>
&nbsp;&nbsp;<a href="CppBoostTimer.htm">boost::timer</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> p<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppManyDigitNewick.htm">ManyDigitNewick</a>::CalculateProbability(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>_str,theta);<br/>
&nbsp;&nbsp;Set<a href="CppTime.htm">Time</a>(t.elapsed());<br/>
&nbsp;&nbsp;SetProbability(p);<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewickVector.htm">TestNewickVector</a>::CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (theta <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewickVector.htm">TestNewickVector</a>::Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta));<br/>
&nbsp;&nbsp;<a href="CppBoostTimer.htm">boost::timer</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> p<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppNewickVector.htm">NewickVector</a>::CalculateProbability(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>_str,theta);<br/>
&nbsp;&nbsp;Set<a href="CppTime.htm">Time</a>(t.elapsed());<br/>
&nbsp;&nbsp;SetProbability(p);<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a>::CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (theta <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::IsUnary<a href="CppNewick.htm">Newick</a>(<a href="CppNewick.htm">newick</a>) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !<a href="CppNewick.htm">Newick</a>::<a href="CppIsBinaryNewick.htm">IsBinaryNewick</a>(<a href="CppNewick.htm">newick</a>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestSortedBinaryNewickVector.htm">TestSortedBinaryNewickVector</a>::Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta));<br/>
&nbsp;&nbsp;<a href="CppBoostTimer.htm">boost::timer</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> p<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppSortedBinaryNewickVector.htm">SortedBinaryNewickVector</a>::CalculateProbability(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theta);<br/>
&nbsp;&nbsp;Set<a href="CppTime.htm">Time</a>(t.elapsed());<br/>
&nbsp;&nbsp;SetProbability(p);<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>::CanCalculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (theta <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::IsUnary<a href="CppNewick.htm">Newick</a>(<a href="CppNewick.htm">newick</a>) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !<a href="CppNewick.htm">Newick</a>::<a href="CppIsBinaryNewick.htm">IsBinaryNewick</a>(<a href="CppNewick.htm">newick</a>))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>::Calculate(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta));<br/>
&nbsp;&nbsp;<a href="CppBoostTimer.htm">boost::timer</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> p<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>::CalculateProbability(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theta);<br/>
&nbsp;&nbsp;Set<a href="CppTime.htm">Time</a>(t.elapsed());<br/>
&nbsp;&nbsp;SetProbability(p);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewickdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewickdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> TESTNEWICKDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TESTNEWICKDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>result.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog is the graphics-independent<br/>
<a href="CppComment.htm">///</a>part of <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog (desktop <a href="CppApplication.htm">application</a>) and<br/>
<a href="CppComment.htm">///</a><a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog (<a href="CppWebApplication.htm">web application</a>)<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestNewick.htm">TestNewick</a>Dialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt; TableType;<br/>
&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>Dialog(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> types <a href="CppOperatorAssign.htm">=</a> 63);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoAutoCalculate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; theta_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; max_<b><a href="CppCompl.htm">compl</a></b>exity_str);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoCalculate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; theta_str);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppAbout.htm">About</a> GetAbout();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; GetText() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_text; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> TableType&amp; GetTable() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_table; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SaveTable(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Results of all calculations<br/>
&nbsp;&nbsp;TableType m_table;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Output <a href="CppAbout.htm">about</a> the calculations<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> m_text;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The types of <b><a href="CppClass.htm">classes</a></b>/<a href="CppAlgorithm.htm">algorithm</a>s used<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_types;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppRandomizeTimer.htm">RandomizeTimer</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; ExtractProbabilities(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt;&amp; v);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetHardBiologicalBinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetHardBinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetLightBiologicalBinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetLightBinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetLightTrinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetMediumBinary<a href="CppNewick.htm">Newick</a>s();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetM<a href="CppAny.htm">any</a>Binary<a href="CppNewick.htm">Newick</a>s();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTNEWICKDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewickdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewickdialog.cpp" border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewickVector.htm">newickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::<a href="ToolTestNewick.htm">TestNewick</a>Dialog(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> types)<br/>
&nbsp;&nbsp;: m_table{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_types(types)<br/>
{<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test all <a href="CppNewick.htm">Newick</a>s<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppNewick.htm">Newick</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>::Test();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppNewick.htm">newick</a>s <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppCreateValidNewicks.htm">CreateValidNewicks</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt; &gt; tests<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="ToolTestNewick.htm">TestNewick</a>::CreateTests(<a href="ToolTestNewick.htm">TestNewick</a>::m_flag_all);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBigInt.htm">BigInteger</a> max_<b><a href="CppCompl.htm">compl</a></b>exity <a href="CppOperatorAssign.htm">=</a> 10000;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str: <a href="CppNewick.htm">newick</a>s)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Only test binary <a href="CppNewick.htm">Newick</a>s and relatively small <a href="CppNewick.htm">Newick</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppNewick.htm">Newick</a>::<a href="CppCalcComplexity.htm">CalcComplexity</a>(<a href="CppNewick.htm">newick</a>) &gt; max_<b><a href="CppCompl.htm">compl</a></b>exity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start the tests<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(<a href="CppStdString.htm">std::string</a>("Testing ") <a href="CppOperatorPlus.htm">+</a> <a href="CppNewick.htm">newick</a>_str);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorPlus.htm">+</a> <a href="CppGetRandomUniform.htm">GetRandomUniform</a>() * 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table.resize(0);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do all valid tests<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;&amp; test: tests)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (test-&gt;CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test-&gt;Calculate(<a href="CppNewick.htm">newick</a>_str,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>Result r;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.<a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">newick</a>_str;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.theta <a href="CppOperatorAssign.htm">=</a> theta;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.test_name <a href="CppOperatorAssign.htm">=</a> test-&gt;GetTestName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.probability <a href="CppOperatorAssign.htm">=</a> test-&gt;GetProbability();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.<a href="CppTime.htm">time</a> <a href="CppOperatorAssign.htm">=</a> test <a href="CppOperatorMinus.htm">-</a>&gt;<a href="CppGetTime.htm">GetTime</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_table.push_back(r);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_table.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; probabilities <a href="CppOperatorAssign.htm">=</a> ExtractProbabilities(m_table);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppAllAboutEqual.htm">AllAboutEqual</a>(probabilities))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "WARNING: DIFFERENT PROBABILITIES FOUND"&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "FOR NEWICK " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppNewick.htm">newick</a>_str <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>&amp; p: probabilities)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; p: m_table)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCerr.htm">std::cerr</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Probability ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.<a href="CppNewick.htm">newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "): "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.probability<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppNewick.htm">Newick</a>::<a href="CppAllAboutEqual.htm">AllAboutEqual</a>(probabilities));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::DoAutoCalculate(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; theta_str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; max_<b><a href="CppCompl.htm">compl</a></b>exity_str)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "Invalid <a href="CppNewick.htm">Newick</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(theta_str);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "Invalid theta";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBigInt.htm">BigInteger</a> max_<b><a href="CppCompl.htm">compl</a></b>exity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> stringTo<a href="CppBigInt.htm">BigInteger</a>(max_<b><a href="CppCompl.htm">compl</a></b>exity_str);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppNewick.htm">Newick</a>::<a href="CppCalcComplexity.htm">CalcComplexity</a>(<a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&lt; max_<b><a href="CppCompl.htm">compl</a></b>exity)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DoCalculate(<a href="CppNewick.htm">newick</a>_str,theta_str);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> USE_WT_LIBRARY<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "Complexity too high";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "<a href="CppNewick.htm">Newick</a> too <b><a href="CppCompl.htm">compl</a></b>ex to <b><a href="CppAuto.htm">auto</a></b>-calculate. Press 'Calculate' or increase the value <b><a href="CppFor.htm">for</a></b> <b><a href="CppAuto.htm">auto</a></b>-calculate";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::DoCalculate(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; <a href="CppNewick.htm">newick</a>_str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; theta_str)<br/>
{<br/>
&nbsp;&nbsp;m_table.resize(0);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppIsNewick.htm">IsNewick</a>(<a href="CppNewick.htm">newick</a>_str))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "Invalid <a href="CppNewick.htm">Newick</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(theta_str);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "Invalid theta";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">Newick</a>::<a href="CppStringToNewick.htm">StringToNewick</a>(<a href="CppNewick.htm">newick</a>_str);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> theta <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(theta_str);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt; &gt; tests <a href="CppOperatorAssign.htm">=</a> <a href="ToolTestNewick.htm">TestNewick</a>::CreateTests(m_types);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do all valid tests<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>&gt;&amp; test: tests)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (test-&gt;CanCalculate(<a href="CppNewick.htm">newick</a>_str,theta))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test-&gt;Calculate(<a href="CppNewick.htm">newick</a>_str,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>Result r;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.<a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.htm">newick</a>_str;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.theta <a href="CppOperatorAssign.htm">=</a> theta;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.test_name <a href="CppOperatorAssign.htm">=</a> test-&gt;GetTestName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.probability <a href="CppOperatorAssign.htm">=</a> test-&gt;GetProbability();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r.<a href="CppTime.htm">time</a> <a href="CppOperatorAssign.htm">=</a> test <a href="CppOperatorMinus.htm">-</a>&gt;<a href="CppGetTime.htm">GetTime</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_table.push_back(r);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_table.empty());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; probabilities <a href="CppOperatorAssign.htm">=</a> ExtractProbabilities(m_table);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.htm">Newick</a>::<a href="CppAllAboutEqual.htm">AllAboutEqual</a>(probabilities))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "WARNING: DIFFERENT PROBABILITIES FOUND";<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> "All probabilities <a href="CppAbout.htm">about</a> equal";<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::ExtractProbabilities(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; w;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; i: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w.push_back( i.probability );<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetAbout()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> <a href="CppAbout.htm">about</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQt.htm">Qt</a> dialog to compare the <a href="CppNewick.htm">Newick</a> <b><a href="CppClass.htm">classes</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 24th of March 2011",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a><a href="ToolTestNewick.htm">TestNewick</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("BigInt: <a href="CppVersion.htm">version</a> 2010.04.30");<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>: <a href="CppVersion.htm">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppNewickVector.htm">NewickVector</a>: <a href="CppVersion.htm">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppNewickVector.htm">NewickVector</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppSortedBinaryNewickVector.htm">SortedBinaryNewickVector</a>: <a href="CppVersion.htm">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppSortedBinaryNewickVector.htm">SortedBinaryNewickVector</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>: <a href="CppVersion.htm">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppAbout.htm">about</a>;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "2.4";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-03-06: <a href="CppVersion.htm">version</a> 2.1: initial <a href="CppVersion.htm">version</a>, same <a href="CppVersion.htm">version</a>ing as <a href="CppQt.htm">Qt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-03-08: <a href="CppVersion.htm">version</a> 2.2: minor changes in <a href="CppNewick.htm">Newick</a> <b><a href="CppNamespace.htm">namespace</a></b>, added <a href="CppAbout.htm">About</a> screen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-03-11: <a href="CppVersion.htm">version</a> 2.3: put GUI logic in GUI-independent <a href="ToolTestNewick.htm">TestNewick</a>Dialog <b><a href="CppClass.htm">class</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-03-24: <a href="CppVersion.htm">version</a> 2.4: put <a href="CppAbout.htm">About</a> in <a href="ToolTestNewick.htm">TestNewick</a>Dialog"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetRandomUniform.htm">GetRandomUniform</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::<a href="CppGetRandomUniform.htm">GetRandomUniform</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>())/<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppRAND_MAX.htm">RAND_MAX</a>);<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRandomizeTimer.htm">RandomizeTimer</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::<a href="CppRandomizeTimer.htm">RandomizeTimer</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdSrand.htm">std::srand</a>(<a href="CppStdTime.htm">std::time</a>(0));<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetHardBiologicalBinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),(3,1)))),1),((((1,((1,((1,1),(45,6))),(((1,1),(4,1)),2))),1),2),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(1,(35,7))),((4,4),1))),1),4),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,((1,1),1))),1),((((1,((1,(5,(36,10))),((2,2),1))),1),(1,5)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,(3,1)))),1),((((1,((1,(1,(36,10))),((5,6),1))),1),2),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,3))),1),((((1,((1,((1,1),(34,10))),((4,(4,1)),3))),1),(1,1)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(2,1))),1),((((1,((1,(3,(47,14))),((6,4),(1,1)))),1),(1,1)),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(3,((1,1),1)))),1),((((1,((1,(2,(45,8))),((5,2),1))),1),(2,5)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,1),1)))),1),((((1,((1,((2,1),(35,10))),((4,(5,1)),2))),1),8),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,(2,(66,13))),((8,(5,1)),1))),1),(1,5)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,((1,1),1)))),1),((((1,((1,(2,(57,8))),((4,(1,2)),2))),1),6),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,3))),1),((((1,((1,(3,(41,10))),((4,(1,1)),(1,2)))),1),5),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),2))),1),((((1,((1,(1,(44,12))),((3,5),1))),1),(3,9)),(1,1))),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,(1,(4,1)))),1),((((1,((1,((1,1),(61,8))),((3,(4,1)),2))),1),(1,5)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,1),3)))),1),((((1,((1,((2,1),(39,8))),((7,3),1))),1),(2,3)),(1,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,3))),1),((((1,((1,((2,2),(37,9))),(4,2))),1),(4,2)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,2))),1),((((1,((1,(1,(38,12))),((4,5),2))),1),(1,3)),1)),1),2))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,((1,(1,1)),1)))),1),((((1,((1,(3,(53,13))),8)),1),(2,3)),2)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(3,((1,1),2)))),1),((((1,((1,((1,1),(50,9))),((6,(2,1)),3))),1),2),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),(2,1)))),1),((((1,((1,((2,1),(47,7))),((8,4),1))),1),(1,8)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(3,1)))),1),((((1,((1,(2,(26,7))),((7,3),1))),1),(3,3)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(6,((1,3),1)))),1),((((1,((1,((2,2),(39,12))),((3,(2,1)),1))),1),3),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,1),1)))),1),((((1,((1,((6,2),(47,7))),((4,(6,1)),1))),1),(1,4)),1)),1),2))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,(1,(2,1)))),1),((((1,((1,(2,(49,7))),((7,2),3))),1),(1,6)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),1)))),1),((((1,((1,((2,2),(43,12))),((5,6),(1,2)))),1),1),2)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,((1,3),1)))),1),((((1,((1,(1,(68,13))),((6,5),3))),1),(1,2)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,((1,1),2))),1),((((1,((1,((1,2),(59,9))),((11,2),(1,1)))),1),(1,7)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,((1,(2,1)),1)))),1),((((1,((1,((1,2),(42,7))),((8,4),1))),1),(2,3)),1)),1),2))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,3),1),(1,(1,((1,1),1)))),1),((((1,((1,((2,1),(48,14))),((4,4),4))),1),(3,1)),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,(5,(36,12))),((4,4),4))),1),8),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(3,((1,(1,2)),1)))),1),((((1,((1,(3,(33,12))),((4,3),1))),1),(2,3)),(1,1))),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((3,1),((1,1),1)))),1),((((1,((1,((1,1),(49,10))),((9,4),2))),1),(1,5)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),(3,1)))),1),((((1,((1,(1,(32,11))),((5,4),1))),1),(2,8)),(3,1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,1),(3,1)))),1),((((1,((1,(1,(54,12))),((7,4),1))),1),(1,6)),2)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((2,1),1),(1,(1,((1,1),1)))),1),((((1,((1,(2,(48,11))),((5,6),2))),1),(1,4)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,((2,2),((1,1),1)))),1),((((1,((1,((2,2),(61,14))),((4,3),1))),1),(1,3)),(1,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,1),1)))),1),((((1,((1,((1,4),(59,17))),((4,(1,1)),(1,1)))),1),(2,8)),1)),1),3))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,2),((1,1),1)))),1),((((1,((1,((4,2),(45,7))),((5,4),(1,1)))),1),(2,6)),((1,1),1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,((1,1),1))),1),((((1,((1,(3,(33,10))),((6,3),(1,1)))),1),(1,5)),2)),1),2))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((2,1),1),(1,(3,(2,1)))),1),((((1,((1,((1,1),(50,7))),((6,4),2))),1),(1,4)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,2),2))),1),((((1,((1,((2,2),(62,8))),((10,(2,1)),(1,1)))),1),(1,4)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((3,(2,((2,1),((1,(1,1)),1)))),1),((((1,((1,((1,2),(41,20))),((4,1),2))),1),(1,8)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,1),1)))),1),((((1,((1,((4,1),(44,16))),((7,3),1))),1),(2,7)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(1,((1,(1,1)),1)))),1),((((1,((1,((1,3),(57,18))),((2,(7,1)),2))),1),4),((1,1),1))),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(4,((1,2),1)))),1),((((1,((1,((4,1),(58,11))),((10,1),1))),1),(1,1)),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,((1,(1,1)),1)))),1),((((1,((1,((1,4),(42,7))),((5,4),1))),1),5),1)),1),2))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),1)))),1),((((1,((1,(5,(60,14))),((4,5),(1,1)))),1),(1,4)),2)),1),1))),((1,(2,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((3,(1,(1,(2,1)))),1),((((1,((1,(1,(53,11))),((4,(2,1)),(2,1)))),1),(1,3)),2)),1),3))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,((1,2),1)))),1),((((1,((1,(2,(47,13))),((7,2),1))),1),(1,3)),1)),1),2))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),1))),1),((((1,((1,((2,1),(53,8))),((7,2),3))),1),(3,5)),2)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(2,1)))),1),((((1,((1,((2,2),(40,7))),((4,7),2))),1),3),1)),1),2))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,((1,1),(2,1)))),1),((((1,((1,((1,2),(52,5))),((6,(5,2)),(1,2)))),1),(1,4)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((3,1),((1,1),1)))),1),((((1,((1,((3,1),(62,20))),((10,(1,1)),2))),1),(1,4)),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(2,(1,1)))),1),((((1,((1,((3,2),(56,10))),((5,(5,1)),1))),1),3),(1,1))),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((2,1),1),(1,(3,((1,(3,3)),1)))),1),((((1,((1,((3,1),(48,9))),((1,(1,1)),3))),1),(1,4)),((1,2),1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,5))),1),((((1,((1,(1,(44,11))),((7,3),2))),1),(1,3)),(2,1))),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,2),((1,1),1)))),1),((((1,((1,((5,1),(66,13))),((8,6),2))),1),(1,2)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(4,(2,1)))),1),((((1,((1,(4,(55,7))),((8,2),(1,1)))),1),(1,3)),1)),1),2))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,3))),1),((((1,((1,((2,1),(55,12))),((7,3),1))),1),8),3)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,2),((1,(2,1)),1)))),1),((((1,((1,(2,(50,13))),((6,5),2))),1),(3,2)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((4,1),((((1,((1,((1,2),(57,5))),((4,4),1))),1),(2,8)),2)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,((1,2),1)))),1),((((1,((1,(4,(63,11))),((3,(5,1)),1))),1),(1,7)),2)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(2,((1,1),1)))),1),((((1,((1,((1,3),(55,13))),((5,6),1))),1),(1,7)),(2,1))),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,((1,1),((1,1),1)))),1),((((1,((1,((2,3),(48,15))),((5,(1,1)),2))),1),(3,5)),((1,1),1))),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(2,1)))),1),((((1,((1,((3,4),(49,9))),((4,4),1))),1),5),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(4,1)))),1),((((1,((1,(3,(53,7))),((4,(4,1)),1))),1),(3,5)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,((1,1),(2,1)))),1),((((1,((1,(2,(75,16))),((5,6),1))),1),(1,5)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(2,(1,(1,1)))),1),((((1,((1,((1,1),(49,20))),((6,1),(1,1)))),1),4),3)),1),5))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(2,1)))),1),((((1,((1,(4,(38,10))),((5,(3,1)),3))),1),7),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),1)))),1),((((1,((1,((2,3),(38,9))),((10,8),2))),1),5),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,1),(1,1)))),1),((((1,((1,((1,2),(72,10))),((5,6),3))),1),(1,5)),(1,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,((1,1),((1,(2,1)),1)))),1),((((1,((1,((3,1),(41,11))),((6,(6,2)),2))),1),(2,2)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,(1,2)))),1),((((1,((1,(2,(35,15))),((7,5),1))),1),(1,5)),1)),1),2))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,((1,1),(1,1)))),1),((((1,((1,((5,2),(59,15))),((7,4),1))),1),(1,5)),1)),1),2))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(2,(1,1)))),1),((((1,((1,(1,(52,18))),((4,5),2))),1),(1,5)),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,(2,1)))),1),((((1,((1,((1,3),(52,15))),((3,2),(2,1)))),1),(2,4)),1)),1),2))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(2,((1,1),((1,(2,1)),1)))),1),((((1,((1,((4,1),(42,11))),((7,3),2))),1),4),2)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(4,((1,(1,1)),1)))),1),((((1,((1,(2,(58,13))),((8,3),1))),1),(1,8)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(1,((1,2),1)))),1),((((1,((1,((1,3),(44,12))),((3,(3,2)),2))),1),4),2)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,2),(1,((1,1),3))),1),((((1,((1,((3,1),(39,9))),((4,(5,1)),1))),1),(3,5)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,1),(3,1)))),1),((((1,((1,((1,1),(59,16))),((9,2),2))),1),(1,5)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(1,(44,5))),((8,3),2))),1),(3,3)),3)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(2,((1,4),1)))),1),((((1,((1,(3,(48,14))),((12,(1,1)),(1,1)))),1),1),2)),1),2))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,((1,(1,2)),1)))),1),((((1,((1,((2,1),(55,7))),((3,3),2))),1),(2,9)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,5),1)))),1),((((1,((1,((1,3),(41,12))),((3,3),4))),1),(1,4)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((3,1),(1,((1,1),((1,(1,1)),1)))),1),((((1,((1,(1,(78,19))),((4,(10,1)),2))),1),(1,7)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,(1,((1,2),1)))),1),((((1,((1,(1,(37,14))),((3,(3,1)),(1,3)))),1),(1,6)),2)),1),4))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,((1,2),1)))),1),((((1,((1,((3,1),(54,7))),((4,2),(1,3)))),1),(1,6)),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(3,(53,9))),((7,(6,1)),(1,1)))),1),(3,4)),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,(2,1)))),1),((((1,((1,(1,(71,12))),((10,(3,1)),2))),1),(2,4)),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(1,((1,1),1)))),1),((((1,((1,(2,(55,8))),((6,7),2))),1),(5,5)),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,(1,2)),1)))),1),((((1,((1,((2,3),(43,12))),((1,7),1))),1),(2,6)),(1,1))),1),2))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,5),1)))),1),((((1,((1,((4,2),(44,6))),((4,(3,1)),2))),1),(2,2)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,(1,((1,1),1)))),1),((((1,((1,(5,(41,7))),((5,7),1))),1),(3,11)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(1,((1,(2,1)),1)))),1),((((1,((1,((1,3),(65,16))),((9,(5,1)),(1,1)))),1),(1,4)),(1,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,((1,3),1)))),1),((((1,((1,((1,1),(67,5))),((5,7),1))),1),(3,4)),1)),1),3))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,4))),1),((((1,((1,((4,1),(48,16))),((3,6),1))),1),(1,3)),1)),1),3))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,2),(3,(1,((1,2),1)))),1),((((1,((1,((3,1),(57,10))),((3,3),3))),1),(1,3)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,((2,3),(2,1)))),1),((((1,((1,(2,(46,9))),((4,(2,2)),(1,1)))),1),(2,9)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,((1,1),3))),1),((((1,((1,((1,1),(46,5))),((9,3),(2,1)))),1),(2,9)),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((3,1),(1,((1,1),((1,(2,1)),1)))),1),((((1,((1,((3,2),(68,16))),((5,2),(1,1)))),1),7),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetHardBinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((4,4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((4,4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((4,4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((4,4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((4,4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((((4,4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((((4,4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((4,4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((4,4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((4,4),4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((4,4),4),4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((4,4),4),4),4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((4,4),4),4),4),4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((4,4),4),4),4),4),4),4),4),4),4),4),4),4),4),4)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((((4,4),4),4),4),4),4),4),4),4),4),4),4),3),3),3),3)");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetLightBiologicalBinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,1)),1),((((1,((1,(1,(10,3))),((3,2),1))),1),2),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,1))),1),((((1,((1,(1,(18,3))),((1,(2,2)),2))),1),1),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,4)),1)))),1),((((1,((1,(2,(11,5))),((1,1),1))),1),2),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,1),1)))),1),((((1,((1,((1,1),(12,6))),(4,1))),1),(1,2)),2)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,1),(1,1)))),1),((((1,((1,(2,(32,6))),((1,2),(1,1)))),1),(1,1)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,2),1),((((1,((1,((1,1),(17,3))),(4,1))),1),7),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,2))),1),((((1,((1,(1,(29,3))),((5,1),1))),1),(2,1)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,1)),1),((((1,((1,((1,1),(30,7))),((6,(1,1)),(1,2)))),1),(1,1)),(1,1))),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,(2,(19,3))),(4,1))),1),3),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,((1,1),(18,4))),((2,2),1))),1),7),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,2))),1),((((1,((1,(1,(11,7))),((4,(2,1)),1))),1),3),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,2),1))),1),((((1,((1,(2,(22,4))),((1,2),(1,1)))),1),(1,1)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((2,1),((((1,((1,(1,(16,9))),((2,4),1))),1),2),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,(1,1)))),1),((((1,((1,(3,(37,12))),((2,1),1))),1),(1,1)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(1,1)))),1),((((1,((1,((1,1),(19,3))),((3,1),1))),1),(3,3)),(1,1))),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(1,((1,1),1)))),1),((((1,((1,(1,(27,5))),((4,2),1))),1),3),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(2,(37,5))),((2,(2,1)),1))),1),(1,1)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,1),2)))),1),((((1,((1,(1,(23,8))),((3,3),1))),1),(1,2)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,2)))),1),((((1,((1,((1,1),(26,4))),((2,3),1))),1),3),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,((1,(2,1)),1)))),1),((((1,((1,(1,(13,7))),((2,3),3))),1),(1,2)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,1),1)))),1),((((1,((1,(2,(28,5))),((2,1),2))),1),1),2)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(2,((1,1),2))),1),((((1,((1,(1,(23,7))),((3,2),1))),1),(1,1)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,(1,1)),1)))),1),((((1,((1,((1,1),(35,7))),((5,1),1))),1),2),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,((2,1),(24,4))),((3,3),1))),1),3),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(3,1)))),1),((((1,((1,(1,(34,7))),(1,2))),1),7),(1,1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,(2,(26,8))),((4,3),1))),1),1),1)),2),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,2))),1),((((1,((1,(2,(31,7))),((3,2),1))),1),2),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,(1,(29,9))),((3,(1,1)),1))),1),(1,3)),2)),1),2))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,2))),1),((((1,((1,(1,(13,7))),((3,1),2))),1),1),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,1),1)))),1),((((1,((1,(1,(35,11))),((3,(1,1)),1))),1),(1,2)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,2)),1),((((1,((1,(1,(32,10))),((3,3),1))),1),1),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,2),1)))),1),((((1,((1,(1,(31,9))),((1,3),1))),1),3),2)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,2),1)))),1),((((1,((1,(1,(27,3))),((3,3),1))),1),(1,2)),(1,1))),1),2))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(2,1)))),1),((((1,((1,(2,(23,4))),((3,2),1))),1),3),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,(2,(16,3))),((2,2),(1,1)))),1),(2,3)),3)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(1,(19,7))),((2,2),2))),1),(1,1)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),1)))),1),((((1,((1,((1,1),(32,5))),((3,6),(1,1)))),1),2),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,(1,1)),1)))),1),((((1,((1,(1,(32,13))),((1,(2,2)),1))),1),(3,2)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,1))),1),((((1,((1,(1,(23,4))),((3,4),2))),1),2),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(2,1))),1),((((1,((1,((4,2),(25,2))),((2,1),2))),1),(1,3)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,1),1)))),1),((((1,((1,((4,1),(30,9))),((4,3),1))),1),1),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,2))),1),((((1,((1,(2,19)),((5,2),2))),1),4),(1,1))),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(1,(2,1)))),1),((((1,((1,(4,(44,6))),((1,(1,1)),3))),1),(1,1)),(1,1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,1),((1,(1,1)),1)))),1),((((1,((1,(1,(31,8))),((6,1),1))),1),1),2)),1),2))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,3))),1),((((1,((1,(2,(23,6))),(4,1))),1),2),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),2)))),1),((((1,((1,(1,(27,8))),(4,2))),1),5),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,2),1),(1,3)),1),((((1,((1,(2,(23,9))),((4,1),1))),1),(1,2)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,((1,1),(2,1)))),1),((((1,((1,(2,(40,10))),((2,4),1))),1),1),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,((2,2),(35,8))),((2,2),1))),1),(1,4)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,2),1)))),1),((((1,((1,((1,2),(27,7))),((2,2),2))),1),(1,1)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,((1,2),1)))),1),((((1,((1,((2,1),(33,5))),((1,(2,1)),1))),1),(2,6)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,((1,1),((1,1),1)))),1),((((1,((1,(1,(38,4))),((2,3),(1,3)))),1),(1,3)),(1,1))),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,2),((1,1),1)))),1),((((1,((1,(2,(22,4))),((2,(3,1)),3))),1),(1,3)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,3))),1),((((1,((1,(2,(21,2))),((4,2),2))),1),3),2)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,2),(1,1)))),1),((((1,((1,(1,(36,8))),((2,2),1))),1),2),2)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(2,((1,2),1)))),1),((((1,((1,(1,(25,9))),((4,1),1))),1),(1,6)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(1,1)),1)))),1),((((1,((1,((1,1),(22,9))),((5,3),1))),1),5),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((3,3),1),((((1,((1,(1,(21,8))),((3,1),3))),1),(1,1)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,4),1)))),1),((((1,((1,(4,(28,10))),((1,1),1))),1),(1,1)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,(1,1)),1)))),1),((((1,((1,((2,1),(46,3))),((1,4),1))),1),(1,4)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(3,(2,1)))),1),((((1,((1,(2,(35,11))),1)),1),(1,2)),(3,1))),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((3,(1,(1,((1,1),1)))),1),((((1,((1,(2,(25,4))),((2,1),(2,1)))),1),5),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,1),1)))),1),((((1,((1,(3,(42,6))),((3,3),1))),1),3),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,((1,1),(37,5))),((7,2),1))),1),(1,3)),(3,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,1))),1),((((1,((1,(3,(20,7))),((3,2),1))),1),2),2)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,1),2))),1),((((1,((1,((3,1),(18,6))),((4,1),2))),1),(2,1)),(1,1))),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,2),((1,1),1)))),1),((((1,((1,((1,4),(30,6))),((3,1),1))),1),(1,5)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,(1,1)),1)))),1),((((1,((1,(2,(26,7))),((5,2),1))),1),7),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,((1,2),1)))),1),((((1,((1,((2,1),(31,9))),((2,1),1))),1),(1,2)),2)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,(1,(33,9))),((7,2),2))),1),2),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,(1,1)))),1),((((1,((1,(1,(40,12))),((4,1),1))),1),3),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,((1,1),1))),1),((((1,((1,(1,(29,8))),((6,3),1))),1),4),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(2,((((((2,1),(1,((1,1),((1,(1,1)),1)))),1),((((1,((1,((1,1),(34,6))),((3,(1,1)),(1,1)))),1),3),3)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,4),1)))),1),((((1,((1,((1,1),(44,10))),((1,3),1))),1),5),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),1))),1),((((1,((1,((3,1),(44,5))),((2,(3,1)),(3,1)))),1),2),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,2))),1),((((1,((1,(1,(34,7))),((4,(1,3)),1))),1),2),1)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,2),1)))),1),((((1,((1,(2,(15,5))),((4,3),2))),1),3),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,2))),1),((((1,((1,(1,(16,4))),((1,(4,1)),(2,2)))),1),5),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((3,1),(1,(1,(3,1)))),1),((((1,((1,(2,(26,5))),((2,2),1))),1),(1,3)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((1,1),((1,(1,2)),1)))),1),((((1,((1,(1,(42,9))),((3,2),3))),1),(1,2)),(1,1))),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((2,1),(1,(1,((1,(1,1)),1)))),1),((((1,((1,((1,2),(15,5))),((5,3),(1,1)))),1),(1,3)),1)),1),1))),((1,2),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(4,1)))),1),((((1,((1,(3,(28,5))),((1,(3,1)),1))),1),2),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,2),(1,2)))),1),((((1,((1,(1,(29,6))),((4,3),1))),1),1),1)),1),1))),((1,(1,1)),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(2,2))),1),((((1,((1,(3,(20,5))),(4,1))),1),(3,1)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,2),4))),1),((((1,((1,((1,1),(36,9))),((1,(1,1)),1))),1),3),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,1))),1),((((1,((1,((1,1),(33,13))),((5,4),1))),1),2),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(1,1)))),1),((((1,((1,((2,1),(47,10))),((3,(1,1)),1))),1),(1,5)),2)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,2)),1),((((1,((1,((2,1),(13,3))),((5,2),(1,2)))),1),3),2)),1),2))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((2,(1,(1,((1,2),1)))),1),((((1,((1,(1,(30,7))),((3,1),(1,2)))),1),4),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,(2,2)))),1),((((1,((1,(2,(23,8))),((3,1),1))),1),(1,2)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,(2,1)),1)))),1),((((1,((1,((4,1),(42,5))),((4,1),1))),1),(1,4)),1)),1),1))),1)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,((1,2),1)))),1),((((1,((1,(2,(21,6))),((6,2),1))),1),3),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,((2,1),2))),1),((((1,((1,(2,(29,6))),((2,2),1))),1),(1,4)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((((1,1),1),(1,(1,((1,2),1)))),1),((((1,((1,(3,(47,6))),((4,1),1))),1),(1,5)),1)),1),1))),(1,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,1)),1),((((1,((1,(1,(51,10))),((3,2),(1,2)))),1),(2,1)),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(2,2))),1),((((1,((1,(2,(22,2))),((2,6),1))),1),5),1)),1),1))),2)");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,((((((1,1),(1,(1,(1,1)))),1),((((1,((1,(1,(46,10))),((2,2),2))),1),(1,4)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(1,((1,3),1)))),1),((((1,((1,((1,1),(18,7))),((6,1),1))),1),(1,3)),1)),1),1))),(3,1))");<br/>
&nbsp;&nbsp;v.push_back("((2,(1,(((((1,(1,((1,1),1))),1),((((1,((1,((3,1),(28,8))),((2,(2,2)),3))),1),(1,1)),1)),1),1))),((1,1),1))");<br/>
&nbsp;&nbsp;v.push_back("((1,(1,(((((1,(1,(3,(1,1)))),1),((((1,((1,((3,1),(23,7))),((3,2),1))),1),(1,2)),1)),1),1))),(2,1))");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetLightBinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((2,2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetLightTrinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinarity in leaf<br/>
&nbsp;&nbsp;v.push_back("((2,2,2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2,2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2,2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2,2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2,2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2,2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2,2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2,2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2,2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinarity in root<br/>
&nbsp;&nbsp;v.push_back("((2,2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinarity in root and leaf<br/>
&nbsp;&nbsp;v.push_back("((2,2,2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2,2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2,2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2,2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2,2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2,2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2,2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2,2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2,2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((2,2,2),2),2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinarity in root, 1st and 2nd leaf<br/>
&nbsp;&nbsp;v.push_back("(((2,2,2),2,2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2,2),2,2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2,2),2,2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2,2),2,2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2,2),2,2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2,2),2,2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2,2),2,2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((2,2,2),2,2),2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinarity in root, 1st, 2nd and 3rdleaf<br/>
&nbsp;&nbsp;v.push_back("((((2,2,2),2,2),2,2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2,2),2,2),2,2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2,2),2,2),2,2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2,2),2,2),2,2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2,2),2,2),2,2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2,2),2,2),2,2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((((2,2,2),2,2),2,2),2),2),2),2),2),2),2),2),2),2),2),2,2)");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetM<a href="CppAny.htm">any</a>Binary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((90,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((90,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((90,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((80,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((80,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((80,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((70,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((70,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((70,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((60,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((60,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((60,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((50,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((50,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((50,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((5,5),5)");<br/>
&nbsp;&nbsp;v.push_back("((40,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((40,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((40,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((30,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((30,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((30,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((3,3),3)");<br/>
&nbsp;&nbsp;v.push_back("((20,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((20,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((20,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((2,3),3)");<br/>
&nbsp;&nbsp;v.push_back("((2,2),3)");<br/>
&nbsp;&nbsp;v.push_back("((2,2),2)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),90)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),80)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),70)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),60)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),50)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),40)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),30)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),20)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((1000,100),10)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),90)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),80)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),70)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),60)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),50)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),40)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),30)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),20)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),100)");<br/>
&nbsp;&nbsp;v.push_back("((100,100),10)");<br/>
&nbsp;&nbsp;v.push_back("((10,1000),100)");<br/>
&nbsp;&nbsp;v.push_back("((10,100),1000)");<br/>
&nbsp;&nbsp;v.push_back("((10,100),100)");<br/>
&nbsp;&nbsp;v.push_back("(((5,5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("(((3,3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((2,3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("(((2,2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((5,5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("((((3,3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((2,3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("((((2,2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((5,5),5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("(((((3,3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((2,2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((5,5),5),5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("((((((3,3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((2,2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((5,5),5),5),5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("(((((((3,3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((2,2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((5,5),5),5),5),5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("((((((((3,3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),2),2),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((2,2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((5,5),5),5),5),5),5),5),5),5)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),2),2),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((2,2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),2),2),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((2,2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),2),2),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((2,2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2),2),2),2),2),2),2),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2)");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetMediumBinary<a href="CppNewick.htm">Newick</a>s()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("((3,3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((3,3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((3,3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((3,3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((3,3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((3,3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((3,3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((3,3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((3,3),3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("(((((((((((3,3),3),3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;v.push_back("((((((((((((3,3),3),3),3),3),3),3),3),3),3),3),3)");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestNewick.htm">TestNewick</a>Dialog::SaveTable(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdOfstream.htm">std::ofstream</a> f(filename);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> row: m_table)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> row.<a href="CppNewick.htm">newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ','<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> row.theta<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ','<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> row.test_name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ','<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> row.probability<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ','<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> row.<a href="CppTime.htm">time</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewickresult.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewickresult.h" border = "1"><tr><td><code>
<br/>
<a href="CppIfndef.htm">#ifndef</a> TESTNEWICKRESULT_H<br/>
<a href="CppDefine.htm">#define</a> TESTNEWICKRESULT_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestNewick.htm">TestNewick</a>Result<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> <a href="CppNewick.htm">newick</a>;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> theta;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> probability;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> test_name;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> <a href="CppTime.htm">time</a>;<br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="ToolTestNewick.htm">TestNewick</a>Result&amp; r);<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TESTNEWICKRESULT_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/testnewickresult.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/testnewickresult.cpp" border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>result.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="ToolTestNewick.htm">TestNewick</a>Result&amp; r)<br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> r.<a href="CppNewick.htm">newick</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> r.theta <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> r.test_name <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> r.probability <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> r.<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/wtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/wtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppProgram_options.htm">boost/program_options.hpp</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWApplication.htm">WApplication</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppEncranger.htm">encranger</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "wttest<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWtAboutDialog.htm">wtaboutdialog</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a><a href="CppApplication.htm">Application</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppWApplication.htm">Wt::WApplication</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a><a href="CppApplication.htm">Application</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppWEnvironment.htm">Wt::WEnvironment</a>&amp; env)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppWApplication.htm">Wt::WApplication</a>(env)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;useStyleSheet("wt.css");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setTitle("<a href="ToolTestNewick.htm">TestNewick</a>");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ShowMain();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> ShowMain()<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog * <b><a href="CppConst.htm">const</a></b> d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_signal_about.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a><a href="CppApplication.htm">Application</a>::Show<a href="CppAbout.htm">About</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;root()-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;root()-&gt;addWidget(d);<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Show<a href="CppAbout.htm">About</a>()<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">About</a> <a href="CppAbout.htm">about</a> <a href="CppOperatorAssign.htm">=</a> <a href="ToolTestNewick.htm">TestNewick</a>Dialog::GetAbout();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppEncranger.htm">Encranger</a>: <a href="CppVersion.htm">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppEncranger.htm">Encranger</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWtAboutDialog.htm">WtAboutDialog</a> * <b><a href="CppConst.htm">const</a></b> d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWtAboutDialog.htm">WtAboutDialog</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_signal_close.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a><a href="CppApplication.htm">Application</a>::ShowMain,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;root()-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;root()-&gt;addWidget(d);<br/>
<br/>
&nbsp;&nbsp;}<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppWApplication.htm">Wt::WApplication</a> *create<a href="CppApplication.htm">Application</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWEnvironment.htm">Wt::WEnvironment</a>&amp; env)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppNew.htm">new</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a><a href="CppApplication.htm">Application</a>(env);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> **<a href="CppArgc.htm">argv</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::options_description d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Allowed options <b><a href="CppFor.htm">for</a></b> <a href="ToolTestNewick.htm">TestNewick</a>");<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> docroot;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> http_address;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> http_port;<br/>
&nbsp;&nbsp;d.add_options()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("help",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"produce <b><a href="CppThis.htm">this</a></b> help message")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("docroot",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;docroot)-&gt;default_value("."),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "the docroot")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("http-address",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;http_address)-&gt;default_value("0.0.0.0"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "the server's http <a href="CppAddress.htm">address</a>")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("http-port",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppBoostProgram_options.htm">boost::program_options</a>::value&lt;<a href="CppStdString.htm">std::string</a>&gt;(&amp;http_port)-&gt;default_value("8080"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "the server's http port")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::variables_map m;<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::store(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::parse_command_line(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>, d), m);<br/>
&nbsp;&nbsp;<a href="CppBoostProgram_options.htm">boost::program_options</a>::notify(m);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m.count("help"))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the options_description<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> d <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create the arguments in <a href="CppStdString.htm">std::string</a> format<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v(7);<br/>
&nbsp;&nbsp;v[0] <a href="CppOperatorAssign.htm">=</a> <a href="CppArgc.htm">argv</a>[0];<br/>
&nbsp;&nbsp;v[1] <a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>docroot";<br/>
&nbsp;&nbsp;v[2] <a href="CppOperatorAssign.htm">=</a> docroot;<br/>
&nbsp;&nbsp;v[3] <a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>http-address";<br/>
&nbsp;&nbsp;v[4] <a href="CppOperatorAssign.htm">=</a> http_address;<br/>
&nbsp;&nbsp;v[5] <a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>http-port";<br/>
&nbsp;&nbsp;v[6] <a href="CppOperatorAssign.htm">=</a> http_port;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> the arguments to <b><a href="CppChar.htm">char</a></b>* format<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<b><a href="CppChar.htm">char</a></b>*&gt; w(7);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>7; <a href="CppOperatorIncrement.htm">++</a>i) w[i] <a href="CppOperatorAssign.htm">=</a> &amp;v[i][0];<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Give <a href="CppWt.htm">Wt</a> the modified parameters<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> WRun(w.size(), &amp;w[0], &amp;create<a href="CppApplication.htm">Application</a>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/wttestnewickdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/wttestnewickdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> WTTESTNEWICKDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> WTTESTNEWICKDIALOG_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.htm">WContainerWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPushButton.htm">WPushButton</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTable.htm">WTable</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTextArea.htm">WTextArea</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppWContainerWidget.htm">Wt::WContainerWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog();<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_about;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_close;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_<a href="CppAny.htm">any</a>_change;<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="ToolTestNewick.htm">TestNewick</a>Dialog m_dialog;<br/>
&nbsp;&nbsp;<a href="CppWLineEdit.htm">Wt::WLineEdit</a> * <b><a href="CppConst.htm">const</a></b> m_edit_<a href="CppNewick.htm">newick</a>;<br/>
&nbsp;&nbsp;<a href="CppWLineEdit.htm">Wt::WLineEdit</a> * <b><a href="CppConst.htm">const</a></b> m_edit_password;<br/>
&nbsp;&nbsp;<a href="CppWLineEdit.htm">Wt::WLineEdit</a> * <b><a href="CppConst.htm">const</a></b> m_edit_theta;<br/>
&nbsp;&nbsp;<a href="CppWTable.htm">Wt::WTable</a> * <b><a href="CppConst.htm">const</a></b> m_table;<br/>
&nbsp;&nbsp;<a href="CppWTextArea.htm">Wt::WTextArea</a> * <b><a href="CppConst.htm">const</a></b> m_text;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Display();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppAbout.htm">About</a>();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnCalculate();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClose();<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTTESTNEWICKDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/wttestnewickdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/wttestnewickdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppBOOST_FOREACH.htm">foreach</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/conversion/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppTuple.htm">tuple</a>/<a href="CppTuple.htm">tuple</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWBreak.htm">WBreak</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLabel.htm">WLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLineEdit.htm">WLineEdit</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWText.htm">WText</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTextArea.htm">WTextArea</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppEncranger.htm">encranger</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewick.htm">newick</a>ravindran.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppNewickVector.htm">newickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppSortedBinaryNewickVector.htm">sortedbinarynewickvector</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppNewick.htm">newick</a>result.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "wttest<a href="CppNewick.htm">newick</a>dialog.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog()<br/>
&nbsp;&nbsp;: m_edit_<a href="CppNewick.htm">newick</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppWLineEdit.htm">Wt::WLineEdit</a>("((2,2),2)")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_password(<b><a href="CppNew.htm">new</a></b> <a href="CppWLineEdit.htm">Wt::WLineEdit</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_theta(<b><a href="CppNew.htm">new</a></b> <a href="CppWLineEdit.htm">Wt::WLineEdit</a>("10")),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table(<b><a href="CppNew.htm">new</a></b> <a href="CppWTable.htm">Wt::WTable</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text(<b><a href="CppNew.htm">new</a></b> <a href="CppWTextArea.htm">Wt::WTextArea</a>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setContentAlignment(<a href="CppWt.htm">Wt</a>::AlignCenter);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWText.htm">Wt::WText</a> * <b><a href="CppConst.htm">const</a></b> title <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("<a href="ToolTestNewick.htm">TestNewick</a>");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;title-&gt;setStyleClass("title");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(title);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.htm">Wt::WLabel</a>("Password ",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;m_edit_password-&gt;setEchoMode(<a href="CppWLineEdit.htm">Wt::WLineEdit</a>::Password);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_edit_password);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.htm">Wt::WLabel</a>("<a href="CppNewick.htm">Newick</a>&nbsp;&nbsp; ",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_edit_<a href="CppNewick.htm">newick</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.htm">Wt::WLabel</a>("Theta&nbsp;&nbsp;&nbsp;&nbsp;",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_edit_theta);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 0)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("<a href="CppNewick.htm">Newick</a>"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 1)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Theta"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 2)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Test"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 3)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Probability"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 4)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("<a href="CppTime.htm">Time</a> (sec)"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(1, 0)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("..."));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(1, 1)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("..."));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(1, 2)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("..."));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(1, 3)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("..."));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(1, 4)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("..."));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_table);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_text);<br/>
&nbsp;&nbsp;m_text-&gt;setMinimumSize(600,<a href="CppWLength.htm">Wt::WLength</a>::Auto);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.htm">Wt::WBreak</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppWPushButton.htm">Wt::WPushButton</a> * <b><a href="CppConst.htm">const</a></b> button_calculate <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWPushButton.htm">Wt::WPushButton</a>("Calculate",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppWPushButton.htm">Wt::WPushButton</a> * <b><a href="CppConst.htm">const</a></b> button_about <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWPushButton.htm">Wt::WPushButton</a>("<a href="CppAbout.htm">About</a>",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppWPushButton.htm">Wt::WPushButton</a> * <b><a href="CppConst.htm">const</a></b> button_close <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWPushButton.htm">Wt::WPushButton</a>("Close",<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;button_calculate-&gt;clicked().connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::OnCalculate);<br/>
&nbsp;&nbsp;button_about-&gt;clicked().connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::On<a href="CppAbout.htm">About</a>);<br/>
&nbsp;&nbsp;button_close-&gt;clicked().connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::OnClose);<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::Display()<br/>
{<br/>
&nbsp;&nbsp;m_text-&gt;setText(m_dialog.GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display table<br/>
&nbsp;&nbsp;m_table-&gt;clear();<br/>
&nbsp;&nbsp;m_table-&gt;setHeaderCount(1);<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 0)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("<a href="CppNewick.htm">Newick</a>"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 1)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Theta"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 2)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Test"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 3)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("Probability"));<br/>
&nbsp;&nbsp;m_table-&gt;elementAt(0, 4)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>("<a href="CppTime.htm">Time</a> (sec)"));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="ToolTestNewick.htm">TestNewick</a>Result&gt;&amp; table <a href="CppOperatorAssign.htm">=</a> m_dialog.GetTable();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_results <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(table.size());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> result <a href="CppOperatorAssign.htm">=</a> 0; result<a href="CppOperatorNotEqual.htm">!=</a>n_results; <a href="CppOperatorIncrement.htm">++</a>result)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppNewick.htm">newick</a> <a href="CppOperatorAssign.htm">=</a> table[result].<a href="CppNewick.htm">newick</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> theta <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> prob <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].probability);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> table[result].test_name;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppTime.htm">time</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(table[result].<a href="CppTime.htm">time</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,0)-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,1)-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,2)-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,3)-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,4)-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,0)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>(<a href="CppNewick.htm">newick</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,1)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>(theta));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,2)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>(name));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,3)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>(prob));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_table-&gt;elementAt(result+1,4)-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWText.htm">Wt::WText</a>(<a href="CppTime.htm">time</a>));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::On<a href="CppAbout.htm">About</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppEmit.htm">Emit</a> that <a href="CppAbout.htm">about</a> is clicked<br/>
&nbsp;&nbsp;m_signal_about();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::OnCalculate()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> m_edit_password-&gt;text().toUTF8();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEncranger.htm">Encranger</a> e(2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> t <a href="CppOperatorAssign.htm">=</a> e.Encrypt(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (t <a href="CppOperatorNotEqual.htm">!=</a> "3BImP[7K(L32fjzko)p|X8#+Dy1q=[pWAP")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_text-&gt;setText("Invalid password");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_dialog.DoAutoCalculate(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_<a href="CppNewick.htm">newick</a>-&gt;text().toUTF8(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_theta-&gt;text().toUTF8(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"10000");<br/>
<br/>
&nbsp;&nbsp;Display();<br/>
<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWt.htm">Wt</a><a href="ToolTestNewick.htm">TestNewick</a>Dialog::OnClose()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEmit.htm">emit</a></b> that <b><a href="CppThis.htm">this</a></b> dialog closes<br/>
&nbsp;&nbsp;m_signal_close();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/benchmark_full.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/benchmark_full.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
./ToolTestNewickDesktopRelease --newick='((90,1000),100)' --theta=10.0 &gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((90,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((90,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((80,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((80,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((80,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((70,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((70,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((70,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((60,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((60,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((60,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((50,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((50,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((50,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((5,5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((40,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((40,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((40,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((30,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((30,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((30,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((3,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((20,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((20,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((20,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),90)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),80)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),70)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),60)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),50)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),40)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),30)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),20)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((1000,100),10)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),90)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),80)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),70)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),60)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),50)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),40)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),30)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),20)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((100,100),10)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((10,1000),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((10,100),1000)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((10,100),100)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((5,5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((3,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((5,5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((3,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((5,5),5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((3,3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,2),2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,2),2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((2,2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((5,5),5),5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((3,3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),2),2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),2),2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((2,2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((5,5),5),5),5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((3,3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),2),2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),2),2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((2,2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((5,5),5),5),5),5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((3,3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),2),2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),2),2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((2,2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((5,5),5),5),5),5),5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,3),3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),2),2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),2),2),2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((2,2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),3),3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),3),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),2),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),2),2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),2),2),2),2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((2,2),2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((2,2),2),2),2),3),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((2,2),2),2),2),2),3),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((2,2),2),2),2),2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((2,2),2),2),2),2),2),2),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((2,2),2),2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((((2,2),2),2),2),2),2),2),3),3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((((((((((((2,2),2),2),2),2),2),2),2),2),2),2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/benchmark_test.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/benchmark_test.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
./ToolTestNewickDesktopRelease --newick='((5,5),5)' --theta=10.0 &gt;&nbsp;&nbsp;benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((5,5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((3,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((3,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((2,2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((5,5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((5,5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((3,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((3,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='(((2,2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((5,5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((5,5),5),5),5)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((3,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((3,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,3),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),3),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),3),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),3)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
./ToolTestNewickDesktopRelease --newick='((((2,2),2),2),2)' --theta=10.0 &gt;&gt; benchmark.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestNewick/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestNewick/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#zip packs all the files to port into a single .zip file,<br/>
#minicking the same folder structure<br/>
#Folder structure<br/>
# *<br/>
#&nbsp;&nbsp; * Classes<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppAbout<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppAssert<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppBinaryNewickVector<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppEncranger<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppLoopReader<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppManyDigitNewick<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppMultiVector<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppNewick<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppNewickRavindran<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppNewickVector<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppQtAboutDialog<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppSortedBinaryNewickVector<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppTrace<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppTwoDigitNewick<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppWtAboutDialog<br/>
#&nbsp;&nbsp; * Libraries<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * bigint-2010.04.30<br/>
#&nbsp;&nbsp; * Tools<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* ToolTestNewick<br/>
echo "Mimicking file structure"<br/>
mkdir temp_zip<br/>
mkdir temp_zip/Classes<br/>
mkdir temp_zip/Classes/CppAbout<br/>
mkdir temp_zip/Classes/CppAssert<br/>
mkdir temp_zip/Classes/CppBinaryNewickVector<br/>
mkdir temp_zip/Classes/CppEncranger<br/>
mkdir temp_zip/Classes/CppLoopReader<br/>
mkdir temp_zip/Classes/CppManyDigitNewick<br/>
mkdir temp_zip/Classes/CppMultiVector<br/>
mkdir temp_zip/Classes/CppNewick<br/>
mkdir temp_zip/Classes/CppNewickRavindran<br/>
mkdir temp_zip/Classes/CppNewickVector<br/>
mkdir temp_zip/Classes/CppQtAboutDialog<br/>
mkdir temp_zip/Classes/CppSortedBinaryNewickVector<br/>
mkdir temp_zip/Classes/CppTrace<br/>
mkdir temp_zip/Classes/CppTwoDigitNewick<br/>
mkdir temp_zip/Classes/CppWtAboutDialog<br/>
mkdir temp_zip/Libraries<br/>
mkdir temp_zip/Libraries/bigint-2010.04.30<br/>
mkdir temp_zip/Tools<br/>
mkdir temp_zip/Tools/ToolTestNewick<br/>
<br/>
echo "Copying files"<br/>
cp ../../Classes/CppAbout/*.* temp_zip/Classes/CppAbout<br/>
cp ../../Classes/CppAssert/*.* temp_zip/Classes/CppAssert<br/>
cp ../../Classes/CppBinaryNewickVector/*.* temp_zip/Classes/CppBinaryNewickVector<br/>
cp ../../Classes/CppEncranger/*.* temp_zip/Classes/CppEncranger<br/>
cp ../../Classes/CppLoopReader/*.* temp_zip/Classes/CppLoopReader<br/>
cp ../../Classes/CppManyDigitNewick/*.* temp_zip/Classes/CppManyDigitNewick<br/>
cp ../../Classes/CppMultiVector/*.* temp_zip/Classes/CppMultiVector<br/>
cp ../../Classes/CppNewick/*.* temp_zip/Classes/CppNewick<br/>
cp ../../Classes/CppNewickRavindran/*.* temp_zip/Classes/CppNewickRavindran<br/>
cp ../../Classes/CppNewickVector/*.* temp_zip/Classes/CppNewickVector<br/>
cp ../../Classes/CppQtAboutDialog/*.* temp_zip/Classes/CppQtAboutDialog<br/>
cp ../../Classes/CppSortedBinaryNewickVector/*.* temp_zip/Classes/CppSortedBinaryNewickVector<br/>
cp ../../Classes/CppTrace/*.* temp_zip/Classes/CppTrace<br/>
cp ../../Classes/CppTwoDigitNewick/*.* temp_zip/Classes/CppTwoDigitNewick<br/>
cp ../../Classes/CppWtAboutDialog/*.* temp_zip/Classes/CppWtAboutDialog<br/>
cp ../../Libraries/bigint-2010.04.30/*.* temp_zip/Libraries/bigint-2010.04.30<br/>
cp ../../Tools/ToolTestNewick/*.* temp_zip/Tools/ToolTestNewick<br/>
<br/>
echo "Compressing files"<br/>
cd temp_zip<br/>
<br/>
zip -r ToolTestNewickSource_1_0 Classes<br/>
zip -r ToolTestNewickSource_1_0 Libraries<br/>
zip -r ToolTestNewickSource_1_0 Tools<br/>
<br/>
echo "Copying zipped file from temp folder to this folder"<br/>
<br/>
cd ..<br/>
cp temp_zip/ToolTestNewickSource_1_0.zip ToolTestNewickSource_1_0.zip<br/>
<br/>
echo "Cleaning up"<br/>
#Classes<br/>
rm temp_zip/Classes/CppAbout/*.*<br/>
rm temp_zip/Classes/CppAssert/*.*<br/>
rm temp_zip/Classes/CppBinaryNewickVector/*.*<br/>
rm temp_zip/Classes/CppEncranger/*.*<br/>
rm temp_zip/Classes/CppLoopReader/*.*<br/>
rm temp_zip/Classes/CppManyDigitNewick/*.*<br/>
rm temp_zip/Classes/CppMultiVector/*.*<br/>
rm temp_zip/Classes/CppNewick/*.*<br/>
rm temp_zip/Classes/CppNewickRavindran/*.*<br/>
rm temp_zip/Classes/CppNewickVector/*.*<br/>
rm temp_zip/Classes/CppQtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppSortedBinaryNewickVector/*.*<br/>
rm temp_zip/Classes/CppTrace/*.*<br/>
rm temp_zip/Classes/CppTwoDigitNewick/*.*<br/>
rm temp_zip/Classes/CppWtAboutDialog/*.*<br/>
rmdir temp_zip/Classes/CppAbout<br/>
rmdir temp_zip/Classes/CppAssert<br/>
rmdir temp_zip/Classes/CppBinaryNewickVector<br/>
rmdir temp_zip/Classes/CppEncranger<br/>
rmdir temp_zip/Classes/CppLoopReader<br/>
rmdir temp_zip/Classes/CppManyDigitNewick<br/>
rmdir temp_zip/Classes/CppMultiVector<br/>
rmdir temp_zip/Classes/CppNewick<br/>
rmdir temp_zip/Classes/CppNewickRavindran<br/>
rmdir temp_zip/Classes/CppNewickVector<br/>
rmdir temp_zip/Classes/CppQtAboutDialog<br/>
rmdir temp_zip/Classes/CppSortedBinaryNewickVector<br/>
rmdir temp_zip/Classes/CppTrace<br/>
rmdir temp_zip/Classes/CppTwoDigitNewick<br/>
rmdir temp_zip/Classes/CppWtAboutDialog<br/>
rmdir temp_zip/Classes<br/>
#Libraries<br/>
rm temp_zip/Libraries/bigint-2010.04.30/*.*<br/>
rmdir temp_zip/Libraries/bigint-2010.04.30<br/>
rmdir temp_zip/Libraries<br/>
#Tools<br/>
rm temp_zip/Tools/ToolTestNewick/*.*<br/>
rmdir temp_zip/Tools/ToolTestNewick<br/>
rmdir temp_zip/Tools<br/>
rm temp_zip/*.*<br/>
rmdir temp_zip<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
