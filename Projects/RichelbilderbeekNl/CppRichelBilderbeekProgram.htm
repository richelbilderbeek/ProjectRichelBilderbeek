<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>RichelBilderbeekProgram</title>
  <meta name="description" content="C++ RichelBilderbeekProgram"/>
  <meta name="keywords" content="C++ RichelBilderbeekProgram "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 09:57:41 2015
 -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a> is a
<a href="CppClass.htm">class</a> for a ProjectRichelBilderbeek class.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/CppRichelBilderbeekProgram.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/CppRichelBilderbeekProgram.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>types.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>types.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogram.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogram.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Program, <b><a href="CppClass.htm">class</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Program.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RIBI_RICHELBILDERBEEKPROGRAM_H<br/>
<a href="CppDefine.htm">#define</a> RIBI_RICHELBILDERBEEKPROGRAM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>RichelBilderbeek::Program is the <a href="CppBaseClass.htm">base class</a> <b><a href="CppFor.htm">for</a></b> program information<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Program() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppStdVector.htm">std::vector</a> with all different Program <a href="CppInstance.htm">instances</a> in it<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; CreateProgram(<b><a href="CppConst.htm">const</a></b> ProgramType type) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppStdVector.htm">std::vector</a> with all different Program <a href="CppInstance.htm">instances</a> in it<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> GetAllPrograms() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a console <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a desktop platform-independent <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a desktop windows-only <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a <a href="CppWebApplication.htm">web application</a> <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the console-only <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the <a href="CppWindows.htm">Windows</a>-only desktop <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the platform-independent desktop <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the <a href="CppWebApplication.htm">web application</a> <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item its <b><a href="CppEnum.htm">enum</a></b> name, e.g. '<a href="GameK3OpEenRij.htm">k3OpEenRij</a>'<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item its on-screen name, e.g. 'K3-Op-Een-Rij'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The program, e.g. '<a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a>Type::<a href="GameBoenken.htm">boenken</a>'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'Game'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item its URL (at http://ww.richelbilderbeek.nl), e.g. '<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>.htm'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the base of a filename<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameBase() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
<a href="CppComment.htm">///</a>ProgramClass is the <a href="CppBaseClass.htm">base class</a> <b><a href="CppFor.htm">for</a></b> all <b><a href="CppClass.htm">class</a></b> demonstration programs<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramClass : <b><a href="CppPublic.htm">public</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramClass() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> { <b><a href="CppReturn.htm">return</a></b> "<b><a href="CppClass.htm">class</a></b>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGame : <b><a href="CppPublic.htm">public</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramGame() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> { <b><a href="CppReturn.htm">return</a></b> "game"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramProject : <b><a href="CppPublic.htm">public</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramProject() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> { <b><a href="CppReturn.htm">return</a></b> "project"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="Tools.htm">Tool</a> : <b><a href="CppPublic.htm">public</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Program<a href="Tools.htm">Tool</a>() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">tool</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramAthleticLandVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameAthleticLand.htm">GameAthleticLand</a>_0_9.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Athletic Land (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameAthleticLand.htm">GameAthleticLand</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>_6_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>_5_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppAsciiArter.htm">AsciiArter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolAsciiArter.htm">asciiArter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppAsciiArter.htm">AsciiArter</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramBarbaImage : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>BarbaImage_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "BarbaImage"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolBarbaImage.htm">barbaImage</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>BarbaImage.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>5.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">BeerWanter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">BeerWanter</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectBochum.htm">Bochum</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectBochum.htm">Bochum</a>GaborFiltersResults.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project <a href="ProjectBochum.htm">Bochum</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectBochum.htm">bochum</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectBochum.htm">Bochum</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBoenken.htm">Boenken</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>_4_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">Boenken</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameBoenken.htm">boenken</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBoenken.htm">Boenken</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">Boenken</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameBoenkenVcl.htm">boenkenVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectBrainweaver.htm">Brainweaver</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectBrainweaver.htm">Brainweaver</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectBrainweaver.htm">brainweaver</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectBristol.htm">Bristol</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectBristol.htm">Bristol</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectBristol.htm">Bristol</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectBristol.htm">bristol</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectBristol.htm">Bristol</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCaesarCipher : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCaesarCipher.htm">ToolCaesarCipher</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "CaesarCipher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::caesarCipher; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCaesarCipher.htm">ToolCaesarCipher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectChrisWiley.htm">ChrisWiley</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectChrisWiley.htm">ChrisWiley</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project Chris Wiley"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectChrisWiley.htm">chrisWiley</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectChrisWiley.htm">ChrisWiley</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCodeBreaker : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "CodeBreaker"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::codeBreaker; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeBreaker.htm">ToolCodeBreaker</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolCodeToHtml.htm">CodeToHtml</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>_3_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">CodeToHtml</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolCodeToHtml.htm">codeToHtml</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppConnectThree.htm">ConnectThree</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>_5_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>_6_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppConnectThree.htm">ConnectThree</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameConnectThree.htm">connectThree</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCorridor : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameCorridor.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Corridor"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameCorridor.htm">corridor</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameCorridor.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolCreateGlossary.htm">CreateGlossary</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateGlossary.htm">ToolCreateGlossary</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateGlossary.htm">CreateGlossary</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolCreateGlossary.htm">createGlossary</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateGlossary.htm">ToolCreateGlossary</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCreate<a href="CppQt.htm">Qt</a>ProjectZipFile : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateQtProjectZipFile.htm">ToolCreateQtProjectZipFile</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Create<a href="CppQt.htm">Qt</a>ProjectZipFile"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateQtProjectZipFile.htm">ToolCreateQtProjectZipFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectCrossPoll.htm">CrossPoll</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectCrossPoll.htm">CrossPoll</a>3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectCrossPoll.htm">CrossPoll</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectCrossPoll.htm">crossPoll</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="ProjectCrossPoll.htm">CrossPoll</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameDasWahreSchlagerfest.htm">DasWahreSchlagerfest</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>_2_5.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>_2_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameDasWahreSchlagerfest.htm">DasWahreSchlagerfest</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolDotMatrix.htm">ToolDotMatrix</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Dot<a href="CppMatrix.htm">Matrix</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolDotMatrix.htm">dotMatrix</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolDotMatrix.htm">ToolDotMatrix</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolDotMatrix.htm">ToolDotMatrix</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Dot<a href="CppMatrix.htm">Matrix</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolDotMatrix.htm">ToolDotMatrix</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppEncranger.htm">Encranger</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>_2_5.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppEncranger.htm">Encranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppEncranger.htm">encranger</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramEverythingToPiecesShooter : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "EverythingToPiecesShooter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameEverythingToPiecesShooter.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolFilterOperationer.htm">FilterOperationer</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationer.htm">ToolFilterOperationer</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationer.htm">FilterOperationer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolFilterOperationer.htm">filterOperationer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationer.htm">ToolFilterOperationer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolFilterOperationerVcl.htm">FilterOperationerVcl</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationer.htm">ToolFilterOperationer</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationer.htm">FilterOperationer</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFilterOperationerVcl.htm">ToolFilterOperationerVcl</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramFryskLeareLieder : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FryskLeareLieder_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "FryskLeareLieder"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FryskLeareLieder.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppFunction.htm">Function</a>Plotter : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFunctionPlotter.htm">ToolFunctionPlotter</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppFunction.htm">Function</a>Plotter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolFunctionPlotter.htm">functionPlotter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFunctionPlotter.htm">ToolFunctionPlotter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppFunction.htm">Function</a>PlotterVcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFunctionPlotter.htm">ToolFunctionPlotter</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppFunction.htm">Function</a>Plotter (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolFunctionPlotter.htm">ToolFunctionPlotter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGaborFilter : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GaborFilter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolGaborFilter.htm">gaborFilter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGaborFilterVcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GaborFilter (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolGrayCoder.htm">GrayCoder</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">ToolGrayCoder</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">GrayCoder</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolGrayCoder.htm">grayCoder</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">ToolGrayCoder</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolGrayCoder.htm">GrayCoder</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">ToolGrayCoder</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">GrayCoder</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGrayCoder.htm">ToolGrayCoder</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGtst : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">ProjectGtst</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">GTST</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectGtst.htm">gtst</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">ProjectGtst</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationer.htm">ToolHistogramEqualizationer</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationer.htm">ToolHistogramEqualizationer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolHistogramEqualizationerVcl.htm">HistogramEqualizationerVcl</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationer.htm">ToolHistogramEqualizationer</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHistogramEqualizationerVcl.htm">ToolHistogramEqualizationerVcl</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">Hometrainer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>_1_8.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">Hometrainer</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ImageRotater</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolImageRotater.htm">imageRotater</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a>Clx : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>Clx_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ImageRotater</a> (CLX)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>Clx.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>Vcl_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ImageRotater</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolImageRotater.htm">ToolImageRotater</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameK3OpEenRij.htm">K3OpEenRij</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameK3OpEenRij.htm">GameK3OpEenRij</a>_6_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameK3OpEenRij.htm">GameK3OpEenRij</a>_5_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "K3 Op Een Rij"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameK3OpEenRij.htm">k3OpEenRij</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameK3OpEenRij.htm">GameK3OpEenRij</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameK3OpEenRij.htm">K3OpEenRij</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameK3OpEenRij.htm">GameK3OpEenRij</a>_4_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "K3 Op Een Rij (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameK3OpEenRij.htm">GameK3OpEenRij</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolKalmanFilterer.htm">KalmanFilterer</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">ToolKalmanFilterer</a>_1_15.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">ToolKalmanFilterer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKeySender : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>KeySender_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "KeySender"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolKeySender.htm">keySender</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>KeySender.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKnokfighterVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameKnokfighter.htm">GameKnokfighter</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Knokfighter (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameKnokfighter.htm">GameKnokfighter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKTouchLectureCreator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "KTouchLectureCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKTouchLectureCreator.htm">ToolKTouchLectureCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLambdaBot : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "LambdaBot"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolLambdaBot.htm">lambdaBot</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LambdaBot.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLearyCircumplex : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LearyCircumplex_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "LearyCircumplex"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolLearyCircumplex.htm">learyCircumplex</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LearyCircumplex.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLogisticGrowthSimulator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LogisticGrowthSimulator_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "LogisticGrowthSimulator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LogisticGrowthSimulator.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLoose : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Loose_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Loose"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolLoose.htm">loose</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Loose.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMartianCafeTuinemaTycoon : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameMartianCafeTuinemaTycoon_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MartianCafeTuinemaTycoon"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameMartianCafeTuinemaTycoon.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMazeCreator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MazeCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMazeCreator.htm">mazeCreator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMazeCreatorVcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MazeCreator (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMaziak : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Maziak"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMaziak.htm">maziak</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMaziakVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Maziak (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMaziakVcl.htm">maziakVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMetZnDrieen : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MetZnDrieen"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMetZnDrieen.htm">metZnDrieen</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMetZnDrieen.htm">GameMetZnDrieen</a>.htm"; }<br/>
};<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMetZnDrieenVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMetZnDrieen.htm">GameMetZnDrieen</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MetZnDrieen (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMetZnDrieen.htm">GameMetZnDrieen</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMidiLessonCreator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "MidiLessonCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>MidiLessonCreator.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMorpher : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Morpher_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Morpher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMorpher.htm">morpher</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Morpher.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMultiEncranger.htm">ToolMultiEncranger</a>_2_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Multi<a href="CppEncranger.htm">Encranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMultiEncranger.htm">multiEncranger</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMultiEncranger.htm">ToolMultiEncranger</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMultiEncranger.htm">ToolMultiEncranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Multi<a href="CppEncranger.htm">Encranger</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMultiEncranger.htm">ToolMultiEncranger</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMuscaDomestica : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectMuscaDomestica_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project Musca Domestica"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectMuscaDomestica.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppMusic.htm">Music</a>Theory : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMusicTheory.htm">ToolMusicTheory</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppMusic.htm">Music</a>Theory"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolMusicTheory.htm">busicTheory</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMusicTheory.htm">ToolMusicTheory</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppNdsmake.htm">Ndsmake</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppNdsmake.htm">Ndsmake</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolNdsmake.htm">ndsmake</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppNdsmake.htm">Ndsmake</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPaperRockScissorsVcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>PaperRockScissors_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "PaperRockScissors (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>PaperRockScissorsVcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolPause.htm">Pause</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPause.htm">Pause</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPause.htm">pause</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPause.htm">ToolPause</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPerfectElasticCollision : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPerfectElasticCollision.htm">ToolPerfectElasticCollision</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "PerfectElasticCollision"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPerfectElasticCollision.htm">ToolPerfectElasticCollision</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolPicToCode.htm">PicToCode</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">PicToCode</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPicToCode.htm">picToCode</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPixelator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Pixelator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPixelator.htm">pixelator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPixelator.htm">ToolPixelator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPixelatorVcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPixelator.htm">ToolPixelator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Pixelator (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPixelator.htm">pixelator</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPixelator.htm">ToolPixelator</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPokeVolleyVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePokeVolley.htm">GamePokeVolley</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "PokeVolley (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GamePokeVolley.htm">pokeVolley</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePokeVolley.htm">GamePokeVolley</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolPreDickAdvocaTor.htm">PreDickAdvocaTor</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPreDickAdvocaTor.htm">ToolPreDickAdvocaTor</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPreDickAdvocaTor.htm">PreDickAdvocaTor</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPreDickAdvocaTor.htm">ToolPreDickAdvocaTor</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppPrimeExpert.htm">PrimeExpert</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPrimeExpert.htm">ToolPrimeExpert</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Test<a href="CppPrimeExpert.htm">PrimeExpert</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppPrimeExpert.htm">PrimeExpert</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolPrimeExpert.htm">primeExpert</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPrimeExpert.htm">ToolPrimeExpert</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>_1_14.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::projectRichelBilderbeek; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppPylos.htm">Pylos</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePylos.htm">GamePylos</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppPylos.htm">Pylos</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppPylos.htm">pylos</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePylos.htm">GamePylos</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolQmakeWatcher.htm">QmakeWatcher</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQmakeWatcher.htm">ToolQmakeWatcher</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQmakeWatcher.htm">QmakeWatcher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQmakeWatcher.htm">ToolQmakeWatcher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramQuadraticSolver : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQuadraticSolver.htm">ToolQuadraticSolver</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQuadraticSolver.htm">ToolQuadraticSolver</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "QuadraticSolver"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolQuadraticSolver.htm">quadraticSolver</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolQuadraticSolver.htm">ToolQuadraticSolver</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRampalEtienne : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectRampalEtienne"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectRampalEtienne.htm">rampalEtienne</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectRampalEtienne.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRandomCode.htm">RandomCode</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_4_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_3_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppRandomCode.htm">RandomCode</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolRandomCode.htm">randomCode</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRandomCode.htm">RandomCode</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppRandomCode.htm">RandomCode</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRasper : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRasper.htm">ToolRasper</a>_0_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Rasper"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::rasper; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRasper.htm">ToolRasper</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRefrigeratorPuzzleSolver : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>RefrigeratorPuzzleSolver_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "RefrigeratorPuzzleSolver"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>RefrigeratorPuzzleSolver.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolRegexTester.htm">RegexTester</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRegexTester.htm">ToolRegexTester</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRegexTester.htm">RegexTester</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolRegexTester.htm">regexTester</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRegexTester.htm">ToolRegexTester</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramReversi : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameReversi.htm">GameReversi</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Reversi"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameReversi.htm">reversi</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameReversi.htm">GameReversi</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramReversiVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameReversi.htm">GameReversi</a>Vcl_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Reversi VCL"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameReversi.htm">reversi</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameReversi.htm">GameReversi</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRichelBilderbeekGallery : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelBilderbeekGallery.htm">ToolRichelBilderbeekGallery</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "RichelBilderbeekGallery"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::richelBilderbeekGallery; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelBilderbeekGallery.htm">ToolRichelBilderbeekGallery</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRichelBilderbeekNlSitemapGenerator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "RichelBilderbeekNlSitemapGenerator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::richelbilderbeekNlSitemapGenerator; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelbilderbeekNlSitemapGenerator.htm">ToolRichelbilderbeekNlSitemapGenerator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>_2_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Rubik's Clock"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameRubiksClock.htm">rubiksClock</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Rubik's Clock (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSearchAndDestroy<a href="CppChess.htm">Chess</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Search And Destroy <a href="CppChess.htm">Chess</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSearchAndDestroyChess.htm">GameSearchAndDestroyChess</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSearchAndDestroy<a href="CppChess.htm">Chess</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSearchAndDestroyChess.htm">GameSearchAndDestroyChess</a>Console_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSearchAndDestroyChess.htm">GameSearchAndDestroyChess</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Search And Destroy <a href="CppChess.htm">Chess</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSearchAndDestroyChess.htm">GameSearchAndDestroyChess</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">ToolSecretMessage</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">SecretMessage</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSecretMessage.htm">secretMessage</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">ToolSecretMessage</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a>Vcl : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">ToolSecretMessage</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">SecretMessage</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">ToolSecretMessage</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimBrainiac : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimBrainiac_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimBrainiac"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimBrainiac.htm">simBrainiac</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimBrainiac.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimImmuneResponse : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimImmuneResponse_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimImmuneResponse"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimImmuneResponse.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSim<a href="CppMysteryMachine.htm">MysteryMachine</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>_1_1_web.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Sim<a href="CppMysteryMachine.htm">MysteryMachine</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimplify<a href="CppNewick.htm">Newick</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimplifyNewick.htm">ToolSimplifyNewick</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Simplify<a href="CppNewick.htm">Newick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimplifyNewick.htm">simplifyNewick</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimplifyNewick.htm">ToolSimplifyNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimPredatorVcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSimPredator.htm">GameSimPredator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimPredator (VCL)"; }<br/>
<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimPredator.htm">simPredator</a>Vcl; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSimPredator.htm">GameSimPredator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSimStagecraft.htm">SimStagecraft</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSimStagecraft.htm">SimStagecraft</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimStagecraft.htm">SimStagecraft</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSimStagecraft.htm">simStagecraft</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSimStagecraft.htm">SimStagecraft</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSoaSim.htm">SoaSim</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSoaSim.htm">SoaSim</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSoaSim.htm">SoaSim</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSoaSim.htm">soaSim</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSoaSim.htm">SoaSim</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSolvePuzzleX.htm">SolvePuzzleX</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSolvePuzzleX.htm">SolvePuzzleX</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSolvePuzzleX.htm">SolvePuzzleX</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameSpaceHarry.htm">SpaceHarry</a>Vcl : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSpaceHarry.htm">GameSpaceHarry</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Space Harry (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameSpaceHarry.htm">GameSpaceHarry</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramStair<b><a href="CppCase.htm">case</a></b>CardCreator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Stair<b><a href="CppCase.htm">case</a></b>CardCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> ; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStaircaseCardCreator.htm">ToolStaircaseCardCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppStateObserver.htm">StateObserver</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStateObserver.htm">ToolStateObserver</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppStateObserver.htm">StateObserver</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolStateObserver.htm">stateObserver</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolStyleSheetSetter.htm">StyleSheetSetter</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStyleSheetSetter.htm">StyleSheetSetter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStyleSheetSetter.htm">ToolStyleSheetSetter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSurfacePlotter.htm">SurfacePlotter</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">ToolSurfacePlotter</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">SurfacePlotter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSurfacePlotter.htm">surfacePlotter</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">ToolSurfacePlotter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSurfacePlotterVcl.htm">SurfacePlotterVcl</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">ToolSurfacePlotter</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">SurfacePlotter</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSurfacePlotter.htm">ToolSurfacePlotter</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameTankBattalion.htm">TankBattalion</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTankBattalion.htm">TankBattalion</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameTankBattalion.htm">tankBattalion</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTankBattalion.htm">GameTankBattalion</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestAbout : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestAbout.htm">ToolTestAbout</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestAbout"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestAbout.htm">testAbout</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestAbout.htm">ToolTestAbout</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTest<a href="CppApproximator.htm">Approximator</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestApproximator.htm">ToolTestApproximator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Test<a href="CppApproximator.htm">Approximator</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestApproximator.htm">testApproximator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestApproximator.htm">ToolTestApproximator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBinaryNewickVector.htm">ToolTestBinaryNewickVector</a>_1_5.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBinaryNewickVector.htm">ToolTestBinaryNewickVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBouncingBallsWidget.htm">TestBouncingBallsWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBouncingBallsWidget.htm">TestBouncingBallsWidget</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBouncingBallsWidget.htm">TestBouncingBallsWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBouncingBallsWidget.htm">TestBouncingBallsWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBouncingRectsWidget.htm">TestBouncingRectsWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBouncingRectsWidget.htm">TestBouncingRectsWidget</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBouncingRectsWidget.htm">TestBouncingRectsWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBouncingRectsWidget.htm">TestBouncingRectsWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">ToolTestBroadcastServer</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">ToolTestBroadcastServer</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestChess.htm">TestChess</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>20120209.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>20120207.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">TestChess</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestChess.htm">testChess</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestConceptMap.htm">TestConceptMap</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestConceptMap.htm">TestConceptMap</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestConceptMap.htm">testConceptMap</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestConceptMap.htm">ToolTestConceptMap</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestDial.htm">TestDial</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>_2_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">TestDial</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestDial.htm">testDial</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestDraw<a href="CppCanvas.htm">Canvas</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDrawCanvas.htm">ToolTestDrawCanvas</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestDraw<a href="CppCanvas.htm">Canvas</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testDraw<a href="CppCanvas.htm">Canvas</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDrawCanvas.htm">ToolTestDrawCanvas</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestEntrance.htm">TestEntrance</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">ToolTestEntrance</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">TestEntrance</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestEntrance.htm">testEntrance</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">ToolTestEntrance</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestExercise.htm">TestExercise</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">ToolTestExercise</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">TestExercise</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestExercise.htm">testExercise</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">ToolTestExercise</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestFunctionParser.htm">TestFunctionParser</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">TestFunctionParser</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestFunctionParser.htm">testFunctionParser</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestGnuplotInterface.htm">TestGnuplotInterface</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGnuplotInterface.htm">TestGnuplotInterface</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestGnuplotInterface.htm">TestGnuplotInterface</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestGraphicsProxyWidget.htm">TestGraphicsProxyWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestGraphicsProxyWidget.htm">TestGraphicsProxyWidget</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGraphicsProxyWidget.htm">TestGraphicsProxyWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestGraphicsProxyWidget.htm">TestGraphicsProxyWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestGravityWidget.htm">TestGravityWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestGravityWidget.htm">TestGravityWidget</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGravityWidget.htm">TestGravityWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestGravityWidget.htm">testGravityWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestGravityWidget.htm">TestGravityWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestGroupWidget.htm">TestGroupWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">ToolTestGroupWidget</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">TestGroupWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestGroupWidget.htm">testGroupWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">ToolTestGroupWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestHugeVector.htm">TestHugeVector</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestHugeVector.htm">TestHugeVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestHugeVector.htm">testHugeVector</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestHugeVector.htm">TestHugeVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestImage<a href="CppCanvas.htm">Canvas</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestImageCanvas.htm">ToolTestImageCanvas</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestImage<a href="CppCanvas.htm">Canvas</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testImage<a href="CppCanvas.htm">Canvas</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestImageCanvas.htm">ToolTestImageCanvas</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestLazy_init.htm">TestLazy_init</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLazy_init.htm">TestLazy_init</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestLazy_init.htm">testLazy_init</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestLazy_init.htm">TestLazy_init</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestLed.htm">TestLed</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">TestLed</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestLed.htm">testLed</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestManyDigitNewick.htm">ToolTestManyDigitNewick</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestManyDigitNewick.htm">ToolTestManyDigitNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestMultiApproximator.htm">TestMultiApproximator</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiApproximator.htm">ToolTestMultiApproximator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiApproximator.htm">TestMultiApproximator</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiApproximator.htm">ToolTestMultiApproximator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestMulti<a href="CppCanvas.htm">Canvas</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiCanvas.htm">ToolTestMultiCanvas</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestMulti<a href="CppCanvas.htm">Canvas</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testMulti<a href="CppCanvas.htm">Canvas</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiCanvas.htm">ToolTestMultiCanvas</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestMultipleChoiceQuestion.htm">TestMultipleChoiceQuestion</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultipleChoiceQuestion.htm">ToolTestMultipleChoiceQuestion</a>Dialog_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultipleChoiceQuestion.htm">TestMultipleChoiceQuestion</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultipleChoiceQuestion.htm">ToolTestMultipleChoiceQuestion</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestMultiVector.htm">TestMultiVector</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiVector.htm">TestMultiVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestMultiVector.htm">testMultiVector</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiVector.htm">ToolTestMultiVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestPlane : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPlane.htm">ToolTestPlane</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestPlane"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testPlane; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPlane.htm">ToolTestPlane</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestNdsmake.htm">TestNdsmake</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestNdsmake.htm">TestNdsmake</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNdsmake.htm">TestNdsmake</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestNdsmake.htm">testNdsmake</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestNdsmake.htm">TestNdsmake</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestNeuralNet.htm">TestNeuralNet</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">ToolTestNeuralNet</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">TestNeuralNet</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestNeuralNet.htm">testNeuralNet</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">ToolTestNeuralNet</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestNewick.htm">TestNewick</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNewick.htm">TestNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestNewick.htm">testNewick</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestNewick.htm">TestNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestNewickVector.htm">TestNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNewickVector.htm">ToolTestNewickVector</a>_3_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNewickVector.htm">TestNewickVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestNewickVector.htm">testNewickVector</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNewickVector.htm">ToolTestNewickVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestOpenQuestion.htm">TestOpenQuestion</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestOpenQuestion.htm">ToolTestOpenQuestion</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestOpenQuestion.htm">TestOpenQuestion</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestOpenQuestion.htm">ToolTestOpenQuestion</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestPolyFile : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestPolyFile"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testPolyFile; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPolyFile.htm">ToolTestPolyFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestPolyFileFromPolygons : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestPolyFileFromPolygons"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testPolyFileFromPolygons; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPolyFileFromPolygons.htm">ToolTestPolyFileFromPolygons</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestPylos.htm">TestPylos</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">ToolTestPylos</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">TestPylos</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestPylos.htm">testPylos</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQrcFile.htm">TestQrcFile</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQrcFile.htm">ToolTestQrcFile</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQrcFile.htm">TestQrcFile</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQrcFile.htm">testQrcFile</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQrcFile.htm">ToolTestQrcFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtCreatorProFile.htm">ToolTestQtCreatorProFile</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtCreatorProFile.htm">ToolTestQtCreatorProFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtHideAndShowDialog.htm">TestQtHideAndShowDialog</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtHideAndShowDialog.htm">ToolTestQtHideAndShowDialog</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtHideAndShowDialog.htm">TestQtHideAndShowDialog</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtHideAndShowDialog.htm">ToolTestQtHideAndShowDialog</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">TestQtKeyboardFriendlyGraphicsView</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestKeyboardFriendlyGraphicsView.htm">TestKeyboardFriendlyGraphicsView</a>_0_4.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">TestQtKeyboardFriendlyGraphicsView</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">ToolTestQtKeyboardFriendlyGraphicsView</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtModels.htm">TestQtModels</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtModels.htm">ToolTestQtModels</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtModels.htm">TestQtModels</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtModels.htm">testQtModels</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtRoundedRectItem.htm">TestQtRoundedRectItem</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedRectItem.htm">ToolTestQtRoundedRectItem</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedRectItem.htm">TestQtRoundedRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedRectItem.htm">ToolTestQtRoundedRectItem</a>.htm"; }<br/>
};<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQtRoundedTextRectItem.htm">testQtRoundedTextRectItem</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>.htm"; }<br/>
};<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQuestion.htm">TestQuestion</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">ToolTestQuestion</a>_3_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">TestQuestion</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestQuestion.htm">testQuestion</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">ToolTestQuestion</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestReversi.htm">TestReversi</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestReversi.htm">ToolTestReversi</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestReversi.htm">TestReversi</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestReversi.htm">testReversi</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestReversi.htm">ToolTestReversi</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestSelectFileDialog.htm">TestSelectFileDialog</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSelectFileDialog.htm">ToolTestSelectFileDialog</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSelectFileDialog.htm">TestSelectFileDialog</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSelectFileDialog.htm">ToolTestSelectFileDialog</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestServerPusher.htm">TestServerPusher</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestServerPusher.htm">TestServerPusher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestServerPusher.htm">testServerPusher</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestServerPusher.htm">ToolTestServerPusher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestShape.htm">TestShape</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>_1_0_web.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">TestShape</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestShape.htm">testShape</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestShinyButton.htm">TestShinyButton</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>_2_0_web.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">TestShinyButton</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestShinyButton.htm">testShinyButton</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestSimpleLinearRegression.htm">TestSimpleLinearRegression</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSimpleLinearRegression.htm">ToolTestSimpleLinearRegression</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSimpleLinearRegression.htm">TestSimpleLinearRegression</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSimpleLinearRegression.htm">ToolTestSimpleLinearRegression</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestStopwatch.htm">TestStopwatch</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestStopwatch.htm">TestStopwatch</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestStopwatch.htm">testStopwatch</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestStopwatch.htm">ToolTestStopwatch</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestText<a href="CppCanvas.htm">Canvas</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTextCanvas.htm">ToolTestTextCanvas</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestText<a href="CppCanvas.htm">Canvas</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testText<a href="CppCanvas.htm">Canvas</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTextCanvas.htm">ToolTestTextCanvas</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTextPositionWidget.htm">TestTextPositionWidget</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestTextPositionWidget.htm">TestTextPositionWidget</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTextPositionWidget.htm">TestTextPositionWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestTextPositionWidget.htm">TestTextPositionWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTicTacToe.htm">TestTicTacToe</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">TestTicTacToe</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestTicTacToe.htm">testTicTacToe</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTimedServerPusher.htm">ToolTestTimedServerPusher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestToggleButton.htm">TestToggleButton</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestToggleButton.htm">ToolTestToggleButton</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestToggleButton.htm">TestToggleButton</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestToggleButton.htm">testToggleButton</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestToggleButton.htm">ToolTestToggleButton</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestTriangle : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTriangle.htm">ToolTestTriangle</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestTriangle"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testTriangle; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTriangle.htm">ToolTestTriangle</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">ToolTestTwoDigitNewick</a>_2_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">ToolTestTwoDigitNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramThorVeen : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectThorVeen_0_9.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project ThorVeen"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ProjectThorVeen.htm">thorVeen</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectThorVeen.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFilterer.htm">ToolThresholdFilterer</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFilterer.htm">ToolThresholdFilterer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolThresholdFiltererVcl.htm">ThresholdFiltererVcl</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFilterer.htm">ToolThresholdFilterer</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolThresholdFiltererVcl.htm">ToolThresholdFiltererVcl</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppTicTacToe.htm">TicTacToe</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>_1_6.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>_1_5.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppTicTacToe.htm">TicTacToe</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameTicTacToe.htm">ticTacToe</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTimePoll.htm">TimePoll</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">ToolTimePoll</a>_4_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">TimePoll</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolTimePoll.htm">timePoll</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">ToolTimePoll</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTriangleMeshCreator : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTriangleMeshCreator.htm">ToolTriangleMeshCreator</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "TriangleMeshCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::triangleMeshCreator; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTriangleMeshCreator.htm">ToolTriangleMeshCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameTronCollection.htm">TronCollection</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTronCollection.htm">TronCollection</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameTronCollection.htm">tronCollection</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTronCollection.htm">GameTronCollection</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameTronCollectionVcl.htm">TronCollectionVcl</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTronCollection.htm">TronCollection</a> (VCL)"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTronCollection.htm">GameTronCollection</a>Vcl.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolUbuntuOneWatcher.htm">UbuntuOneWatcher</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolUbuntuOneWatcher.htm">UbuntuOneWatcher</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolUbuntuOneWatcher.htm">UbuntuOneWatcher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolUbuntuOneWatcher.htm">UbuntuOneWatcher</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramValentineCardDecrypter : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolValentineCardDecrypter.htm">ToolValentineCardDecrypter</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "ValentineCardDecrypter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::valentineCardDecrypter; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolValentineCardDecrypter.htm">ToolValentineCardDecrypter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramVigenereCipher : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVigenereCipher.htm">ToolVigenereCipher</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "VigenereCipher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::vigenereCipher; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVigenereCipher.htm">ToolVigenereCipher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolVirtualBastard.htm">VirtualBastard</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVirtualBastard.htm">VirtualBastard</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolVirtualBastard.htm">virtualBastard</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolVirtualBastard.htm">VirtualBastard</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolVisualAbc.htm">VisualAbc</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVisualAbc.htm">ToolVisualAbc</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVisualAbc.htm">VisualAbc</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolVisualAbc.htm">visualAbc</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolVisualAbc.htm">ToolVisualAbc</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramWktToSvg : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolWktToSvg.htm">ToolWktToSvg</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "WktToSvg"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::wktToSvg; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolWktToSvg.htm">ToolWktToSvg</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameXeNonZero.htm">XeNonZero</a> : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameXeNonZero.htm">GameXeNonZero</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameXeNonZero.htm">XeNonZero</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameXeNonZero.htm">xeNonZero</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameXeNonZero.htm">GameXeNonZero</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramZork : <b><a href="CppPublic.htm">public</a></b> ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameZork.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Zork"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameZork.htm">zork</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameZork.htm"; }<br/>
};<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppNewickVector.htm">NewickVector</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppNewickVector.htm">NewickVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppNewick.htm">newick</a>Vector; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="CppNewickVector.htm">NewickVector</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::twoDigit<a href="CppNewick.htm">Newick</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCreateSitemap : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "CreateSitemap"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::createSitemap; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>CreateSitemap.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppEncranger.htm">Encranger</a> : <b><a href="CppPublic.htm">public</a></b> Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppEncranger.htm">Encranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppEncranger.htm">encranger</a>; }<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b> <b><a href="CppFinal.htm">final</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolEncranger.htm">ToolEncranger</a>.htm"; }<br/>
};<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> Program&amp; p) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorLess.htm">operator&lt;</a></b>(<b><a href="CppConst.htm">const</a></b> Program&amp; lhs, <b><a href="CppConst.htm">const</a></b> Program&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RIBI_RICHELBILDERBEEKPROGRAM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogram.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogram.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::Program, <b><a href="CppClass.htm">class</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Program.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>types.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::Program::CreateProgram(<b><a href="CppConst.htm">const</a></b> ProgramType type) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; p;<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolAsciiArter.htm">asciiArter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolBarbaImage.htm">barbaImage</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramBarbaImage); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramAthleticLandVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectBochum.htm">bochum</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectBochum.htm">Bochum</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameBoenken.htm">boenken</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBoenken.htm">Boenken</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameBoenkenVcl.htm">boenkenVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBoenken.htm">Boenken</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectBrainweaver.htm">brainweaver</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectBrainweaver.htm">Brainweaver</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectBristol.htm">bristol</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectBristol.htm">Bristol</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::caesarCipher: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCaesarCipher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectChrisWiley.htm">chrisWiley</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectChrisWiley.htm">ChrisWiley</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::codeBreaker: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCodeBreaker); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolCodeToHtml.htm">codeToHtml</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolCodeToHtml.htm">CodeToHtml</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameConnectThree.htm">connectThree</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppConnectThree.htm">ConnectThree</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameCorridor.htm">corridor</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCorridor); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolCreateGlossary.htm">createGlossary</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolCreateGlossary.htm">CreateGlossary</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCreate<a href="CppQt.htm">Qt</a>ProjectZipFile); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectCrossPoll.htm">crossPoll</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectCrossPoll.htm">CrossPoll</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameDasWahreSchlagerfest.htm">DasWahreSchlagerfest</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameDasWahreSchlagerfest.htm">DasWahreSchlagerfest</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolDotMatrix.htm">dotMatrix</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppEncranger.htm">encranger</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppEncranger.htm">Encranger</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramEverythingToPiecesShooter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolFilterOperationer.htm">filterOperationer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolFilterOperationer.htm">FilterOperationer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolFilterOperationerVcl.htm">FilterOperationerVcl</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramFryskLeareLieder); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolFunctionPlotter.htm">functionPlotter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppFunction.htm">Function</a>Plotter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppFunction.htm">Function</a>PlotterVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolGaborFilter.htm">gaborFilter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGaborFilter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGaborFilterVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolGrayCoder.htm">grayCoder</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolGrayCoder.htm">GrayCoder</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolGrayCoder.htm">GrayCoder</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectGtst.htm">gtst</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGtst); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolHistogramEqualizationerVcl.htm">HistogramEqualizationerVcl</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolImageRotater.htm">imageRotater</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a>Clx); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolImageRotater.htm">ImageRotater</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameK3OpEenRij.htm">k3OpEenRij</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameK3OpEenRij.htm">K3OpEenRij</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameK3OpEenRij.htm">K3OpEenRij</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolKeySender.htm">keySender</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKeySender); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKnokfighterVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKTouchLectureCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolLambdaBot.htm">lambdaBot</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLambdaBot); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolLearyCircumplex.htm">learyCircumplex</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLearyCircumplex); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLogisticGrowthSimulator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolLoose.htm">loose</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLoose); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMartianCafeTuinemaTycoon); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMazeCreator.htm">mazeCreator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMazeCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMazeCreatorVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameMaziak.htm">maziak</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMaziak); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameMaziakVcl.htm">maziakVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMaziakVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMetZnDrieenVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMidiLessonCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMorpher.htm">morpher</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMorpher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMultiEncranger.htm">multiEncranger</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMuscaDomestica); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolMusicTheory.htm">busicTheory</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppMusic.htm">Music</a>Theory); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolNdsmake.htm">ndsmake</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppNdsmake.htm">Ndsmake</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPaperRockScissorsVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPause.htm">pause</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolPause.htm">Pause</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPerfectElasticCollision); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPicToCode.htm">picToCode</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolPicToCode.htm">PicToCode</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPixelator.htm">pixelator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPixelator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPixelator.htm">pixelator</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPixelatorVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GamePokeVolley.htm">pokeVolley</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPokeVolleyVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolPreDickAdvocaTor.htm">PreDickAdvocaTor</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolPrimeExpert.htm">primeExpert</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppPrimeExpert.htm">PrimeExpert</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::projectRichelBilderbeek: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppPylos.htm">pylos</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppPylos.htm">Pylos</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolQmakeWatcher.htm">QmakeWatcher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolQuadraticSolver.htm">quadraticSolver</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramQuadraticSolver); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectRampalEtienne.htm">rampalEtienne</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRampalEtienne); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolRandomCode.htm">randomCode</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRandomCode.htm">RandomCode</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRandomCode.htm">RandomCode</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::rasper: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRasper); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRefrigeratorPuzzleSolver); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolRegexTester.htm">regexTester</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolRegexTester.htm">RegexTester</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameReversi.htm">reversi</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramReversi); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameReversi.htm">reversi</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramReversiVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::richelBilderbeekGallery: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRichelBilderbeekGallery); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::richelbilderbeekNlSitemapGenerator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRichelBilderbeekNlSitemapGenerator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameRubiksClock.htm">rubiksClock</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSearchAndDestroy<a href="CppChess.htm">Chess</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSearchAndDestroy<a href="CppChess.htm">Chess</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSecretMessage.htm">secretMessage</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimBrainiac.htm">simBrainiac</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimBrainiac); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimImmuneResponse); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSim<a href="CppMysteryMachine.htm">MysteryMachine</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimplifyNewick.htm">simplifyNewick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimplify<a href="CppNewick.htm">Newick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimPredator.htm">simPredator</a>Vcl: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimPredatorVcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSimStagecraft.htm">simStagecraft</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSimStagecraft.htm">SimStagecraft</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSoaSim.htm">soaSim</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSoaSim.htm">SoaSim</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSolvePuzzleX.htm">SolvePuzzleX</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameSpaceHarry.htm">SpaceHarry</a>Vcl); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> : p.reset(<b><a href="CppNew.htm">new</a></b> ProgramStair<b><a href="CppCase.htm">case</a></b>CardCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolStateObserver.htm">stateObserver</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppStateObserver.htm">StateObserver</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolStyleSheetSetter.htm">StyleSheetSetter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSurfacePlotter.htm">surfacePlotter</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSurfacePlotter.htm">SurfacePlotter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSurfacePlotterVcl.htm">SurfacePlotterVcl</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameTankBattalion.htm">tankBattalion</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameTankBattalion.htm">TankBattalion</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestAbout.htm">testAbout</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestAbout); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestApproximator.htm">testApproximator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTest<a href="CppApproximator.htm">Approximator</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBouncingBallsWidget.htm">TestBouncingBallsWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBouncingRectsWidget.htm">TestBouncingRectsWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestChess.htm">testChess</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestChess.htm">TestChess</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestConceptMap.htm">testConceptMap</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestConceptMap.htm">TestConceptMap</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestDial.htm">testDial</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestDial.htm">TestDial</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testDraw<a href="CppCanvas.htm">Canvas</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestDraw<a href="CppCanvas.htm">Canvas</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestEntrance.htm">testEntrance</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestEntrance.htm">TestEntrance</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestExercise.htm">testExercise</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestExercise.htm">TestExercise</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestFunctionParser.htm">testFunctionParser</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestFunctionParser.htm">TestFunctionParser</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestGnuplotInterface.htm">TestGnuplotInterface</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestGraphicsProxyWidget.htm">TestGraphicsProxyWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestGravityWidget.htm">testGravityWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestGravityWidget.htm">TestGravityWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestGroupWidget.htm">testGroupWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestGroupWidget.htm">TestGroupWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestHugeVector.htm">testHugeVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestHugeVector.htm">TestHugeVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testImage<a href="CppCanvas.htm">Canvas</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestImage<a href="CppCanvas.htm">Canvas</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestLazy_init.htm">testLazy_init</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestLazy_init.htm">TestLazy_init</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestLed.htm">testLed</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestLed.htm">TestLed</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestMultiApproximator.htm">TestMultiApproximator</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testMulti<a href="CppCanvas.htm">Canvas</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestMulti<a href="CppCanvas.htm">Canvas</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestMultipleChoiceQuestion.htm">TestMultipleChoiceQuestion</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestMultiVector.htm">testMultiVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestMultiVector.htm">TestMultiVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestNdsmake.htm">testNdsmake</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestNdsmake.htm">TestNdsmake</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestNeuralNet.htm">testNeuralNet</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestNeuralNet.htm">TestNeuralNet</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestNewick.htm">testNewick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestNewick.htm">TestNewick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestNewickVector.htm">testNewickVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestNewickVector.htm">TestNewickVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestOpenQuestion.htm">TestOpenQuestion</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testPlane: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestPlane); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testPolyFile: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestPolyFile); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testPolyFileFromPolygons: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestPolyFileFromPolygons); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestPylos.htm">testPylos</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestPylos.htm">TestPylos</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQrcFile.htm">testQrcFile</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQrcFile.htm">TestQrcFile</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtHideAndShowDialog.htm">TestQtHideAndShowDialog</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">TestQtKeyboardFriendlyGraphicsView</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtOcrWidget.htm">TestQtOcrWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtModels.htm">testQtModels</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtModels.htm">TestQtModels</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtRoundedRectItem.htm">TestQtRoundedRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQtRoundedTextRectItem.htm">testQtRoundedTextRectItem</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestQuestion.htm">testQuestion</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQuestion.htm">TestQuestion</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestReversi.htm">testReversi</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestReversi.htm">TestReversi</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestSelectFileDialog.htm">TestSelectFileDialog</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestServerPusher.htm">testServerPusher</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestServerPusher.htm">TestServerPusher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestShape.htm">testShape</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestShape.htm">TestShape</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestShinyButton.htm">testShinyButton</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestShinyButton.htm">TestShinyButton</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestSimpleLinearRegression.htm">TestSimpleLinearRegression</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestStopwatch.htm">testStopwatch</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestStopwatch.htm">TestStopwatch</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testText<a href="CppCanvas.htm">Canvas</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestText<a href="CppCanvas.htm">Canvas</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTextPositionWidget.htm">TestTextPositionWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestTicTacToe.htm">testTicTacToe</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTicTacToe.htm">TestTicTacToe</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestToggleButton.htm">testToggleButton</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestToggleButton.htm">TestToggleButton</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testTriangle: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestTriangle); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::triangleMeshCreator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTriangleMeshCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ProjectThorVeen.htm">thorVeen</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramThorVeen); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolThresholdFiltererVcl.htm">ThresholdFiltererVcl</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameTicTacToe.htm">ticTacToe</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppTicTacToe.htm">TicTacToe</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolTimePoll.htm">timePoll</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTimePoll.htm">TimePoll</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameTronCollection.htm">tronCollection</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameTronCollection.htm">TronCollection</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameTronCollectionVcl.htm">TronCollectionVcl</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolUbuntuOneWatcher.htm">UbuntuOneWatcher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::valentineCardDecrypter: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramValentineCardDecrypter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::vigenereCipher: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramVigenereCipher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolVirtualBastard.htm">virtualBastard</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolVirtualBastard.htm">VirtualBastard</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolVisualAbc.htm">visualAbc</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolVisualAbc.htm">VisualAbc</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::wktToSvg: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramWktToSvg); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameXeNonZero.htm">xeNonZero</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameXeNonZero.htm">XeNonZero</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameZork.htm">zork</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramZork); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::n_types:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Unimplemented RichelBilderbeek::ProgramType");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("Unimplemented RichelBilderbeek::ProgramType");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!p)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(ProgramTypes::ProgramTypeToEnumName(type));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (p-&gt;GetType() <a href="CppOperatorNotEqual.htm">!=</a> type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("ERROR");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(p-&gt;GetName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(ProgramTypes::ProgramTypeToEnumName(type));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(ProgramTypes::ProgramTypeToEnumName(p-&gt;GetType()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p-&gt;GetType() <a href="CppOperatorEqual.htm">==</a> type<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "type and Program::GetType must match");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::Program::GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::ProgramTypes::ProgramTypeToEnumName(<b><a href="CppThis.htm">this</a></b>-&gt;GetType());<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::Program::GetScreenName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppRibi.htm">ribi</a>::ProgramTypes::ProgramTypeToScreenName(<b><a href="CppThis.htm">this</a></b>-&gt;GetType());<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::Program<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> <a href="CppRibi.htm">ribi</a>::Program::GetAllPrograms() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;ProgramType&gt; types <a href="CppOperatorAssign.htm">=</a> ProgramTypes::GetAll();<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program<a href="CppOperatorStreamIn.htm">&gt;&gt;</a> v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> ProgramType type: types)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; p <a href="CppOperatorAssign.htm">=</a> CreateProgram(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p-&gt;GetType() <a href="CppOperatorEqual.htm">==</a> type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> types.size());<br/>
&nbsp;&nbsp;<a href="CppStdSort.htm">std::sort</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt;&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt;&amp; rhs) { <b><a href="CppReturn.htm">return</a></b> lhs-&gt;GetName() &lt; rhs-&gt;GetName(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::Program::GetFilenameBase() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetTypeName();<br/>
&nbsp;&nbsp;s[0] <a href="CppOperatorAssign.htm">=</a> <a href="CppStdToupper.htm">std::toupper</a>(s[0]);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s <a href="CppOperatorPlus.htm">+</a> GetScreenName();<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::Program::GetTypeName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ProgramTypes::ProgramTypeToEnumName(<b><a href="CppThis.htm">this</a></b>-&gt;GetType());<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::Program::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::Program::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-02-19: <a href="CppVersion.htm">Version</a> 1.0: initial <a href="CppVersion.htm">version</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> Program&amp; p) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> p.GetName();<br/>
<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> name;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (name.size() &lt; 10) { os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t'; }<br/>
<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p.GetTypeName()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p.GetStatusConsole())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p.GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p.GetStatusDesktop())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p.GetStatusWeb<a href="CppApplication.htm">Application</a>());<br/>
&nbsp;&nbsp; <b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorLess.htm">operator&lt;</a></b>(<b><a href="CppConst.htm">const</a></b> Program&amp; lhs, <b><a href="CppConst.htm">const</a></b> Program&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs.GetTypeName() &lt; rhs.GetTypeName()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs.GetTypeName() &gt; rhs.GetTypeName()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.GetName() &lt; rhs.GetName();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramstatus.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramstatus.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramStatus, status of a program by Richel Bilderbeek<br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>ProgramStatus.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RIBI_RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
<a href="CppDefine.htm">#define</a> RIBI_RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Status: yes, no, never, not applicable, work in progress, to be done and unknown<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> ProgramStatus { yes, no, nvr, n_a, wip, tbd, unk };<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramStatus<a href="CppVersion.htm">Version</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
<a href="CppStdString.htm">std::string</a> ProgramStatusToStr(<b><a href="CppConst.htm">const</a></b> ProgramStatus c);<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> ProgramStatus c);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RIBI_RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramstatus.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramstatus.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramStatus, status of a program by Richel Bilderbeek<br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>ProgramStatus.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::ProgramStatusToStr(<b><a href="CppConst.htm">const</a></b> ProgramStatus c)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (c)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::yes: <b><a href="CppReturn.htm">return</a></b> "yes";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::no : <b><a href="CppReturn.htm">return</a></b> "no";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::nvr: <b><a href="CppReturn.htm">return</a></b> "never";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::n_a: <b><a href="CppReturn.htm">return</a></b> "n/a";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::wip: <b><a href="CppReturn.htm">return</a></b> "wip";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::tbd: <b><a href="CppReturn.htm">return</a></b> "todo";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::unk: <b><a href="CppReturn.htm">return</a></b> "unknown";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("RichelBilderbeek::ProgramStatusToStr");<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::ProgramStatus<a href="CppVersion.htm">Version</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramStatus<a href="CppVersion.htm">Version</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-02-19: <a href="CppVersion.htm">Version</a> 1.0: initial <a href="CppVersion.htm">version</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> ProgramStatus c)<br/>
{<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(c);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramtype.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramtype.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramType, <b><a href="CppEnum.htm">enum</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option <a href="CppAny.htm">any</a> later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RIBI_RICHELBILDERBEEKPROGRAMTYPE_H<br/>
<a href="CppDefine.htm">#define</a> RIBI_RICHELBILDERBEEKPROGRAMTYPE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>ProgramTypes works with ProgramType<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> ProgramType<br/>
{<br/>
&nbsp;&nbsp;<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolAsciiArter.htm">asciiArter</a>,<br/>
&nbsp;&nbsp;<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolBarbaImage.htm">barbaImage</a>,<br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">beerWanter</a>,<br/>
&nbsp;&nbsp;<a href="GameBeerWanter.htm">beerWanter</a>Vcl,<br/>
&nbsp;&nbsp;<a href="ProjectBochum.htm">bochum</a>,<br/>
&nbsp;&nbsp;<a href="GameBoenken.htm">boenken</a>,<br/>
&nbsp;&nbsp;<a href="GameBoenkenVcl.htm">boenkenVcl</a>,<br/>
&nbsp;&nbsp;<a href="ProjectBrainweaver.htm">brainweaver</a>,<br/>
&nbsp;&nbsp;<a href="ProjectBristol.htm">bristol</a>,<br/>
&nbsp;&nbsp;caesarCipher,<br/>
&nbsp;&nbsp;<a href="ProjectChrisWiley.htm">chrisWiley</a>,<br/>
&nbsp;&nbsp;codeBreaker,<br/>
&nbsp;&nbsp;<a href="ToolCodeToHtml.htm">codeToHtml</a>,<br/>
&nbsp;&nbsp;<a href="GameConnectThree.htm">connectThree</a>,<br/>
&nbsp;&nbsp;<a href="GameCorridor.htm">corridor</a>,<br/>
&nbsp;&nbsp;<a href="ToolCreateGlossary.htm">createGlossary</a>,<br/>
&nbsp;&nbsp;<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>,<br/>
&nbsp;&nbsp;<a href="ProjectCrossPoll.htm">crossPoll</a>,<br/>
&nbsp;&nbsp;<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>,<br/>
&nbsp;&nbsp;<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolDotMatrix.htm">dotMatrix</a>,<br/>
&nbsp;&nbsp;<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>,<br/>
&nbsp;&nbsp;<a href="CppEncranger.htm">encranger</a>,<br/>
&nbsp;&nbsp;<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>,<br/>
&nbsp;&nbsp;<a href="ToolFilterOperationer.htm">filterOperationer</a>,<br/>
&nbsp;&nbsp;<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>,<br/>
&nbsp;&nbsp;<a href="ToolFunctionPlotter.htm">functionPlotter</a>,<br/>
&nbsp;&nbsp;<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolGaborFilter.htm">gaborFilter</a>,<br/>
&nbsp;&nbsp;<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolGrayCoder.htm">grayCoder</a>,<br/>
&nbsp;&nbsp;<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>,<br/>
&nbsp;&nbsp;<a href="ProjectGtst.htm">gtst</a>,<br/>
&nbsp;&nbsp;<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>,<br/>
&nbsp;&nbsp;<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolHometrainer.htm">hometrainer</a>,<br/>
&nbsp;&nbsp;<a href="ToolHometrainer.htm">hometrainer</a>Vcl,<br/>
&nbsp;&nbsp;<a href="ToolImageRotater.htm">imageRotater</a>,<br/>
&nbsp;&nbsp;<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>,<br/>
&nbsp;&nbsp;<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameK3OpEenRij.htm">k3OpEenRij</a>,<br/>
&nbsp;&nbsp;<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>,<br/>
&nbsp;&nbsp;<a href="ToolKeySender.htm">keySender</a>,<br/>
&nbsp;&nbsp;<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>,<br/>
&nbsp;&nbsp;<a href="ToolLambdaBot.htm">lambdaBot</a>,<br/>
&nbsp;&nbsp;<a href="ToolLearyCircumplex.htm">learyCircumplex</a>,<br/>
&nbsp;&nbsp;<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>,<br/>
&nbsp;&nbsp;<a href="ToolLoose.htm">loose</a>,<br/>
&nbsp;&nbsp;<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>,<br/>
&nbsp;&nbsp;<a href="ToolMazeCreator.htm">mazeCreator</a>,<br/>
&nbsp;&nbsp;<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameMaziak.htm">maziak</a>,<br/>
&nbsp;&nbsp;<a href="GameMaziakVcl.htm">maziakVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>,<br/>
&nbsp;&nbsp;<a href="ToolMorpher.htm">morpher</a>,<br/>
&nbsp;&nbsp;<a href="ToolMultiEncranger.htm">multiEncranger</a>,<br/>
&nbsp;&nbsp;<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>,<br/>
&nbsp;&nbsp;<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>,<br/>
&nbsp;&nbsp;<a href="ToolMusicTheory.htm">busicTheory</a>,<br/>
&nbsp;&nbsp;<a href="ToolNdsmake.htm">ndsmake</a>,<br/>
&nbsp;&nbsp;<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl,<br/>
&nbsp;&nbsp;<a href="ToolPause.htm">pause</a>,<br/>
&nbsp;&nbsp;<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>,<br/>
&nbsp;&nbsp;<a href="ToolPicToCode.htm">picToCode</a>,<br/>
&nbsp;&nbsp;<a href="ToolPixelator.htm">pixelator</a>,<br/>
&nbsp;&nbsp;<a href="ToolPixelator.htm">pixelator</a>Vcl,<br/>
&nbsp;&nbsp;<a href="GamePokeVolley.htm">pokeVolley</a>Vcl,<br/>
&nbsp;&nbsp;<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>,<br/>
&nbsp;&nbsp;<a href="ToolPrimeExpert.htm">primeExpert</a>,<br/>
&nbsp;&nbsp;projectRichelBilderbeek,<br/>
&nbsp;&nbsp;<a href="CppPylos.htm">pylos</a>,<br/>
&nbsp;&nbsp;<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>,<br/>
&nbsp;&nbsp;<a href="ToolQuadraticSolver.htm">quadraticSolver</a>,<br/>
&nbsp;&nbsp;<a href="ProjectRampalEtienne.htm">rampalEtienne</a>,<br/>
&nbsp;&nbsp;<a href="ToolRandomCode.htm">randomCode</a>,<br/>
&nbsp;&nbsp;<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>,<br/>
&nbsp;&nbsp;rasper,<br/>
&nbsp;&nbsp;<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>,<br/>
&nbsp;&nbsp;<a href="ToolRegexTester.htm">regexTester</a>,<br/>
&nbsp;&nbsp;<a href="GameReversi.htm">reversi</a>,<br/>
&nbsp;&nbsp;<a href="GameReversi.htm">reversi</a>Vcl,<br/>
&nbsp;&nbsp;richelBilderbeekGallery,<br/>
&nbsp;&nbsp;richelbilderbeekNlSitemapGenerator,<br/>
&nbsp;&nbsp;<a href="GameRubiksClock.htm">rubiksClock</a>,<br/>
&nbsp;&nbsp;<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>,<br/>
&nbsp;&nbsp;<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolSecretMessage.htm">secretMessage</a>,<br/>
&nbsp;&nbsp;<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolSimBrainiac.htm">simBrainiac</a>,<br/>
&nbsp;&nbsp;<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>,<br/>
&nbsp;&nbsp;<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>,<br/>
&nbsp;&nbsp;<a href="ToolSimplifyNewick.htm">simplifyNewick</a>,<br/>
&nbsp;&nbsp;<a href="ToolSimPredator.htm">simPredator</a>Vcl,<br/>
&nbsp;&nbsp;<a href="ToolSimStagecraft.htm">simStagecraft</a>,<br/>
&nbsp;&nbsp;<a href="ToolSoaSim.htm">soaSim</a>,<br/>
&nbsp;&nbsp;<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>,<br/>
&nbsp;&nbsp;<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> ,<br/>
&nbsp;&nbsp;<a href="ToolStateObserver.htm">stateObserver</a>,<br/>
&nbsp;&nbsp;<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>,<br/>
&nbsp;&nbsp;<a href="ToolSurfacePlotter.htm">surfacePlotter</a>,<br/>
&nbsp;&nbsp;<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameTankBattalion.htm">tankBattalion</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestAbout.htm">testAbout</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestApproximator.htm">testApproximator</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestChess.htm">testChess</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestConceptMap.htm">testConceptMap</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestDial.htm">testDial</a>,<br/>
&nbsp;&nbsp;testDraw<a href="CppCanvas.htm">Canvas</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestEntrance.htm">testEntrance</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestExercise.htm">testExercise</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestFunctionParser.htm">testFunctionParser</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestGravityWidget.htm">testGravityWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestGroupWidget.htm">testGroupWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestHugeVector.htm">testHugeVector</a>,<br/>
&nbsp;&nbsp;testImage<a href="CppCanvas.htm">Canvas</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestLazy_init.htm">testLazy_init</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestLed.htm">testLed</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>,<br/>
&nbsp;&nbsp;testMulti<a href="CppCanvas.htm">Canvas</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestMultiVector.htm">testMultiVector</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestNdsmake.htm">testNdsmake</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestNeuralNet.htm">testNeuralNet</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestNewick.htm">testNewick</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestNewickVector.htm">testNewickVector</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>,<br/>
&nbsp;&nbsp;testPlane,<br/>
&nbsp;&nbsp;testPolyFile,<br/>
&nbsp;&nbsp;testPolyFileFromPolygons,<br/>
&nbsp;&nbsp;<a href="ToolTestPylos.htm">testPylos</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQrcFile.htm">testQrcFile</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtModels.htm">testQtModels</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestQuestion.htm">testQuestion</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestReversi.htm">testReversi</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestServerPusher.htm">testServerPusher</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestShape.htm">testShape</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestShinyButton.htm">testShinyButton</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestStopwatch.htm">testStopwatch</a>,<br/>
&nbsp;&nbsp;testText<a href="CppCanvas.htm">Canvas</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestTicTacToe.htm">testTicTacToe</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>,<br/>
&nbsp;&nbsp;<a href="ToolTestToggleButton.htm">testToggleButton</a>,<br/>
&nbsp;&nbsp;testTriangle,<br/>
&nbsp;&nbsp;<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>,<br/>
&nbsp;&nbsp;<a href="ProjectThorVeen.htm">thorVeen</a>,<br/>
&nbsp;&nbsp;<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>,<br/>
&nbsp;&nbsp;<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>,<br/>
&nbsp;&nbsp;<a href="GameTicTacToe.htm">ticTacToe</a>,<br/>
&nbsp;&nbsp;<a href="ToolTimePoll.htm">timePoll</a>,<br/>
&nbsp;&nbsp;triangleMeshCreator,<br/>
&nbsp;&nbsp;<a href="GameTronCollection.htm">tronCollection</a>,<br/>
&nbsp;&nbsp;<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>,<br/>
&nbsp;&nbsp;<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>,<br/>
&nbsp;&nbsp;valentineCardDecrypter,<br/>
&nbsp;&nbsp;vigenereCipher,<br/>
&nbsp;&nbsp;<a href="ToolVirtualBastard.htm">virtualBastard</a>,<br/>
&nbsp;&nbsp;<a href="ToolVisualAbc.htm">visualAbc</a>,<br/>
&nbsp;&nbsp;wktToSvg,<br/>
&nbsp;&nbsp;<a href="GameXeNonZero.htm">xeNonZero</a>,<br/>
&nbsp;&nbsp;<a href="GameZork.htm">zork</a>,<br/>
<br/>
&nbsp;&nbsp;n_types <a href="CppComment.htm">//</a>Used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RIBI_RICHELBILDERBEEKPROGRAMTYPE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramtype.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramtype.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramType, <b><a href="CppEnum.htm">enum</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramtypes.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramtypes.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> RIBI_RICHELBILDERBEEKPROGRAMTYPES_H<br/>
<a href="CppDefine.htm">#define</a> RIBI_RICHELBILDERBEEKPROGRAMTYPES_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bimap.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTypes<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a type to its <b><a href="CppEnum.htm">enum</a></b> name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/For example, ProgramType 'x' becomes <a href="CppStdString.htm">std::string</a> "x"<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> ProgramTypeToEnumName(<b><a href="CppConst.htm">const</a></b> ProgramType t) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a type to its screen name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/For example, ProgramType 'abcDef' might become <a href="CppStdString.htm">std::string</a> "Abc Def"<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> ProgramTypeToScreenName(<b><a href="CppConst.htm">const</a></b> ProgramType t) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> ProgramType EnumNameToProgramType(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetAllEnumNames() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; GetAllScreenNames() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;ProgramType&gt; GetAll() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Created by lazy <a href="CppInitialize.htm">initialization</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; m_map_to_<b><a href="CppEnum.htm">enum</a></b>name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Created by lazy <a href="CppInitialize.htm">initialization</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; m_map_to_screenname;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; CreateEnumNameMap();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; CreateScreenNameMap();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RIBI_RICHELBILDERBEEKPROGRAMTYPES_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppRichelBilderbeekProgram/richelbilderbeekprogramtypes.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppRichelBilderbeekProgram/richelbilderbeekprogramtypes.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramType, <b><a href="CppEnum.htm">enum</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>types.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppComment.htm">//</a>Lazy initializion<br/>
<a href="CppBoostBimap.htm">boost::bimap</a>&lt;<a href="CppRibi.htm">ribi</a>::ProgramType,<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::m_map_to_<b><a href="CppEnum.htm">enum</a></b>name {};<br/>
<a href="CppComment.htm">//</a>Lazy initializion<br/>
<a href="CppBoostBimap.htm">boost::bimap</a>&lt;<a href="CppRibi.htm">ribi</a>::ProgramType,<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::m_map_to_screenname {};<br/>
<br/>
<a href="CppBoostBimap.htm">boost::bimap</a>&lt;<a href="CppRibi.htm">ribi</a>::ProgramType,<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::CreateEnumNameMap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; m;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt;::value_type Pair;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Generated with Gnumeric:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> <a href="CppOperatorAssign.htm">=</a>CONCATENATE("m.insert(Pair(ProgramType::",A1,",\"",A1,"\"));")<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where A1 to Ax contain the programType <b><a href="CppEnum.htm">enum</a></b> values<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>,"<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolAsciiArter.htm">asciiArter</a>,"<a href="ToolAsciiArter.htm">asciiArter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>,"<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolBarbaImage.htm">barbaImage</a>,"<a href="ToolBarbaImage.htm">barbaImage</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>,"<a href="GameBeerWanter.htm">beerWanter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>Vcl,"<a href="GameBeerWanter.htm">beerWanter</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBochum.htm">bochum</a>,"<a href="ProjectBochum.htm">bochum</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBoenken.htm">boenken</a>,"<a href="GameBoenken.htm">boenken</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBoenkenVcl.htm">boenkenVcl</a>,"<a href="GameBoenkenVcl.htm">boenkenVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBrainweaver.htm">brainweaver</a>,"<a href="ProjectBrainweaver.htm">brainweaver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBristol.htm">bristol</a>,"<a href="ProjectBristol.htm">bristol</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::caesarCipher,"caesarCipher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectChrisWiley.htm">chrisWiley</a>,"<a href="ProjectChrisWiley.htm">chrisWiley</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::codeBreaker,"codeBreaker"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCodeToHtml.htm">codeToHtml</a>,"<a href="ToolCodeToHtml.htm">codeToHtml</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameConnectThree.htm">connectThree</a>,"<a href="GameConnectThree.htm">connectThree</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameCorridor.htm">corridor</a>,"<a href="GameCorridor.htm">corridor</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCreateGlossary.htm">createGlossary</a>,"<a href="ToolCreateGlossary.htm">createGlossary</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>,"<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectCrossPoll.htm">crossPoll</a>,"<a href="ProjectCrossPoll.htm">crossPoll</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>,"<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>,"<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolDotMatrix.htm">dotMatrix</a>,"<a href="ToolDotMatrix.htm">dotMatrix</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>,"<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="CppEncranger.htm">encranger</a>,"<a href="CppEncranger.htm">encranger</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>,"<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFilterOperationer.htm">filterOperationer</a>,"<a href="ToolFilterOperationer.htm">filterOperationer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>,"<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>,"<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFunctionPlotter.htm">functionPlotter</a>,"<a href="ToolFunctionPlotter.htm">functionPlotter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>,"<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGaborFilter.htm">gaborFilter</a>,"<a href="ToolGaborFilter.htm">gaborFilter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>,"<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGrayCoder.htm">grayCoder</a>,"<a href="ToolGrayCoder.htm">grayCoder</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>,"<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectGtst.htm">gtst</a>,"<a href="ProjectGtst.htm">gtst</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>,"<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>,"<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>,"<a href="ToolHometrainer.htm">hometrainer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>Vcl,"<a href="ToolHometrainer.htm">hometrainer</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotater.htm">imageRotater</a>,"<a href="ToolImageRotater.htm">imageRotater</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>,"<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>,"<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameK3OpEenRij.htm">k3OpEenRij</a>,"<a href="GameK3OpEenRij.htm">k3OpEenRij</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>,"<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>,"<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKeySender.htm">keySender</a>,"<a href="ToolKeySender.htm">keySender</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>,"<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>,"<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLambdaBot.htm">lambdaBot</a>,"<a href="ToolLambdaBot.htm">lambdaBot</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLearyCircumplex.htm">learyCircumplex</a>,"<a href="ToolLearyCircumplex.htm">learyCircumplex</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>,"<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLoose.htm">loose</a>,"<a href="ToolLoose.htm">loose</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>,"<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMazeCreator.htm">mazeCreator</a>,"<a href="ToolMazeCreator.htm">mazeCreator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>,"<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMaziak.htm">maziak</a>,"<a href="GameMaziak.htm">maziak</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMaziakVcl.htm">maziakVcl</a>,"<a href="GameMaziakVcl.htm">maziakVcl</a>"));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m.insert(Pair(ProgramType::<a href="GameMetZnDrieen.htm">metZnDrieen</a>,"<a href="GameMetZnDrieen.htm">metZnDrieen</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>,"<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>,"<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMorpher.htm">morpher</a>,"<a href="ToolMorpher.htm">morpher</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMultiEncranger.htm">multiEncranger</a>,"<a href="ToolMultiEncranger.htm">multiEncranger</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>,"<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>,"<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMusicTheory.htm">busicTheory</a>,"<a href="ToolMusicTheory.htm">busicTheory</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolNdsmake.htm">ndsmake</a>,"<a href="ToolNdsmake.htm">ndsmake</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl,"<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPause.htm">pause</a>,"<a href="ToolPause.htm">pause</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>,"<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPicToCode.htm">picToCode</a>,"<a href="ToolPicToCode.htm">picToCode</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPixelator.htm">pixelator</a>,"<a href="ToolPixelator.htm">pixelator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPixelator.htm">pixelator</a>Vcl,"<a href="ToolPixelator.htm">pixelator</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GamePokeVolley.htm">pokeVolley</a>Vcl,"<a href="GamePokeVolley.htm">pokeVolley</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>,"<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPrimeExpert.htm">primeExpert</a>,"<a href="ToolPrimeExpert.htm">primeExpert</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::projectRichelBilderbeek,"projectRichelBilderbeek"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="CppPylos.htm">pylos</a>,"<a href="CppPylos.htm">pylos</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>,"<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolQuadraticSolver.htm">quadraticSolver</a>,"<a href="ToolQuadraticSolver.htm">quadraticSolver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectRampalEtienne.htm">rampalEtienne</a>,"<a href="ProjectRampalEtienne.htm">rampalEtienne</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRandomCode.htm">randomCode</a>,"<a href="ToolRandomCode.htm">randomCode</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>,"<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::rasper,"rasper"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>,"<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRegexTester.htm">regexTester</a>,"<a href="ToolRegexTester.htm">regexTester</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameReversi.htm">reversi</a>,"<a href="GameReversi.htm">reversi</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameReversi.htm">reversi</a>Vcl,"<a href="GameReversi.htm">reversi</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::richelBilderbeekGallery,"richelBilderbeekGallery"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::richelbilderbeekNlSitemapGenerator,"richelbilderbeekNlSitemapGenerator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameRubiksClock.htm">rubiksClock</a>,"<a href="GameRubiksClock.htm">rubiksClock</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>,"<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>,"<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>,"<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSecretMessage.htm">secretMessage</a>,"<a href="ToolSecretMessage.htm">secretMessage</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>,"<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimBrainiac.htm">simBrainiac</a>,"<a href="ToolSimBrainiac.htm">simBrainiac</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>,"<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>,"<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimplifyNewick.htm">simplifyNewick</a>,"<a href="ToolSimplifyNewick.htm">simplifyNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimPredator.htm">simPredator</a>Vcl,"<a href="ToolSimPredator.htm">simPredator</a>Vcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimStagecraft.htm">simStagecraft</a>,"<a href="ToolSimStagecraft.htm">simStagecraft</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSoaSim.htm">soaSim</a>,"<a href="ToolSoaSim.htm">soaSim</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>,"<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>,"<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> ,"<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> "));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStateObserver.htm">stateObserver</a>,"<a href="ToolStateObserver.htm">stateObserver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>,"<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSurfacePlotter.htm">surfacePlotter</a>,"<a href="ToolSurfacePlotter.htm">surfacePlotter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>,"<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTankBattalion.htm">tankBattalion</a>,"<a href="GameTankBattalion.htm">tankBattalion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestAbout.htm">testAbout</a>,"<a href="ToolTestAbout.htm">testAbout</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestApproximator.htm">testApproximator</a>,"<a href="ToolTestApproximator.htm">testApproximator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>,"<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>,"<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>,"<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>,"<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestChess.htm">testChess</a>,"<a href="ToolTestChess.htm">testChess</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestConceptMap.htm">testConceptMap</a>,"<a href="ToolTestConceptMap.htm">testConceptMap</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestDial.htm">testDial</a>,"<a href="ToolTestDial.htm">testDial</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testDraw<a href="CppCanvas.htm">Canvas</a>,"testDraw<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestEntrance.htm">testEntrance</a>,"<a href="ToolTestEntrance.htm">testEntrance</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestExercise.htm">testExercise</a>,"<a href="ToolTestExercise.htm">testExercise</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestFunctionParser.htm">testFunctionParser</a>,"<a href="ToolTestFunctionParser.htm">testFunctionParser</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>,"<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>,"<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGravityWidget.htm">testGravityWidget</a>,"<a href="ToolTestGravityWidget.htm">testGravityWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGroupWidget.htm">testGroupWidget</a>,"<a href="ToolTestGroupWidget.htm">testGroupWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestHugeVector.htm">testHugeVector</a>,"<a href="ToolTestHugeVector.htm">testHugeVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testImage<a href="CppCanvas.htm">Canvas</a>,"testImage<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestLazy_init.htm">testLazy_init</a>,"<a href="ToolTestLazy_init.htm">testLazy_init</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestLed.htm">testLed</a>,"<a href="ToolTestLed.htm">testLed</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>,"<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>,"<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testMulti<a href="CppCanvas.htm">Canvas</a>,"testMulti<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>,"<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultiVector.htm">testMultiVector</a>,"<a href="ToolTestMultiVector.htm">testMultiVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNdsmake.htm">testNdsmake</a>,"<a href="ToolTestNdsmake.htm">testNdsmake</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNeuralNet.htm">testNeuralNet</a>,"<a href="ToolTestNeuralNet.htm">testNeuralNet</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNewick.htm">testNewick</a>,"<a href="ToolTestNewick.htm">testNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNewickVector.htm">testNewickVector</a>,"<a href="ToolTestNewickVector.htm">testNewickVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>,"<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPlane,"testPlane"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPolyFile,"testPolyFile"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPolyFileFromPolygons,"testPolyFileFromPolygons"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestPylos.htm">testPylos</a>,"<a href="ToolTestPylos.htm">testPylos</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQrcFile.htm">testQrcFile</a>,"<a href="ToolTestQrcFile.htm">testQrcFile</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>,"<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>,"<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>,"<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>,"<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtModels.htm">testQtModels</a>,"<a href="ToolTestQtModels.htm">testQtModels</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>,"<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>,"<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>,"<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>,"<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQuestion.htm">testQuestion</a>,"<a href="ToolTestQuestion.htm">testQuestion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestReversi.htm">testReversi</a>,"<a href="ToolTestReversi.htm">testReversi</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>,"<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestServerPusher.htm">testServerPusher</a>,"<a href="ToolTestServerPusher.htm">testServerPusher</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestShape.htm">testShape</a>,"<a href="ToolTestShape.htm">testShape</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestShinyButton.htm">testShinyButton</a>,"<a href="ToolTestShinyButton.htm">testShinyButton</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>,"<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestStopwatch.htm">testStopwatch</a>,"<a href="ToolTestStopwatch.htm">testStopwatch</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testText<a href="CppCanvas.htm">Canvas</a>,"testText<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>,"<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTicTacToe.htm">testTicTacToe</a>,"<a href="ToolTestTicTacToe.htm">testTicTacToe</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>,"<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestToggleButton.htm">testToggleButton</a>,"<a href="ToolTestToggleButton.htm">testToggleButton</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testTriangle,"testTriangle"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>,"<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectThorVeen.htm">thorVeen</a>,"<a href="ProjectThorVeen.htm">thorVeen</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>,"<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>,"<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTicTacToe.htm">ticTacToe</a>,"<a href="GameTicTacToe.htm">ticTacToe</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTimePoll.htm">timePoll</a>,"<a href="ToolTimePoll.htm">timePoll</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::triangleMeshCreator,"triangleMeshCreator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTronCollection.htm">tronCollection</a>,"<a href="GameTronCollection.htm">tronCollection</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>,"<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>,"<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::valentineCardDecrypter,"valentineCardDecrypter"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::vigenereCipher,"vigenereCipher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolVirtualBastard.htm">virtualBastard</a>,"<a href="ToolVirtualBastard.htm">virtualBastard</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolVisualAbc.htm">visualAbc</a>,"<a href="ToolVisualAbc.htm">visualAbc</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::wktToSvg,"wktToSvg"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameXeNonZero.htm">xeNonZero</a>,"<a href="GameXeNonZero.htm">xeNonZero</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameZork.htm">zork</a>,"<a href="GameZork.htm">zork</a>"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m.left.size() <a href="CppOperatorEqual.htm">==</a> m.right.size());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.left.size()) <a href="CppOperatorNotEqual.htm">!=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(m.left.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Copy the contents of ProgramType (except n_types) to above here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.left.size()) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<a href="CppBoostBimap.htm">boost::bimap</a>&lt;<a href="CppRibi.htm">ribi</a>::ProgramType,<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::CreateScreenNameMap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt; m;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoostBimap.htm">boost::bimap</a>&lt;ProgramType,<a href="CppStdString.htm">std::string</a>&gt;::value_type Pair;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Generated with Gnumeric:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> <a href="CppOperatorAssign.htm">=</a>CONCATENATE("m.insert(Pair(ProgramType::",A1,",\"",A1,"\"));")<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/where A1 to Ax contain the programType <b><a href="CppEnum.htm">enum</a></b> values<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolAsciiArter.htm">asciiArter</a>,"<a href="CppAsciiArter.htm">AsciiArter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolAsciiArterVcl.htm">asciiArterVcl</a>,"<a href="CppAsciiArter.htm">AsciiArter</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameAthleticLandVcl.htm">athleticLandVcl</a>,"Athletic Land (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolBarbaImage.htm">barbaImage</a>,"BarbaImage"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>,"<a href="GameBeerWanter.htm">BeerWanter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBeerWanter.htm">beerWanter</a>Vcl,"<a href="GameBeerWanter.htm">BeerWanter</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBochum.htm">bochum</a>,"<a href="ProjectBochum.htm">Bochum</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBoenken.htm">boenken</a>,"<a href="GameBoenken.htm">Boenken</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameBoenkenVcl.htm">boenkenVcl</a>,"<a href="GameBoenken.htm">Boenken</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBrainweaver.htm">brainweaver</a>,"<a href="ProjectBrainweaver.htm">Brainweaver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectBristol.htm">bristol</a>,"<a href="ProjectBristol.htm">Bristol</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::caesarCipher,"CaesarCipher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectChrisWiley.htm">chrisWiley</a>,"Chris Wiley"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::codeBreaker,"CodeBreaker"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCodeToHtml.htm">codeToHtml</a>,"<a href="ToolCodeToHtml.htm">CodeToHtml</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameConnectThree.htm">connectThree</a>,"<a href="CppConnectThree.htm">ConnectThree</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameCorridor.htm">corridor</a>,"Corridor"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCreateGlossary.htm">createGlossary</a>,"<a href="ToolCreateGlossary.htm">CreateGlossary</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolCreateQtProjectZipFile.htm">createQtProjectZipFile</a>,"Create<a href="CppQt.htm">Qt</a>ProjectZipFile"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectCrossPoll.htm">crossPoll</a>,"<a href="ProjectCrossPoll.htm">CrossPoll</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameDasWahreSchlagerfest.htm">dasWahreSchlagerfest</a>,"<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameDasWahreSchlagerfestVcl.htm">dasWahreSchlagerfestVcl</a>,"<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolDotMatrix.htm">dotMatrix</a>,"Dot<a href="CppMatrix.htm">Matrix</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolDotMatrixVcl.htm">dotMatrixVcl</a>,"Dot<a href="CppMatrix.htm">Matrix</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="CppEncranger.htm">encranger</a>,"<a href="CppEncranger.htm">Encranger</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameEverythingToPiecesShooter.htm">everythingToPiecesShooter</a>,"EverythingToPiecesShooter"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFilterOperationer.htm">filterOperationer</a>,"<a href="ToolFilterOperationer.htm">FilterOperationer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFilterOperationerVcl.htm">filterOperationerVcl</a>,"<a href="ToolFilterOperationer.htm">FilterOperationer</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFryskLeareLieder.htm">fryskLeareLieder</a>,"Frysk Leare Lieder"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFunctionPlotter.htm">functionPlotter</a>,"<a href="CppFunction.htm">Function</a>Plotter"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolFunctionPlotterVcl.htm">functionPlotterVcl</a>,"<a href="CppFunction.htm">Function</a>Plotter (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGaborFilter.htm">gaborFilter</a>,"GaborFilter"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGaborFilterVcl.htm">gaborFilterVcl</a>,"GaborFilter (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGrayCoder.htm">grayCoder</a>,"<a href="ToolGrayCoder.htm">GrayCoder</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolGrayCoderVcl.htm">grayCoderVcl</a>,"<a href="ToolGrayCoder.htm">GrayCoder</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectGtst.htm">gtst</a>,"<a href="ProjectGtst.htm">GTST</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHistogramEqualizationer.htm">histogramEqualizationer</a>,"<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHistogramEqualizationerVcl.htm">histogramEqualizationerVcl</a>,"<a href="ToolHistogramEqualizationer.htm">HistogramEqualizationer</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>,"<a href="ToolHometrainer.htm">Hometrainer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>Vcl,"<a href="ToolHometrainer.htm">Hometrainer</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotater.htm">imageRotater</a>,"<a href="ToolImageRotater.htm">ImageRotater</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotaterClx.htm">imageRotaterClx</a>,"<a href="ToolImageRotater.htm">ImageRotater</a> (CLX)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolImageRotaterVcl.htm">imageRotaterVcl</a>,"<a href="ToolImageRotater.htm">ImageRotater</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameK3OpEenRij.htm">k3OpEenRij</a>,"K3 Op Een Rij"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameK3OpEenRijVcl.htm">k3OpEenRijVcl</a>,"K3 Op Een Rij (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKalmanFilterer.htm">kalmanFilterer</a>,"<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKeySender.htm">keySender</a>,"KeySender"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameKnokfighterVcl.htm">knokfighterVcl</a>,"KnokfighterVcl"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolKTouchLectureCreator.htm">kTouchLectureCreator</a>,"KTouch Lecture Creator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLambdaBot.htm">lambdaBot</a>,"LambdaBot"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLearyCircumplex.htm">learyCircumplex</a>,"LearyCircumplex"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLogisticGrowthSimulator.htm">logisticGrowthSimulator</a>,"LogisticGrowthSimulator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolLoose.htm">loose</a>,"Loose"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMartianCafeTuinemaTycoon.htm">martianCafeTuinemaTycoon</a>,"MartianCafeTuinemaTycoon"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMazeCreator.htm">mazeCreator</a>,"MazeCreator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMazeCreatorVcl.htm">mazeCreatorVcl</a>,"MazeCreator (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMaziak.htm">maziak</a>,"Maziak"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMaziakVcl.htm">maziakVcl</a>,"Maziak (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameMetZnDrieenVcl.htm">metZnDrieenVcl</a>,"Met Z'n Drieen (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMidiLessonCreator.htm">midiLessonCreator</a>,"MIDI Lesson Creator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMorpher.htm">morpher</a>,"Morpher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMultiEncranger.htm">multiEncranger</a>,"Multi<a href="CppEncranger.htm">Encranger</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMultiEncrangerVcl.htm">multiEncrangerVcl</a>,"Multi<a href="CppEncranger.htm">Encranger</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectMuscaDomestica.htm">muscaDomestica</a>,"MuscaDomestica"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolMusicTheory.htm">busicTheory</a>,"<a href="CppMusic.htm">Music</a>Theory"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolNdsmake.htm">ndsmake</a>,"<a href="ToolNdsmake.htm">ndsmake</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPaperRockScissors.htm">paperRockScissors</a>Vcl,"PaperRockScissors (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPause.htm">pause</a>,"<a href="ToolPause.htm">Pause</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPerfectElasticCollision.htm">perfectElasticCollision</a>,"PerfectElasticCollision"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPicToCode.htm">picToCode</a>,"<a href="ToolPicToCode.htm">PicToCode</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPixelator.htm">pixelator</a>,"Pixelator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPixelator.htm">pixelator</a>Vcl,"Pixelator (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GamePokeVolley.htm">pokeVolley</a>Vcl,"PokeVolley (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPreDickAdvocaTor.htm">preDickAdvocaTor</a>,"<a href="ToolPreDickAdvocaTor.htm">PreDickAdvocaTor</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolPrimeExpert.htm">primeExpert</a>,"<a href="CppPrimeExpert.htm">PrimeExpert</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::projectRichelBilderbeek,"<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="CppPylos.htm">pylos</a>,"<a href="CppPylos.htm">Pylos</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolQmakeWatcher.htm">qmakeWatcher</a>,"q<a href="CppMake.htm">make</a> Watcher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolQuadraticSolver.htm">quadraticSolver</a>,"QuadraticSolver"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectRampalEtienne.htm">rampalEtienne</a>,"RampalEtienne"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRandomCode.htm">randomCode</a>,"<a href="CppRandomCode.htm">RandomCode</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRandomCodeVcl.htm">randomCodeVcl</a>,"<a href="CppRandomCode.htm">RandomCode</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::rasper,"Rasper"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRefrigeratorPuzzleSolver.htm">refrigeratorPuzzleSolver</a>,"RefrigeratorPuzzleSolver"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolRegexTester.htm">regexTester</a>,"<a href="ToolRegexTester.htm">RegexTester</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameReversi.htm">reversi</a>,"Reversi"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameReversi.htm">reversi</a>Vcl,"Reversi (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::richelBilderbeekGallery,"RichelBilderbeekGallery"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::richelbilderbeekNlSitemapGenerator,"RichelbilderbeekNlSitemapGenerator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameRubiksClock.htm">rubiksClock</a>,"Rubik's Clock"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameRubiksClockVcl.htm">rubiksClockVcl</a>,"Rubik's Clock (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSearchAndDestroyChess.htm">searchAndDestroyChess</a>,"SearchAndDestroy<a href="CppChess.htm">Chess</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSearchAndDestroyChessVcl.htm">searchAndDestroyChessVcl</a>,"SearchAndDestroy<a href="CppChess.htm">Chess</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSecretMessage.htm">secretMessage</a>,"<a href="ToolSecretMessage.htm">SecretMessage</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSecretMessageVcl.htm">secretMessageVcl</a>,"<a href="ToolSecretMessage.htm">SecretMessage</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimBrainiac.htm">simBrainiac</a>,"SimBrainiac"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimImmuneResponse.htm">simImmuneResponse</a>,"SimImmuneResponse"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimMysteryMachine.htm">simMysteryMachine</a>,"Sim<a href="CppMysteryMachine.htm">MysteryMachine</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimplifyNewick.htm">simplifyNewick</a>,"Simplify<a href="CppNewick.htm">Newick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimPredator.htm">simPredator</a>Vcl,"SimPredator (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSimStagecraft.htm">simStagecraft</a>,"<a href="ToolSimStagecraft.htm">SimStagecraft</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSoaSim.htm">soaSim</a>,"<a href="ToolSoaSim.htm">SoaSim</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSolvePuzzleX.htm">solvePuzzleX</a>,"<a href="ToolSolvePuzzleX.htm">SolvePuzzleX</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameSpaceHarryVcl.htm">spaceHarryVcl</a>,"<a href="GameSpaceHarry.htm">SpaceHarry</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStaircaseCardCreator.htm">staircaseCardCreator</a> ,"Stair<b><a href="CppCase.htm">case</a></b>CardCreator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStateObserver.htm">stateObserver</a>,"<a href="CppStateObserver.htm">StateObserver</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolStyleSheetSetter.htm">styleSheetSetter</a>,"<a href="ToolStyleSheetSetter.htm">StyleSheetSetter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSurfacePlotter.htm">surfacePlotter</a>,"<a href="ToolSurfacePlotter.htm">SurfacePlotter</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolSurfacePlotterVcl.htm">surfacePlotterVcl</a>,"<a href="ToolSurfacePlotter.htm">SurfacePlotter</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTankBattalion.htm">tankBattalion</a>,"Tank Battalion"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestAbout.htm">testAbout</a>,"Test <a href="CppAbout.htm">About</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestApproximator.htm">testApproximator</a>,"Test <a href="CppApproximator.htm">Approximator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBinaryNewickVector.htm">testBinaryNewickVector</a>,"Test <a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBouncingBallsWidget.htm">testBouncingBallsWidget</a>,"Test BouncingBalls<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBouncingRectsWidget.htm">testBouncingRectsWidget</a>,"Test BouncingRects<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestBroadcastServer.htm">testBroadcastServer</a>,"Test <a href="CppBroadcastServer.htm">BroadcastServer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestChess.htm">testChess</a>,"Test <a href="CppChess.htm">Chess</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestConceptMap.htm">testConceptMap</a>,"Test ConceptMap"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestDial.htm">testDial</a>,"Test <a href="CppDial.htm">Dial</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testDraw<a href="CppCanvas.htm">Canvas</a>,"Test Draw<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestEntrance.htm">testEntrance</a>,"Test Entrance"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestExercise.htm">testExercise</a>,"Test <a href="CppExercise.htm">Exercise</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestFunctionParser.htm">testFunctionParser</a>,"Test <a href="CppFunctionParser.htm">FunctionParser</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGnuplotInterface.htm">testGnuplotInterface</a>,"Test <a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGraphicsProxyWidget.htm">testGraphicsProxyWidget</a>,"Test GraphicsProxy<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGravityWidget.htm">testGravityWidget</a>,"Test Gravity<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestGroupWidget.htm">testGroupWidget</a>,"Test <a href="CppGroupWidget.htm">GroupWidget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestHugeVector.htm">testHugeVector</a>,"Test HugeVector"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testImage<a href="CppCanvas.htm">Canvas</a>,"Test Image<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestLazy_init.htm">testLazy_init</a>,"Test <a href="CppLazy_init.htm">Lazy_init</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestLed.htm">testLed</a>,"Test <a href="CppLed.htm">Led</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestManyDigitNewick.htm">testManyDigitNewick</a>,"Test <a href="CppManyDigitNewick.htm">ManyDigitNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultiApproximator.htm">testMultiApproximator</a>,"Test Multi<a href="CppApproximator.htm">Approximator</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testMulti<a href="CppCanvas.htm">Canvas</a>,"Test Multi<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultipleChoiceQuestion.htm">testMultipleChoiceQuestion</a>,"Test <a href="CppMultipleChoiceQuestion.htm">MultipleChoiceQuestion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestMultiVector.htm">testMultiVector</a>,"Test <a href="CppMultiVector.htm">MultiVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNdsmake.htm">testNdsmake</a>,"Test <a href="ToolNdsmake.htm">ndsmake</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNeuralNet.htm">testNeuralNet</a>,"Test <a href="CppNeuralNet.htm">NeuralNet</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNewick.htm">testNewick</a>,"Test <a href="CppNewick.htm">Newick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestNewickVector.htm">testNewickVector</a>,"Test <a href="CppNewickVector.htm">NewickVector</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestOpenQuestion.htm">testOpenQuestion</a>,"Test <a href="CppOpenQuestion.htm">OpenQuestion</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPlane,"Test Plane"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPolyFile,"Test PolyFile"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testPolyFileFromPolygons,"Test PolyFileFromPolygons"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestPylos.htm">testPylos</a>,"Test <a href="CppPylos.htm">Pylos</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQrcFile.htm">testQrcFile</a>,"Test QrcFile"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtArrowItems.htm">testQtArrowItems</a>,"Test <a href="CppQtArrowItem.htm">QtArrowItem</a>s"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtCreatorProFile.htm">testQtCreatorProFile</a>,"Test <a href="CppQtCreatorProFile.htm">QtCreatorProFile</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtHideAndShowDialog.htm">testQtHideAndShowDialog</a>,"Test <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">testQtKeyboardFriendlyGraphicsView</a>,"Test <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtModels.htm">testQtModels</a>,"Test <a href="CppQt.htm">Qt</a>Models"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtOcrWidget.htm">testQtOcrWidget</a>,"Test <a href="CppQt.htm">Qt</a>Ocr<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>,"Test <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedRectItem.htm">testQtRoundedRectItem</a>,"Test <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQtRoundedEditRectItem.htm">testQtRoundedEditRectItem</a>,"Test <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestQuestion.htm">testQuestion</a>,"Test <a href="CppQuestion.htm">Question</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestReversi.htm">testReversi</a>,"Test Reversi"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestSelectFileDialog.htm">testSelectFileDialog</a>,"Test SelectFileDialog"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestServerPusher.htm">testServerPusher</a>,"Test ServerPusher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestShape.htm">testShape</a>,"Test <a href="CppShape.htm">Shape</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestShinyButton.htm">testShinyButton</a>,"Test <a href="CppShinyButton.htm">ShinyButton</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestSimpleLinearRegression.htm">testSimpleLinearRegression</a>,"Test SimpleLinearRegression"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestStopwatch.htm">testStopwatch</a>,"Test <a href="CppStopwatch.htm">Stopwatch</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testText<a href="CppCanvas.htm">Canvas</a>,"Test Text<a href="CppCanvas.htm">Canvas</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTextPositionWidget.htm">testTextPositionWidget</a>,"Test TextPosition<a href="CppWidget.htm">Widget</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTicTacToe.htm">testTicTacToe</a>,"Test <a href="CppTicTacToe.htm">TicTacToe</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTimedServerPusher.htm">testTimedServerPusher</a>,"Test <a href="CppTime.htm">Time</a>dServerPusher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestToggleButton.htm">testToggleButton</a>,"Test <a href="CppToggleButton.htm">ToggleButton</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::testTriangle,"Test Triangle"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTestTwoDigitNewick.htm">testTwoDigitNewick</a>,"Test <a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ProjectThorVeen.htm">thorVeen</a>,"Thor Veen"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolThresholdFilterer.htm">thresholdFilterer</a>,"<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolThresholdFiltererVcl.htm">thresholdFiltererVcl</a>,"<a href="ToolThresholdFilterer.htm">ThresholdFilterer</a> (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTicTacToe.htm">ticTacToe</a>,"<a href="CppTicTacToe.htm">TicTacToe</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolTimePoll.htm">timePoll</a>,"<a href="ToolTimePoll.htm">TimePoll</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::triangleMeshCreator,"TriangleMeshCreator"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTronCollection.htm">tronCollection</a>,"Tron Collection"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameTronCollectionVcl.htm">tronCollectionVcl</a>,"Tron Collection (VCL)"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolUbuntuOneWatcher.htm">ubuntuOneWatcher</a>,"<a href="CppUbuntu.htm">Ubuntu</a>One Watcher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::valentineCardDecrypter,"ValentineCardDecrypter"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::vigenereCipher,"VigenereCipher"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolVirtualBastard.htm">virtualBastard</a>,"Virtual Bastard"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="ToolVisualAbc.htm">visualAbc</a>,"Visual ABC"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::wktToSvg,"WktToSvg"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameXeNonZero.htm">xeNonZero</a>,"<a href="GameXeNonZero.htm">XeNonZero</a>"));<br/>
&nbsp;&nbsp;m.insert(Pair(ProgramType::<a href="GameZork.htm">zork</a>,"Zork"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m.left.size() <a href="CppOperatorEqual.htm">==</a> m.right.size());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.left.size()) <a href="CppOperatorNotEqual.htm">!=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(m.left.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Copy the contents of ProgramType (except n_types) to above here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.left.size()) <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::GetAllEnumNames() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.right.empty()) { m_map_to_<b><a href="CppEnum.htm">enum</a></b>name <a href="CppOperatorAssign.htm">=</a> CreateEnumNameMap(); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.right.empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy right map of bimap<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; t: m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.right) { v.push_back(t.first); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!v.empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.right.size() <a href="CppOperatorEqual.htm">==</a> v.size());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::GetAllScreenNames() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_map_to_screenname.right.empty()) { m_map_to_screenname <a href="CppOperatorAssign.htm">=</a> CreateScreenNameMap(); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_map_to_screenname.right.empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy right map of bimap<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; t: m_map_to_screenname.right) { v.push_back(t.first); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!v.empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_map_to_screenname.right.size() <a href="CppOperatorEqual.htm">==</a> v.size());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::ProgramType&gt; <a href="CppRibi.htm">ribi</a>::ProgramTypes::GetAll() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.empty()) { m_map_to_<b><a href="CppEnum.htm">enum</a></b>name <a href="CppOperatorAssign.htm">=</a> CreateEnumNameMap(); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy left map of bimap<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;ProgramType&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b>&amp; t: m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left) { v.push_back(t.first); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!v.empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.size() <a href="CppOperatorEqual.htm">==</a> v.size());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::ProgramTypes::ProgramTypeToEnumName(<b><a href="CppConst.htm">const</a></b> ProgramType t) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.empty()) { m_map_to_<b><a href="CppEnum.htm">enum</a></b>name <a href="CppOperatorAssign.htm">=</a> CreateEnumNameMap(); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.find(t) <a href="CppOperatorNotEqual.htm">!=</a> m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_map_to_<b><a href="CppEnum.htm">enum</a></b>name.left.find(t)-&gt;second;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::ProgramTypes::ProgramTypeToScreenName(<b><a href="CppConst.htm">const</a></b> ProgramType t) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_map_to_screenname.left.empty()) { m_map_to_screenname <a href="CppOperatorAssign.htm">=</a> CreateEnumNameMap(); }<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_map_to_screenname.left.find(t) <a href="CppOperatorNotEqual.htm">!=</a> m_map_to_screenname.left.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_map_to_screenname.left.find(t)-&gt;second;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::ProgramTypes::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetAll().size() <a href="CppOperatorEqual.htm">==</a> GetAllEnumNames().size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetAll().size() <a href="CppOperatorEqual.htm">==</a> GetAllScreenNames().size());<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
