<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Predicate</title>
  <meta name="description" content="C++ Predicate"/>
  <meta name="keywords" content="C++ Predicate code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppPredicate.htm">Predicate</a></h1>
<p>&nbsp;</p>
<p>A <a href="CppPredicate.htm">predicate</a> is a logical expression that evaluates to <a href="CppTrue.htm">true</a> or <a href="CppFalse.htm">false</a>, like in <a href="CppIf.htm">if</a>-statements.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppExample.htm">Examples</a></h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppPredicateExample1.htm">Predicate example 1: ReplaceNegativeByZero</li>
  <li><a href="CppIn_regex.htm">In_regex</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppStl.htm">STL</a> <a href="CppPredicate.htm">predicates</a></h2>
<p>&nbsp;</p>
<p>An overview of <a href="CppStl.htm">STL</a> <a href="CppPredicate.htm">predicates</a> names and their corresponding <a href="CppOperator.htm">operator</a>, from [0]. These <a href="CppPredicate.htm">predicates</a> can be found in the <a href="CppHeaderFile.htm">header file</a> <a href="CppFunctionalH.htm">functional</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppEqual_to.htm">std::equal_to</a>, <a href="CppOperatorEqual.htm">operator==</a></li>
  <li><a href="CppGreater.htm">std::greater</a>, <a href="CppOperatorGreater.htm">operator&gt;</a></li>
  <li><a href="CppGreater_equal.htm">std::greater_equal</a>, <a href="CppOperatorGreaterEqual.htm">operator&gt;=</a></li>
  <li><a href="CppLess.htm">std::less</a>, <a href="CppOperatorLess.htm">operator&lt;</a></li>
  <li><a href="CppLess_equal.htm">std::less_equal</a>, <a href="CppOperatorLessEqual.htm">operator&lt;=</a></li>
  <li><a href="CppLogical_and.htm">std::logical_and</a>, <a href="CppOperatorLogicalAnd.htm">operator&amp;&amp;</a></li>
  <li><a href="CppLogical_not.htm">std::logical_not</a>, <a href="CppOperatorLogicalNot.htm">operator!</a></li>
  <li><a href="CppLogical_or.htm">std::logical_or</a>, <a href="CppOperatorLogicalOr.htm">operator||</a></li>
  <li><a href="CppNot_equal_to.htm">std::not_equal_to</a>, <a href="CppOperatorNotEqual.htm">operator!=</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  </li><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). 1997. ISBN: 0-201-88954-4. Chapter 18.4.2.1 : 'Overview of Predicates'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
