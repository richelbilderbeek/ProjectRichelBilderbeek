<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>BoostGeometryExample4</title>
  <meta name="description" content="C++ BoostGeometryExample4"/>
  <meta name="keywords" content="C++ BoostGeometryExample4 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostGeometryExample4.htm">BoostGeometryExample4</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.636 at Sun Apr 27 13:03:08 2014
 -->
<p><img src="PicBoost.png" alt="Boost"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppBoostGeometryExample4.htm">Boost.Geometry example 4: CalcPlane: determine the plane passing through three point</a>
  is a <a href="CppBoostGeometry.htm">Boost.Geometry</a> <a href="CppExample.htm">example</a>.
</p>
<p>&nbsp;</p>
<p>
  CalcCrossProduct and CalcPlane are maintained in <a href="CppGeometry.htm">CppGeometry</a>.
  See <a href="CppGeometry.htm">CppGeometry</a>
  for the heavily used, debugged and tested versions of CalcCrossProduct and CalcPlane.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.2.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppBoostGeometryExample4/CppBoostGeometryExample4.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample4/CppBoostGeometryExample4.pro" border = "1"><tr><td><code>
exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
}<br/>
!exists(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) {<br/>
&nbsp;&nbsp;QT += core<br/>
&nbsp;&nbsp;QT += gui<br/>
&nbsp;&nbsp;greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
&nbsp;&nbsp;<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
&nbsp;&nbsp;<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
&nbsp;&nbsp;unix {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
exists(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri) {<br/>
&nbsp;&nbsp;include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
}<br/>
!exists(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri) {<br/>
&nbsp;&nbsp;win32 {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_55_0<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppBoostGeometryExample4/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostGeometryExample4/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-variable"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::<a href="CppPointer.htm">point</a>&lt;<b><a href="CppInt.htm">int</a></b>,3,<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::cs::cartesian&gt; <a href="CppPoint.htm">Point</a>3D;<br/>
<br/>
<a href="CppStdFunction.htm">std::function</a>&lt;<b><a href="CppBool.htm">bool</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; rhs)&gt; OrderByX() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> [](<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; rhs)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;0&gt;(lhs) &lt; get&lt;0&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;0&gt;(lhs) &gt; get&lt;0&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;1&gt;(lhs) &lt; get&lt;1&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;1&gt;(lhs) &gt; get&lt;1&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> get&lt;2&gt;(lhs) &lt; get&lt;2&gt;(rhs);<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppStdFunction.htm">std::function</a>&lt;<b><a href="CppBool.htm">bool</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; rhs)&gt; OrderByZ() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> [](<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; rhs)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;2&gt;(lhs) &lt; get&lt;2&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;2&gt;(lhs) &gt; get&lt;2&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;1&gt;(lhs) &lt; get&lt;1&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (get&lt;1&gt;(lhs) &gt; get&lt;1&gt;(rhs)) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> get&lt;0&gt;(lhs) &lt; get&lt;0&gt;(rhs);<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>3D&amp; p)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppUsing.htm">using</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::get;<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "("&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> get&lt;0&gt;(p) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> get&lt;1&gt;(p) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "," <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> get&lt;2&gt;(p) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ")";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>3D&gt; v {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(0,0,0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(0,0,1),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(0,1,0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(0,1,1),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(1,0,0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(1,0,1),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(1,1,0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>3D(1,1,1)<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppStdRandom_shuffle.htm">std::random_shuffle</a>(v.begin(),v.end());<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Random" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> p:v) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;<a href="CppStdSort.htm">std::sort</a>(v.begin(),v.end(),OrderByX());<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Sorted by X-Y-Z" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> p:v) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
&nbsp;&nbsp;<a href="CppStdSort.htm">std::sort</a>(v.begin(),v.end(),OrderByZ());<br/>
<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Sorted by Z-Y-X" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> p:v) { <a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'; }<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output<br/>
<br/>
Random<br/>
(1,0,0)<br/>
(0,0,1)<br/>
(1,1,0)<br/>
(0,1,0)<br/>
(0,0,0)<br/>
(1,0,1)<br/>
(1,1,1)<br/>
(0,1,1)<br/>
Sorted by X-Y-Z<br/>
(0,0,0)<br/>
(0,0,1)<br/>
(0,1,0)<br/>
(0,1,1)<br/>
(1,0,0)<br/>
(1,0,1)<br/>
(1,1,0)<br/>
(1,1,1)<br/>
Sorted by Z-Y-X<br/>
(0,0,0)<br/>
(1,0,0)<br/>
(0,1,0)<br/>
(1,1,0)<br/>
(0,0,1)<br/>
(1,0,1)<br/>
(0,1,1)<br/>
(1,1,1)<br/>
Press &lt;RETURN&gt; to close <b><a href="CppThis.htm">this</a></b> window...<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
