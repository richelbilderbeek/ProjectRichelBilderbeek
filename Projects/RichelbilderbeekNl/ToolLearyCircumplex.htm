<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>LearyCircumplex</title>
  <meta name="description" content="C++ LearyCircumplex"/>
  <meta name="keywords" content="C++ LearyCircumplex "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolLearyCircumplex.htm">LearyCircumplex</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:43:33 2014
 -->
<p><a href="ToolLearyCircumplex.htm">LearyCircumplex</a> is a <a href="Tools.htm">tool</a> to 
generate an image of a Leary circumplex (also called 'Interpersonal circumplex' or 'Leary circle' or 
(in Dutch) 'Roos van Leary') after having scored the results of a questionaire.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolLearyCircumplex_1_0.png">View a screenshot of 'Leary Circumplex' (version 1.0)(png)</a></li>
  <li><a href="ToolLearyCircumplexExe_1_0.zip">Download the 'Leary Circumplex' Windows executable (version 1.0)(zip)</a></li>
  <li><a href="ToolLearyCircumplexSource_1_0.zip">Download the 'Leary Circumplex' source code (version 1.0)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://en.wikipedia.org/wiki/Interpersonal_Circumplex">Wikipedia's page on 'Interpersonal Circumplex'</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/ProjectLearyCircumplex.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/ProjectLearyCircumplex.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
USEFORM("UnitFormMain<a href="CppImplementationFile.htm">.cpp</a>", FormMain);<br/>
USEFORM("UnitFormDraw<a href="CppImplementationFile.htm">.cpp</a>", FormDraw);<br/>
USEFORM("UnitForm<a href="CppAbout.htm">About</a><a href="CppImplementationFile.htm">.cpp</a>", Form<a href="CppAbout.htm">About</a>);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, <b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;<a href="CppInitialize.htm">Initialize</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Title <a href="CppOperatorAssign.htm">=</a> "Leary Circumplex";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;CreateForm(__classid(TFormMain), &amp;FormMain);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Run();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppThrow.htm">throw</a></b> <a href="CppException.htm">Exception</a>("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppCatch.htm">catch</a></b> (<a href="CppException.htm">Exception</a> &amp;<a href="CppException.htm">exception</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppApplication.htm">Application</a>-&gt;Show<a href="CppException.htm">Exception</a>(&amp;<a href="CppException.htm">exception</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 0;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitDotMatrix.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitDotMatrix.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Dot<a href="CppMatrix.htm">Matrix</a>, <a href="Tools.htm">tool</a> to demonstrate dot-<a href="CppMatrix.htm">matrix</a> text drawing<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitDot<a href="CppMatrix.htm">Matrix</a>H<br/>
<a href="CppDefine.htm">#define</a> UnitDot<a href="CppMatrix.htm">Matrix</a>H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppArray.htm">array</a>.hpp&gt;<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Extctrls { <b><a href="CppClass.htm">class</a></b> <a href="CppTImage.htm">TImage</a>; }<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Dot-<a href="CppMatrix.htm">matrix</a> <a href="CppChar.htm">character</a>s are<br/>
<a href="CppComment.htm">//</a>size 5 (width) x 7 (height) pixels, excluding empty spacer pixels<br/>
<a href="CppComment.htm">//</a>size 6 (width) x 8 (height) pixels, including empty spacer pixels<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> c);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Dot-<a href="CppMatrix.htm">matrix</a> <a href="CppChar.htm">character</a>s are<br/>
<a href="CppComment.htm">//</a>size 5 (width) x 7 (height) pixels, excluding empty spacer pixels<br/>
<a href="CppComment.htm">//</a>size 6 (width) x 8 (height) pixels, including empty spacer pixels<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Dot-<a href="CppMatrix.htm">matrix</a> <a href="CppChar.htm">character</a>s are<br/>
<a href="CppComment.htm">//</a>size 5 (width) x 7 (height) pixels, excluding empty spacer pixels<br/>
<a href="CppComment.htm">//</a>size 6 (width) x 8 (height) pixels, including empty spacer pixels<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; v);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Dot-<a href="CppMatrix.htm">matrix</a> <a href="CppChar.htm">character</a>s are<br/>
<a href="CppComment.htm">//</a>size 5 (width) x 7 (height) pixels, excluding empty spacer pixels<br/>
<a href="CppComment.htm">//</a>size 6 (width) x 8 (height) pixels, including empty spacer pixels<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppInt.htm">int</a></b>,5&gt; ,7&gt; Get<a href="CppMatrix.htm">Matrix</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> c);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a pixel's RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a line of pixels' RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a square of pixels' RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitDotMatrix.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitDotMatrix.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Dot<a href="CppMatrix.htm">Matrix</a>, <a href="Tools.htm">tool</a> to demonstrate dot-<a href="CppMatrix.htm">matrix</a> text drawing<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitDot<a href="CppMatrix.htm">Matrix</a>.h"<br/>
<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> c)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppInt.htm">int</a></b>,5&gt; ,7&gt; v(Get<a href="CppMatrix.htm">Matrix</a>(c));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>7; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>5; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1 <a href="CppOperatorAssign.htm">=</a> x_co <a href="CppOperatorPlus.htm">+</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1 <a href="CppOperatorAssign.htm">=</a> y_co <a href="CppOperatorPlus.htm">+</a> y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v[y][x] <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetPixel(image,x1,y1,&nbsp;&nbsp;0,&nbsp;&nbsp;0,&nbsp;&nbsp;0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetPixel(image,x1,y1,255,255,255);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> s.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Dot<a href="CppMatrix.htm">Matrix</a>(image,x_co <a href="CppOperatorPlus.htm">+</a> (x*6),y_co,s[x]);<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> Dot<a href="CppMatrix.htm">Matrix</a>(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_co,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Dot<a href="CppMatrix.htm">Matrix</a>(image,x_co,y_co+(y*8),v[y]);<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppInt.htm">int</a></b>,5&gt; ,7&gt; Get<a href="CppMatrix.htm">Matrix</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> c)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a 5 (width) x 7 (height) 2D <a href="CppArray.htm">array</a><br/>
&nbsp;&nbsp;<a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppInt.htm">int</a></b>,5&gt; ,7&gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(c)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Note: indices are y-x-ordered!<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ' ':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '!':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '"':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '#':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '$':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '%':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '&amp;':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '\'':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '(':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ')':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '*':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '+':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ',':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '-':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '.':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '/':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '0':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '1':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '2':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '3':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '4':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '5':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '6':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '7':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '8':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '9':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ':':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ';':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '&lt;':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '=':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '&gt;':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '?':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '@':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'A':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'B':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'C':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'D':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'E':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'F':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'G':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'H':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'I':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'J':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'K':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'L':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'M':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'N':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'O':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'P':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'Q':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'R':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'S':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'T':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'U':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'V':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'W':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'X':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'Y':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'Z':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '[':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ']':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '^':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '_':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '`':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'a':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'b':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'c':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'd':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'e':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'f':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'g':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 1; v[1][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'h':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'i':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'j':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'k':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 1; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'l':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'm':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'n':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'o':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'p':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'q':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'r':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 's':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 't':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 1; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'u':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'v':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'w':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 1; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 1; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'x':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 1; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'y':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 1; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 'z':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 1; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 1; v[2][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 1; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 1; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '{':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 1; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 1; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 1; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '|':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 1; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 1; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '}':<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 1; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 1; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 1; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 1; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 1; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 1; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 1; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '\\': <a href="CppComment.htm">//</a>Own addition<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 1; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> '~': <a href="CppComment.htm">//</a>Own addition<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 1; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 1; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 1; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 1; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0][0] <a href="CppOperatorAssign.htm">=</a> 0; v[0][1] <a href="CppOperatorAssign.htm">=</a> 0; v[0][2] <a href="CppOperatorAssign.htm">=</a> 0; v[0][3] <a href="CppOperatorAssign.htm">=</a> 0; v[0][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1][0] <a href="CppOperatorAssign.htm">=</a> 0; v[1][1] <a href="CppOperatorAssign.htm">=</a> 0; v[1][2] <a href="CppOperatorAssign.htm">=</a> 0; v[1][3] <a href="CppOperatorAssign.htm">=</a> 0; v[1][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2][0] <a href="CppOperatorAssign.htm">=</a> 0; v[2][1] <a href="CppOperatorAssign.htm">=</a> 0; v[2][2] <a href="CppOperatorAssign.htm">=</a> 0; v[2][3] <a href="CppOperatorAssign.htm">=</a> 0; v[2][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3][0] <a href="CppOperatorAssign.htm">=</a> 0; v[3][1] <a href="CppOperatorAssign.htm">=</a> 0; v[3][2] <a href="CppOperatorAssign.htm">=</a> 0; v[3][3] <a href="CppOperatorAssign.htm">=</a> 0; v[3][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4][0] <a href="CppOperatorAssign.htm">=</a> 0; v[4][1] <a href="CppOperatorAssign.htm">=</a> 0; v[4][2] <a href="CppOperatorAssign.htm">=</a> 0; v[4][3] <a href="CppOperatorAssign.htm">=</a> 0; v[4][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5][0] <a href="CppOperatorAssign.htm">=</a> 0; v[5][1] <a href="CppOperatorAssign.htm">=</a> 0; v[5][2] <a href="CppOperatorAssign.htm">=</a> 0; v[5][3] <a href="CppOperatorAssign.htm">=</a> 0; v[5][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6][0] <a href="CppOperatorAssign.htm">=</a> 0; v[6][1] <a href="CppOperatorAssign.htm">=</a> 0; v[6][2] <a href="CppOperatorAssign.htm">=</a> 0; v[6][3] <a href="CppOperatorAssign.htm">=</a> 0; v[6][4] <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a pixel's RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Image is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap must be 24 bit");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is beyond image height");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> line<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
<br/>
&nbsp;&nbsp;line[x*3+2] <a href="CppOperatorAssign.htm">=</a> red;<br/>
&nbsp;&nbsp;line[x*3+1] <a href="CppOperatorAssign.htm">=</a> green;<br/>
&nbsp;&nbsp;line[x*3+0] <a href="CppOperatorAssign.htm">=</a> blue;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a line of pixels' RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Image is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap must be 24 bit");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x1 <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x1 coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x2 <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x2 coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x1 &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x1 coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x2 <a href="CppOperatorLessEqual.htm">&lt;=</a> image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x2 coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is beyond image height");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> myLine<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=x1; x<a href="CppOperatorNotEqual.htm">!=</a>x2; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+2] <a href="CppOperatorAssign.htm">=</a> red;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+1] <a href="CppOperatorAssign.htm">=</a> green;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+0] <a href="CppOperatorAssign.htm">=</a> blue;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>Set a square of pixels' RGB values<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> SetPixel(<br/>
&nbsp;&nbsp;Extctrls::<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=y1; y<a href="CppOperatorNotEqual.htm">!=</a>y2; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;SetPixel(image,x1,x2,y,red,green,blue);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormAbout.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormAbout.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitForm<a href="CppAbout.htm">About</a>H<br/>
<a href="CppDefine.htm">#define</a> UnitForm<a href="CppAbout.htm">About</a>H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TForm<a href="CppAbout.htm">About</a> : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRichEdit *RichEdit;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageAuthor;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelTop;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelTopRight;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelWebsite;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelLicence;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelDate;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelAuthor;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelCopyright;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *PanelTitle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TPanel *Panel<a href="CppVersion.htm">Version</a>;<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TForm<a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TForm<a href="CppAbout.htm">About</a> *Form<a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormAbout.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormAbout.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TForm<a href="CppAbout.htm">About</a> *Form<a href="CppAbout.htm">About</a>;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TForm<a href="CppAbout.htm">About</a>::TForm<a href="CppAbout.htm">About</a>(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormDraw.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormDraw.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormDrawH<br/>
<a href="CppDefine.htm">#define</a> UnitFormDrawH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppArray.htm">array</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormDraw : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageLeary;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBuffer1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> *ImageBuffer2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall FormResize(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt; buffers;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,8&gt; scores;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,8&gt; legend;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt; GetBuffers() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;__fastcall TFormDraw(<br/>
&nbsp;&nbsp;T<a href="CppComponent.htm">Component</a>* Owner,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,8&gt;&amp; <a href="CppAny.htm">any</a>_scores,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,8&gt;&amp; <a href="CppAny.htm">any</a>_legend);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormDraw *FormDraw;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> DrawLearyCircumplex(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,8&gt;&amp; scores,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,8&gt;&amp; legend,<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt;&amp; image_buffer);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetAngle.htm">GetAngle</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetAngle.htm">GetAngle</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dX, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dY);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppPaint.htm">Paint</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppPaint.htm">Paint</a>Vcl(<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue&nbsp;&nbsp;);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRotate.htm">Rotate</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> imageOriginal,<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> imageResult,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppSetPixelVcl.htm">SetPixelVcl</a>(<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetPixel.htm">GetPixel</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> TColor <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetPixel.htm">GetPixel</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_tl,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_tl,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> left,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> top,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> Translate(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dAngle,<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; dx2,<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; dy2);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormDraw.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormDraw.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCmathH.htm">cmath</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppArray.htm">array</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "UnitDot<a href="CppMatrix.htm">Matrix</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitFormDraw.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormDraw *FormDraw;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormDraw::TFormDraw(<br/>
&nbsp;&nbsp;T<a href="CppComponent.htm">Component</a>* Owner,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,8&gt;&amp; <a href="CppAny.htm">any</a>_scores,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,8&gt;&amp; <a href="CppAny.htm">any</a>_legend)<br/>
 : TForm(Owner),<br/>
&nbsp;&nbsp; scores(<a href="CppAny.htm">any</a>_scores),<br/>
&nbsp;&nbsp; legend(<a href="CppAny.htm">any</a>_legend),<br/>
&nbsp;&nbsp; buffers(GetBuffers())<br/>
{<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormDraw::FormResize(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;ImageLeary-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClientWidth;<br/>
&nbsp;&nbsp;ImageLeary-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> ClientHeight;<br/>
<br/>
&nbsp;&nbsp;DrawLearyCircumplex(scores,legend,ImageLeary,buffers);<br/>
<br/>
&nbsp;&nbsp;ImageLeary-&gt;Refresh();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt; TFormDraw::GetBuffers() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt; v;<br/>
&nbsp;&nbsp;v[0] <a href="CppOperatorAssign.htm">=</a> ImageBuffer1;<br/>
&nbsp;&nbsp;v[1] <a href="CppOperatorAssign.htm">=</a> ImageBuffer2;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>A score goes from 0.0 (none) to 1.0 (full)<br/>
<b><a href="CppVoid.htm">void</a></b> DrawLearyCircumplex(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,8&gt;&amp; scores,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,8&gt;&amp; legend,<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppTImage.htm">TImage</a>*,2&gt;&amp; image_buffer)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Determine image dimensions<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> image_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> image_height <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> image_size <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(100,<a href="CppStdMin.htm">std::min</a>(image_width,image_height));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Make image a square<br/>
&nbsp;&nbsp;image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> image_size;<br/>
&nbsp;&nbsp;image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> image_size;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calculate image center and circumplex ray<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midx <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(image_size) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(image_size) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ray <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(midx,midy) <a href="CppOperatorMinus.htm">-</a> 2.0 <a href="CppOperatorMinus.htm">-</a> 16.0;<br/>
<br/>
&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Pen-&gt;Color <a href="CppOperatorAssign.htm">=</a> clBlack;<br/>
<br/>
&nbsp;&nbsp;<a href="CppPaint.htm">Paint</a>Vcl(image,255,255,255); <a href="CppComment.htm">//</a>White background<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create the vertices<br/>
&nbsp;&nbsp;<a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdPair.htm">std::pair</a>&lt;<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>&gt;,8&gt; vertices; <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>i) <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) * <a href="CppM_PI.htm">M_PI</a> * 0.25;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdSin.htm">std::sin</a>(angle) * ray));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorMinus.htm">-</a> (<a href="CppStdCos.htm">std::cos</a>(angle) * ray));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;vertices[i] <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMake_pair.htm">std::make_pair</a>(x,y);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the perimeter<br/>
&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;PenPos <a href="CppOperatorAssign.htm">=</a> TPoint(vertices[7].first,vertices[7].second);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>i) <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;LineTo(vertices[i].first,vertices[i].second);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the pie pieces<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>i) <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;PenPos <a href="CppOperatorAssign.htm">=</a> TPoint(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx),<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midy));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;LineTo(vertices[i].first,vertices[i].second);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the scores<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>i) <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) * <a href="CppM_PI.htm">M_PI</a> * 0.25;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdSin.htm">std::sin</a>(angle1) * ray * scores[i]));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorMinus.htm">-</a> (<a href="CppStdCos.htm">std::cos</a>(angle1) * ray * scores[i]));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i+1) * <a href="CppM_PI.htm">M_PI</a> * 0.25;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdSin.htm">std::sin</a>(angle2) * ray * scores[i]));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorMinus.htm">-</a> (<a href="CppStdCos.htm">std::cos</a>(angle2) * ray * scores[i]));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;MoveTo(x1,y1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;LineTo(x2,y2);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the legend<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_<b><a href="CppChar.htm">char</a></b>s <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> char_width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 6;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> char_height <a href="CppOperatorAssign.htm">=</a> 8;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> text_ray<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ray <a href="CppOperatorPlus.htm">+</a> ( <a href="CppStdSqrt.htm">std::sqrt</a>(2.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdMax.htm">std::max</a>(char_width,char_height)) );<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Resize the image_buffer1 to hold a rotated legend<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> image_buffer_size<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 2.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_<b><a href="CppChar.htm">char</a></b>s * <a href="CppStdMax.htm">std::max</a>(char_width,char_height));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> image_buffer_size<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdSqrt.htm">std::sqrt</a>(2.0)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_<b><a href="CppChar.htm">char</a></b>s * <a href="CppStdMax.htm">std::max</a>(char_width,char_height));<br/>
&nbsp;&nbsp;image_buffer[0]-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> image_buffer_size;<br/>
&nbsp;&nbsp;image_buffer[0]-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> image_buffer_size;<br/>
&nbsp;&nbsp;image_buffer[1]-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> image_buffer_size;<br/>
&nbsp;&nbsp;image_buffer[1]-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorAssign.htm">=</a> image_buffer_size;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top_left_x <a href="CppOperatorAssign.htm">=</a> (image_buffer_size <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> char_width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> top_left_y <a href="CppOperatorAssign.htm">=</a> (image_buffer_size <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> (char_height <a href="CppOperatorDivide.htm">/</a> 2);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>8; <a href="CppOperatorIncrement.htm">++</a>i) <a href="CppComment.htm">//</a>8 <a href="CppOperatorEqual.htm">==</a> n_scores<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put text on image_buffer1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( top_left_x <a href="CppOperatorPlus.htm">+</a> char_width <a href="CppOperatorPlus.htm">+</a> char_width<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt; image_buffer[0]-&gt;Picture-&gt;Bitmap-&gt;Width<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Text must fit on the image");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( top_left_y <a href="CppOperatorPlus.htm">+</a> char_height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt; image_buffer[0]-&gt;Picture-&gt;Bitmap-&gt;Height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Text must fit on the image");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(legend[i].size() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Dot<a href="CppMatrix.htm">Matrix</a>(image_buffer[0],top_left_x,top_left_y,legend[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw rotated text on image_buffer2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> text_angle<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (0.175 * <a href="CppM_PI.htm">M_PI</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) * 0.25 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRotate.htm">Rotate</a>(image_buffer[0],image_buffer[1],text_angle);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove black corners on rotated image<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Brush-&gt;Color <a href="CppOperatorAssign.htm">=</a> clWhite;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;FloodFill(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clBlack,fsSurface);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;FloodFill(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,image_buffer_size-1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clBlack,fsSurface);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;FloodFill(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_buffer_size-1,0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clBlack,fsSurface);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;FloodFill(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_buffer_size-1,image_buffer_size-1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clBlack,fsSurface);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw rotated text on image<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (<a href="CppM_PI.htm">M_PI</a> * 0.125)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(i) * <a href="CppM_PI.htm">M_PI</a> * 0.25);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> text_mid_x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorPlus.htm">+</a> (<a href="CppStdSin.htm">std::sin</a>(angle) * text_ray));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> text_mid_y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(midx <a href="CppOperatorMinus.htm">-</a> (<a href="CppStdCos.htm">std::cos</a>(angle) * text_ray));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> text_top_left_x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> text_mid_x <a href="CppOperatorMinus.htm">-</a> (image_buffer_size <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> text_top_left_y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> text_mid_y <a href="CppOperatorMinus.htm">-</a> (image_buffer_size <a href="CppOperatorDivide.htm">/</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;image-&gt;<a href="CppCanvas.htm">Canvas</a>-&gt;Draw(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_top_left_x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text_top_left_y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image_buffer[1]-&gt;Picture-&gt;Graphic);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppPaint.htm">Paint</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppPaint.htm">Paint</a>Vcl(<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue&nbsp;&nbsp;)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap <a href="CppOperatorNotEqual.htm">!=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> image-&gt;Picture-&gt;Bitmap-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0; y <a href="CppOperatorNotEqual.htm">!=</a> maxy; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> myLine<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0; x <a href="CppOperatorNotEqual.htm">!=</a> maxx; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+2] <a href="CppOperatorAssign.htm">=</a> red&nbsp;&nbsp;; <a href="CppComment.htm">//</a>Red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+1] <a href="CppOperatorAssign.htm">=</a> green; <a href="CppComment.htm">//</a>Green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myLine[x*3+0] <a href="CppOperatorAssign.htm">=</a> blue ; <a href="CppComment.htm">//</a>Blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetAngle.htm">GetAngle</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <a href="CppGetAngle.htm">GetAngle</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dX, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dY)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>In which quadrant are we?<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (dX &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (dY &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Quadrant IV<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &gt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (1.0 * <a href="CppM_PI.htm">M_PI</a>) <a href="CppOperatorMinus.htm">-</a> <a href="CppStdAtan.htm">std::atan</a>(dX <a href="CppOperatorDivide.htm">/</a> dY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(angle &gt; 0.5 * <a href="CppM_PI.htm">M_PI</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> angle &lt; 1.0 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (dY &lt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &gt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorLessEqual.htm">&lt;=</a> 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Quadrant I<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &gt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &lt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (0.0 * <a href="CppM_PI.htm">M_PI</a>) <a href="CppOperatorMinus.htm">-</a> <a href="CppStdAtan.htm">std::atan</a>(dX <a href="CppOperatorDivide.htm">/</a> dY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(angle &gt; 0.0 * <a href="CppM_PI.htm">M_PI</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> angle &lt; 0.5 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &gt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>On Y-axis, right side<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &gt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (0.5 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (dX &lt; 0.0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (dY &gt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Quadrant III<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &lt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (1.0 * <a href="CppM_PI.htm">M_PI</a>) <a href="CppOperatorMinus.htm">-</a> <a href="CppStdAtan.htm">std::atan</a>(dX <a href="CppOperatorDivide.htm">/</a> dY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(angle &gt; 1.0 * <a href="CppM_PI.htm">M_PI</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> angle &lt; 1.5 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (dY &lt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &lt; 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Quadrant II<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &lt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &lt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (2.0 * <a href="CppM_PI.htm">M_PI</a>) <a href="CppOperatorMinus.htm">-</a> <a href="CppStdAtan.htm">std::atan</a>(dX <a href="CppOperatorDivide.htm">/</a> dY);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(angle &gt; 1.5 * <a href="CppM_PI.htm">M_PI</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> angle &lt; 2.0 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX &lt; 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>On X-axis<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX &lt; 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (1.5 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (dY &gt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>On Y-axis, right side of origin<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX<a href="CppOperatorEqual.htm">==</a>0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &gt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (1.0 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (dY &lt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &lt; 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>On Y-axis, left side of origin<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX<a href="CppOperatorEqual.htm">==</a>0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY &lt; 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (0.0 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>dX <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>On origin<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dX<a href="CppOperatorEqual.htm">==</a>0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> dY <a href="CppOperatorEqual.htm">==</a> 0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> (0.0 * <a href="CppM_PI.htm">M_PI</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppSetPixelVcl.htm">SetPixelVcl</a>(<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> red,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> green,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> blue)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Image is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap must be 24 bit");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is beyond image height");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+2] <a href="CppOperatorAssign.htm">=</a> red;<br/>
&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+1] <a href="CppOperatorAssign.htm">=</a> green;<br/>
&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+0] <a href="CppOperatorAssign.htm">=</a> blue;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetPixel.htm">GetPixel</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> TColor <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Image is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap must be 24 bit");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is beyond image height");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;TColor&gt;(RGB(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+2]), <a href="CppComment.htm">//</a>Red<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+1]), <a href="CppComment.htm">//</a>Green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+0])&nbsp;&nbsp;<a href="CppComment.htm">//</a>Blue<br/>
&nbsp;&nbsp;&nbsp;&nbsp;));<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetPixel.htm">GetPixel</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Image is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap<a href="CppOperatorNotEqual.htm">!=</a>0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap is <a href="CppNULL.htm">NULL</a>");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat <a href="CppOperatorEqual.htm">==</a> pf24bit <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Bitmap must be 24 bit");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is below zero");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( x &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "x coordinat is beyond image width");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "y coordinat is beyond image height");<br/>
&nbsp;&nbsp;red&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+2]);<br/>
&nbsp;&nbsp;green <a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+1]);<br/>
&nbsp;&nbsp;blue&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y])[x*3+0]);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRotate.htm">Rotate</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> imageOriginal,<br/>
&nbsp;&nbsp;<a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> imageResult,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> imageResult-&gt;Picture-&gt;Bitmap-&gt;Width;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> imageResult-&gt;Picture-&gt;Bitmap-&gt;Height;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midx <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(maxx) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> midy <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(maxy) <a href="CppOperatorDivide.htm">/</a> 2.0;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>maxy; <a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>maxx; <a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(x) <a href="CppOperatorMinus.htm">-</a> midx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(y) <a href="CppOperatorMinus.htm">-</a> midy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> dx2, dy2; <a href="CppComment.htm">//</a>Coordinats in original<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Translate(dx1,dy1,angle,dx2,dy2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2 <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(imageOriginal-&gt;Picture-&gt;Bitmap-&gt;Width ) <a href="CppOperatorDivide.htm">/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0) <a href="CppOperatorPlus.htm">+</a> dx2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2 <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(imageOriginal-&gt;Picture-&gt;Bitmap-&gt;Height) <a href="CppOperatorDivide.htm">/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0) <a href="CppOperatorPlus.htm">+</a> dy2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( x2 &lt; 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> y2 &lt; 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> x2 <a href="CppOperatorGreaterEqual.htm">&gt;=</a> imageOriginal-&gt;Picture-&gt;Bitmap-&gt;Width <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> y2 <a href="CppOperatorGreaterEqual.htm">&gt;=</a> imageOriginal-&gt;Picture-&gt;Bitmap-&gt;Height <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Out of range<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSetPixelVcl.htm">SetPixelVcl</a>(imageResult,x,y,0,0,0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r,g,b;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppGetPixel.htm">GetPixel</a>(imageOriginal,x2,y2,r,g,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSetPixelVcl.htm">SetPixelVcl</a>(imageResult,x,y,r,g,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> xRemainder <a href="CppOperatorAssign.htm">=</a> x <a href="CppOperatorMinus.htm">-</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(x);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> yRemainder <a href="CppOperatorAssign.htm">=</a> y <a href="CppOperatorMinus.htm">-</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(y);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_tl <a href="CppOperatorAssign.htm">=</a> ( xRemainder &gt; 0.5 ? x : x-1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_tl <a href="CppOperatorAssign.htm">=</a> ( yRemainder &gt; 0.5 ? y : y-1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> left <a href="CppOperatorAssign.htm">=</a> ( xRemainder &gt; 0.5 ? 1.5 <a href="CppOperatorMinus.htm">-</a> xRemainder : 0.5 <a href="CppOperatorMinus.htm">-</a><br/>
&nbsp;&nbsp;xRemainder);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> top&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ( yRemainder &gt; 0.5 ? 1.5 <a href="CppOperatorMinus.htm">-</a> yRemainder : 0.5 <a href="CppOperatorMinus.htm">-</a><br/>
&nbsp;&nbsp;yRemainder);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppGetPixel.htm">GetPixel</a>(image,x_tl,y_tl,left,top,red,green,blue);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppGetPixel.htm">GetPixel</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b> image,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_tl,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y_tl,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> left,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> top,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; red,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; green,<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&amp; blue)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> right <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorMinus.htm">-</a> left;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> bottom <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorMinus.htm">-</a> top;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(left&nbsp;&nbsp; <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> left&nbsp;&nbsp; <a href="CppOperatorLessEqual.htm">&lt;=</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> top&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLessEqual.htm">&lt;=</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(right&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> right&nbsp;&nbsp;<a href="CppOperatorLessEqual.htm">&lt;=</a>1.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(bottom <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> bottom <a href="CppOperatorLessEqual.htm">&lt;=</a>1.0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r_tl, g_tl, b_tl;<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r_tr, g_tr, b_tr;<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r_bl, g_bl, b_bl;<br/>
&nbsp;&nbsp;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> r_br, g_br, b_br;<br/>
<br/>
&nbsp;&nbsp;<a href="CppGetPixel.htm">GetPixel</a>(image,x_tl+0,y_tl+0,r_tl,g_tl,b_tl);<br/>
&nbsp;&nbsp;<a href="CppGetPixel.htm">GetPixel</a>(image,x_tl+1,y_tl+0,r_tr,g_tr,b_tr);<br/>
&nbsp;&nbsp;<a href="CppGetPixel.htm">GetPixel</a>(image,x_tl+0,y_tl+1,r_bl,g_bl,b_bl);<br/>
&nbsp;&nbsp;<a href="CppGetPixel.htm">GetPixel</a>(image,x_tl+1,y_tl+1,r_br,g_br,b_br);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> rTotal<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(r_tl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(r_tr))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(r_bl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(r_br));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> gTotal<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(g_tl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(g_tr))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(g_bl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(g_br));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> bTotal<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(b_tl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (top&nbsp;&nbsp;&nbsp;&nbsp;* right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(b_tr))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * left&nbsp;&nbsp;* <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(b_bl))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> (bottom * right * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(b_br));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rTotal <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> rTotal &lt; 256.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(gTotal <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> gTotal &lt; 256.0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(bTotal <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> bTotal &lt; 256.0);<br/>
&nbsp;&nbsp;red&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&gt;(rTotal);<br/>
&nbsp;&nbsp;green <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&gt;(gTotal);<br/>
&nbsp;&nbsp;blue&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>&gt;(bTotal);<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppRotate.htm">Rotate</a>.htm<br/>
<b><a href="CppVoid.htm">void</a></b> Translate(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dAngle,<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; dx2,<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b>&amp; dy2)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> oldAngle <a href="CppOperatorAssign.htm">=</a> <a href="CppGetAngle.htm">GetAngle</a>(dx1,dy1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> <b><a href="CppNew.htm">new</a></b>Angle <a href="CppOperatorAssign.htm">=</a> oldAngle <a href="CppOperatorMinus.htm">-</a> dAngle; <a href="CppComment.htm">//</a>NEW: Must be a minus to rotate clockwise<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> ray <a href="CppOperatorAssign.htm">=</a> <a href="CppStdSqrt.htm">std::sqrt</a>((dx1 * dx1) <a href="CppOperatorPlus.htm">+</a> (dy1 * dy1)); <a href="CppComment.htm">//</a>Pythagoras<br/>
&nbsp;&nbsp;dx2 <a href="CppOperatorAssign.htm">=</a> <a href="CppStdSin.htm">std::sin</a>(<b><a href="CppNew.htm">new</a></b>Angle) * ray;<br/>
&nbsp;&nbsp;dy2 <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppStdCos.htm">std::cos</a>(<b><a href="CppNew.htm">new</a></b>Angle) * ray;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormMain.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormMain.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> UnitFormMainH<br/>
<a href="CppDefine.htm">#define</a> UnitFormMainH<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppClass.htm">Classes</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Controls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;StdCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Forms.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ComCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Grids.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ValEdit.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ExtCtrls.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Graphics.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;Dialogs.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<b><a href="CppStruct.htm">struct</a></b> TFormDraw;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.htm">class</a></b> TFormMain : <b><a href="CppPublic.htm">public</a></b> TForm<br/>
{<br/>
__published:	<a href="CppComment.htm">//</a> IDE-managed <a href="CppComponent.htm">Component</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TValueListEditor *Editor1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *ButtonDraw;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *ButtonSave;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TButton *Button<a href="CppAbout.htm">About</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TSaveDialog *SaveDialog1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall ButtonDrawClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall ButtonSaveClick(TObject *Sender);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> __fastcall Button<a href="CppAbout.htm">About</a>Click(TObject *Sender);<br/>
<b><a href="CppPrivate.htm">private</a></b>:	<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;TFormDraw&gt; form_leary;<br/>
<b><a href="CppPublic.htm">public</a></b>:		<a href="CppComment.htm">//</a> User <a href="CppDeclaration.htm">declaration</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__fastcall TFormMain(T<a href="CppComponent.htm">Component</a>* Owner);<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppExtern.htm">extern</a></b> PACKAGE TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolLearyCircumplex/UnitFormMain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolLearyCircumplex/UnitFormMain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;Leary Circumplex, <a href="Tools.htm">tool</a> to draw a Leary circumplex<br/>
&nbsp;&nbsp;Copyright (C) 2009&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
&nbsp;&nbsp;This program is free software: you can redistribute it and/or modify<br/>
&nbsp;&nbsp;it under the terms of the GNU General Public License as published by<br/>
&nbsp;&nbsp;the Free Software Foundation, either version 3 of the License, or<br/>
&nbsp;&nbsp;(at your option) any later version.<br/>
<br/>
&nbsp;&nbsp;This program is distributed in the hope that it will be useful,<br/>
&nbsp;&nbsp;but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
&nbsp;&nbsp;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
&nbsp;&nbsp;GNU General Public License for more details.<br/>
&nbsp;&nbsp;You should have received a copy of the GNU General Public License<br/>
&nbsp;&nbsp;along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;vcl.h&gt;<br/>
<a href="CppPragma.htm">#pragma</a> hdrstop<br/>
<br/>
<a href="CppInclude.htm">#include</a> "UnitFormMain.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitFormDraw.h"<br/>
<a href="CppInclude.htm">#include</a> "UnitForm<a href="CppAbout.htm">About</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> package(smart_init)<br/>
<a href="CppPragma.htm">#pragma</a> resource "*.dfm"<br/>
TFormMain *FormMain;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
__fastcall TFormMain::TFormMain(T<a href="CppComponent.htm">Component</a>* Owner)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: TForm(Owner)<br/>
{<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::ButtonDrawClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_scores <a href="CppOperatorAssign.htm">=</a> 8;<br/>
&nbsp;&nbsp;<a href="CppBoostArray.htm">boost::array</a>&lt;<b><a href="CppDouble.htm">double</a></b>,n_scores&gt; scores;<br/>
&nbsp;&nbsp;<a href="CppBoostArray.htm">boost::array</a>&lt;<a href="CppStdString.htm">std::string</a>,n_scores&gt; legend;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_scores; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;legend[i] <a href="CppOperatorAssign.htm">=</a> Editor1-&gt;Cells[0][i+1].c_str();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> score <a href="CppOperatorAssign.htm">=</a> Editor1-&gt;Cells[1][i+1].<a href="CppToDouble.htm">ToDouble</a>(); <a href="CppComment.htm">//</a>+1 due to 1 fixed row<br/>
&nbsp;&nbsp;&nbsp;&nbsp;scores[i] <a href="CppOperatorAssign.htm">=</a> score <a href="CppOperatorDivide.htm">/</a> 10.0; <a href="CppComment.htm">//</a>In the Netherlands, scores range from [0.0,10.0]<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;form_leary.reset(<b><a href="CppNew.htm">new</a></b> TFormDraw(0,scores,legend));<br/>
&nbsp;&nbsp;form_leary-&gt;Show();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::ButtonSaveClick(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!form_leary) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!SaveDialog1-&gt;Execute()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;form_leary-&gt;ImageLeary-&gt;Picture-&gt;SaveToFile(SaveDialog1-&gt;FileName);<br/>
&nbsp;&nbsp;ShowMessage("Image saved as " <a href="CppOperatorPlus.htm">+</a> SaveDialog1-&gt;FileName);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> __fastcall TFormMain::Button<a href="CppAbout.htm">About</a>Click(TObject *Sender)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;TForm<a href="CppAbout.htm">About</a>&gt; f(<b><a href="CppNew.htm">new</a></b> TForm<a href="CppAbout.htm">About</a>(0));<br/>
&nbsp;&nbsp;f-&gt;ShowModal();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
