<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestQtModels</title>
  <meta name="description" content="C++ TestQtModels"/>
  <meta name="keywords" content="C++ TestQtModels "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestQtModels.htm">TestQtModels</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.687 at Tue Aug 12 15:44:54 2014
 -->
<p><a href="ToolTestQtModels.htm">TestQtModels</a> is a <a href="Tools.htm">tool</a> to test my model classes.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolTestQtModels_1_2.png">View a screenshot of 'TestQtModels' (version 1.2)(png)</a></li>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestQtModels_1_0.png">View a screenshot of 'TestQtModels' (version 1.0)(png)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicConsole.png" alt="Console"/> <a href="ToolTestQtModelsConsoleExe.zip">Download the 'TestQtModels' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestQtModelsDesktopExe.zip">Download the 'TestQtModels' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicWindows.png" alt="Windows"/><img src="PicWeb.png" alt="Web"/> <a href="ToolTestQtModelsWebsiteExe.zip">Download the 'TestQtModels' Windows executable (latest version)(zip)</a></li>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="ToolTestQtModelsSource_1_0.zip">Download the 'TestQtModels' source code (version 1.0)(zip)</a></li>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="ToolTestQtModelsSource_1_0.htm">View the 'TestQtModels' source code as web page (version 1.0)(htm)</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.04 (trusty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ToolTestQtModels/ToolTestQtModelsDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/ToolTestQtModelsDesktop.pro" border = "1"><tr><td><code>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppFparser.htm">Fparser</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppQwt.htm">Qwt</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralConsole.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/GeneralDesktop.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtMatrix.htm">CppQtMatrix</a>/<a href="CppQtMatrix.htm">CppQtMatrix</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtModel.htm">CppQtModel</a>/<a href="CppQtModel.htm">CppQtModel</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMatrix.htm">CppMatrix</a>/<a href="CppMatrix.htm">CppMatrix</a>.pri)<br/>
include(<a href="ToolTestQtModels.htm">ToolTestQtModels</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/ToolTestQtModelsConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/ToolTestQtModelsConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/ToolTestQtModelsDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/ToolTestQtModelsDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>Console.pri)<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a><a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a><a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.cpp<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a><a href="CppMain.htm">main</a>dialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/ToolTestQtModelsWebsite.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/ToolTestQtModelsWebsite.pri" border = "1"><tr><td><code>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>Console.pri)<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/qtmain.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/qttestqtmodelsmaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/qttestqtmodelsmaindialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTOOLTESTQTMODELSMAINDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTTOOLTESTQTMODELSMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_data_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_headers_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> CreateRandomText();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; CreateRandomTexts();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTOOLTESTQTMODELSMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/qttestqtmodelsmaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/qttestqtmodelsmaindialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtModels.htm">testqtmodels</a>maindialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppMatrix.htm">matrix</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtUblasMatrixDoubleModel.htm">qtublasmatrixdoublemodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtUblasVectorDoubleModel.htm">qtublasvectordoublemodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppUblas.htm">ublas</a>vectorintmodel.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtStdVectorFunctionModel.htm">qtstdvectorfunctionmodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtStdVectorStringModel.htm">qtstdvectorstringmodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestQtModels.htm">testqtmodels</a>maindialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::CreateRandomText()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> s;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> t <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>,<b><a href="CppChar.htm">char</a></b>&gt;('a' <a href="CppOperatorPlus.htm">+</a> <a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 26);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorPlusAssign.htm">+=</a> t;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::CreateRandomTexts()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> CreateRandomText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_data_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_type-&gt;currentIndex();<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtStdVectorStringModel.htm">QtStdVectorStringModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData(v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> variable <a href="CppOperatorAssign.htm">=</a> "x";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtStdVectorFunctionModel.htm">QtStdVectorFunctionModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model(variable);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " * " <a href="CppOperatorPlus.htm">+</a> variable;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData(v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtUblasMatrixDoubleModel.htm">QtUblasMatrixDoubleModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUblasMatrix.htm">boost::numeric::ublas::matrix</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; m(n_rows,n_cols);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> row=0; row<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>row)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> col=0; col<a href="CppOperatorNotEqual.htm">!=</a>n_cols; <a href="CppOperatorIncrement.htm">++</a>col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m(row,col) <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData(m);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt; v(sz);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppBoostNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v(i) <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData(v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 4:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQt.htm">Qt</a>UblasVectorIntModel Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> (<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> 4) <a href="CppOperatorModulus.htm">%</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUblasVector.htm">boost::numeric::ublas::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v(sz);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> <a href="CppStdRand.htm">std::rand</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v(i) <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData(v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_data_clicked: Unimplemented ui-&gt;box_type-&gt;currentIndex()");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_data_clicked: Unimplemented ui-&gt;box_type-&gt;currentIndex()");<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_headers_clicked()<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_type-&gt;currentIndex();<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtStdVectorStringModel.htm">QtStdVectorStringModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> CreateRandomText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetHeaderData(h,v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> variable <a href="CppOperatorAssign.htm">=</a> "x";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtStdVectorFunctionModel.htm">QtStdVectorFunctionModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model(variable);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> CreateRandomText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetHeaderData(h,v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtUblasMatrixDoubleModel.htm">QtUblasMatrixDoubleModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; w <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetHeaderData(v,w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> CreateRandomText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetHeaderData(h,v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 4:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQt.htm">Qt</a>UblasVectorIntModel Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model * <b><a href="CppConst.htm">const</a></b> model<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;Model *&gt;(ui-&gt;table-&gt;model())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b><a href="CppNew.htm">new</a></b> Model;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> CreateRandomText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> CreateRandomTexts();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetHeaderData(h,v);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setModel(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_headers_clicked: Unimplemented ui-&gt;box_type-&gt;currentIndex()");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::on_button_headers_clicked: Unimplemented ui-&gt;box_type-&gt;currentIndex()");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a> * <b><a href="CppConst.htm">const</a></b> model <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(model);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( { 1.1, 2.2, 3.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.2, 3.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( { 1.1, 2.2, 3.3, 4.4 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;model-&gt;SetRawData( <a href="CppMatrix.htm">Matrix</a>::<a href="CppCreateVector.htm">CreateVector</a>( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) );<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test of dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_types <a href="CppOperatorAssign.htm">=</a> d.ui-&gt;box_type-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_types; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_type-&gt;setCurrentIndex(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> 10;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_data-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_headers-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_headers-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_data-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_data-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_headers-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/qttestqtmodelsmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/qttestqtmodelsmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTOOLTESTQTMODELSMENUDIALOG<br/>
<a href="CppDefine.htm">#define</a> QTTOOLTESTQTMODELSMENUDIALOG<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog *ui;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTOOLTESTQTMODELSMENUDIALOG<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/qttestqtmodelsmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/qttestqtmodelsmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtStdVectorFunctionModel.htm">qtstdvectorfunctionmodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtStdVectorStringModel.htm">qtstdvectorstringmodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtModels.htm">testqtmodels</a>maindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="CppUblas.htm">ublas</a>vectorintmodel.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtUblasMatrixDoubleModel.htm">qtublasmatrixdoublemodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtUblasVectorDoubleModel.htm">qtublasvectordoublemodel</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qt<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::~<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a <a href="CppOperatorAssign.htm">=</a> <a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtStdVectorFunctionModel.htm">QtStdVectorFunctionModel</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtStdVectorFunctionModel.htm">QtStdVectorFunctionModel</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtStdVectorStringModel.htm">QtStdVectorStringModel</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtStdVectorStringModel.htm">QtStdVectorStringModel</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtUblasMatrixDoubleModel.htm">QtUblasMatrixDoubleModel</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtUblasMatrixDoubleModel.htm">QtUblasMatrixDoubleModel</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtUblasVectorDoubleModel.htm">QtUblasVectorDoubleModel</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQt.htm">Qt</a>UblasVectorIntModel <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQt.htm">Qt</a>UblasVectorIntModel::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.htm">QtAboutDialog</a> d(a);<br/>
&nbsp;&nbsp;d.setWindowIcon(<b><a href="CppThis.htm">this</a></b>-&gt;windowIcon());<br/>
&nbsp;&nbsp;d.setStyleSheet(<b><a href="CppThis.htm">this</a></b>-&gt;styleSheet());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::on_button_start_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog d;<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtModels.htm">ToolTestQtModels</a>MainDialog();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/testqtmodelsmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/testqtmodelsmenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> TOOLTESTQTMODELSMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> TOOLTESTQTMODELSMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog <b><a href="CppFinal.htm">final</a></b> : <b><a href="CppPublic.htm">public</a></b> MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> TOOLTESTQTMODELSMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/testqtmodelsmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/testqtmodelsmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolTestQtModels.htm">TestQtModels</a>, <a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b><br/>
Copyright (C) 2013-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="ToolTestQtModels.htm">testqtmodels</a>menudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ToolTestQtModels.htm">TestQtModels</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to test the <a href="CppQt.htm">Qt</a>Model <b><a href="CppClass.htm">classes</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 27th of June 2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-2014",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTrace.htm">Trace</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.htm">Trace</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtModels.htm">TestQtModels</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.2";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-05-15: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-06-27: <a href="CppVersion.htm">version</a> 1.1: added <a href="CppQt.htm">Qt</a>UblasVectorIntModel",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-11-05: <a href="CppVersion.htm">version</a> 1.2: conformized <b><a href="CppFor.htm">for</a></b> <a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Console"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="ToolTestQtModels.htm">ToolTestQtModels</a>MenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ToolTestQtModels/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ToolTestQtModels/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
<br/>
echo "Removing user information"<br/>
rm *.user<br/>
<br/>
echo "Removing possible temp file"<br/>
rm copy.txt<br/>
rm tmp.txt<br/>
<br/>
<br/>
echo "Creating of all main folders"<br/>
<br/>
mkdir temp_zip<br/>
mkdir temp_zip/Classes<br/>
mkdir temp_zip/Libraries<br/>
mkdir temp_zip/Tools<br/>
<br/>
echo "Creating of all subfolders"<br/>
<br/>
mkdir temp_zip/Classes/CppAbout<br/>
mkdir temp_zip/Classes/CppMatrix<br/>
mkdir temp_zip/Classes/CppQtAboutDialog<br/>
mkdir temp_zip/Classes/CppQtHideAndShowDialog<br/>
mkdir temp_zip/Classes/CppQtModel<br/>
mkdir temp_zip/Classes/CppTrace<br/>
mkdir temp_zip/Libraries/fparser4.4.3<br/>
mkdir temp_zip/Libraries/fparser4.4.3/extrasrc<br/>
mkdir temp_zip/Libraries/fparser4.5.1<br/>
mkdir temp_zip/Libraries/fparser4.5.1/extrasrc<br/>
mkdir temp_zip/Tools/Classes<br/>
mkdir temp_zip/Tools/ToolTestQtModels<br/>
<br/>
echo "Copying files"<br/>
<br/>
cp ../../Classes/CppAbout/Licence.txt temp_zip/Classes/CppAbout/Licence.txt<br/>
cp ../../Classes/CppAbout/about.cpp temp_zip/Classes/CppAbout/about.cpp<br/>
cp ../../Classes/CppAbout/about.h temp_zip/Classes/CppAbout/about.h<br/>
cp ../../Classes/CppMatrix/Licence.txt temp_zip/Classes/CppMatrix/Licence.txt<br/>
cp ../../Classes/CppMatrix/matrix.cpp temp_zip/Classes/CppMatrix/matrix.cpp<br/>
cp ../../Classes/CppMatrix/matrix.h temp_zip/Classes/CppMatrix/matrix.h<br/>
cp ../../Classes/CppQtAboutDialog/Licence.txt temp_zip/Classes/CppQtAboutDialog/Licence.txt<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.cpp temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.cpp<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.h temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.ui temp_zip/Classes/CppQtAboutDialog/qtaboutdialog.ui<br/>
cp ../../Classes/CppQtHideAndShowDialog/Licence.txt temp_zip/Classes/CppQtHideAndShowDialog/Licence.txt<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp temp_zip/Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.h temp_zip/Classes/CppQtHideAndShowDialog/qthideandshowdialog.h<br/>
cp ../../Classes/CppQtModel/Licence.txt temp_zip/Classes/CppQtModel/Licence.txt<br/>
cp ../../Classes/CppQtModel/qtstdvectorfunctionmodel.cpp temp_zip/Classes/CppQtModel/qtstdvectorfunctionmodel.cpp<br/>
cp ../../Classes/CppQtModel/qtstdvectorfunctionmodel.h temp_zip/Classes/CppQtModel/qtstdvectorfunctionmodel.h<br/>
cp ../../Classes/CppQtModel/qtstdvectorstringmodel.cpp temp_zip/Classes/CppQtModel/qtstdvectorstringmodel.cpp<br/>
cp ../../Classes/CppQtModel/qtstdvectorstringmodel.h temp_zip/Classes/CppQtModel/qtstdvectorstringmodel.h<br/>
cp ../../Classes/CppQtModel/qtublasmatrixdoublemodel.cpp temp_zip/Classes/CppQtModel/qtublasmatrixdoublemodel.cpp<br/>
cp ../../Classes/CppQtModel/qtublasmatrixdoublemodel.h temp_zip/Classes/CppQtModel/qtublasmatrixdoublemodel.h<br/>
cp ../../Classes/CppQtModel/qtublasvectordoublemodel.cpp temp_zip/Classes/CppQtModel/qtublasvectordoublemodel.cpp<br/>
cp ../../Classes/CppQtModel/qtublasvectordoublemodel.h temp_zip/Classes/CppQtModel/qtublasvectordoublemodel.h<br/>
cp ../../Classes/CppTrace/Licence.txt temp_zip/Classes/CppTrace/Licence.txt<br/>
cp ../../Classes/CppTrace/trace.h temp_zip/Classes/CppTrace/trace.h<br/>
cp ../../Libraries/fparser4.4.3/extrasrc/fp_identifier_parser.inc temp_zip/Libraries/fparser4.4.3/extrasrc/fp_identifier_parser.inc<br/>
cp ../../Libraries/fparser4.4.3/extrasrc/fp_opcode_add.inc temp_zip/Libraries/fparser4.4.3/extrasrc/fp_opcode_add.inc<br/>
cp ../../Libraries/fparser4.4.3/extrasrc/fpaux.hh temp_zip/Libraries/fparser4.4.3/extrasrc/fpaux.hh<br/>
cp ../../Libraries/fparser4.4.3/extrasrc/fptypes.hh temp_zip/Libraries/fparser4.4.3/extrasrc/fptypes.hh<br/>
cp ../../Libraries/fparser4.4.3/fparser.cc temp_zip/Libraries/fparser4.4.3/fparser.cc<br/>
cp ../../Libraries/fparser4.4.3/fparser.hh temp_zip/Libraries/fparser4.4.3/fparser.hh<br/>
cp ../../Libraries/fparser4.4.3/fpconfig.hh temp_zip/Libraries/fparser4.4.3/fpconfig.hh<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fp_identifier_parser.inc temp_zip/Libraries/fparser4.5.1/extrasrc/fp_identifier_parser.inc<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fp_opcode_add.inc temp_zip/Libraries/fparser4.5.1/extrasrc/fp_opcode_add.inc<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fpaux.hh temp_zip/Libraries/fparser4.5.1/extrasrc/fpaux.hh<br/>
cp ../../Libraries/fparser4.5.1/extrasrc/fptypes.hh temp_zip/Libraries/fparser4.5.1/extrasrc/fptypes.hh<br/>
cp ../../Libraries/fparser4.5.1/fparser.cc temp_zip/Libraries/fparser4.5.1/fparser.cc<br/>
cp ../../Libraries/fparser4.5.1/fparser.hh temp_zip/Libraries/fparser4.5.1/fparser.hh<br/>
cp ../../Libraries/fparser4.5.1/fpconfig.hh temp_zip/Libraries/fparser4.5.1/fpconfig.hh<br/>
cp ../../Tools/Classes/CppAbout temp_zip/Tools/Classes/CppAbout<br/>
cp ../../Tools/Classes/CppMatrix temp_zip/Tools/Classes/CppMatrix<br/>
cp ../../Tools/Classes/CppQtAboutDialog temp_zip/Tools/Classes/CppQtAboutDialog<br/>
cp ../../Tools/Classes/CppQtHideAndShowDialog temp_zip/Tools/Classes/CppQtHideAndShowDialog<br/>
cp ../../Tools/Classes/CppQtModel temp_zip/Tools/Classes/CppQtModel<br/>
cp ../../Tools/Classes/CppTrace temp_zip/Tools/Classes/CppTrace<br/>
cp ../../Tools/ToolTestQtModels/INCLUDEPATH+= temp_zip/Tools/ToolTestQtModels/INCLUDEPATH+=<br/>
cp ../../Tools/ToolTestQtModels/Licence.txt temp_zip/Tools/ToolTestQtModels/Licence.txt<br/>
cp ../../Tools/ToolTestQtModels/SOURCES+= temp_zip/Tools/ToolTestQtModels/SOURCES+=<br/>
cp ../../Tools/ToolTestQtModels/ToolTestQtModels.pro temp_zip/Tools/ToolTestQtModels/ToolTestQtModels.pro<br/>
cp ../../Tools/ToolTestQtModels/qtmain.cpp temp_zip/Tools/ToolTestQtModels/qtmain.cpp<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.cpp temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.h temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.h<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.ui temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmaindialog.ui<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.cpp temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.h temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.h<br/>
cp ../../Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.ui temp_zip/Tools/ToolTestQtModels/qttooltestqtmodelsmenudialog.ui<br/>
cp ../../Tools/ToolTestQtModels/tooltestqtmodelsmenudialog.cpp temp_zip/Tools/ToolTestQtModels/tooltestqtmodelsmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtModels/tooltestqtmodelsmenudialog.h temp_zip/Tools/ToolTestQtModels/tooltestqtmodelsmenudialog.h<br/>
cp ../../Tools/ToolTestQtModels/zip.sh temp_zip/Tools/ToolTestQtModels/zip.sh<br/>
<br/>
FILENAME="ToolTestQtModelsSource"<br/>
ZIP_FILENAME=$FILENAME".zip"<br/>
<br/>
echo "Compressing files"<br/>
<br/>
cd temp_zip<br/>
zip -r $FILENAME Classes<br/>
zip -r $FILENAME Libraries<br/>
zip -r $FILENAME Tools<br/>
cd ..<br/>
cp "temp_zip/"$ZIP_FILENAME $ZIP_FILENAME<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Emptying subfolders"<br/>
<br/>
rm temp_zip/Classes/CppAbout/*.*<br/>
rm temp_zip/Classes/CppMatrix/*.*<br/>
rm temp_zip/Classes/CppQtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppQtHideAndShowDialog/*.*<br/>
rm temp_zip/Classes/CppQtModel/*.*<br/>
rm temp_zip/Classes/CppTrace/*.*<br/>
rm temp_zip/Libraries/fparser4.4.3/*.*<br/>
rm temp_zip/Libraries/fparser4.4.3/extrasrc/*.*<br/>
rm temp_zip/Libraries/fparser4.5.1/*.*<br/>
rm temp_zip/Libraries/fparser4.5.1/extrasrc/*.*<br/>
rm temp_zip/Tools/Classes/*.*<br/>
rm temp_zip/Tools/ToolTestQtModels/*.*<br/>
<br/>
echo "Removing subfolders"<br/>
<br/>
rmdir temp_zip/Classes/CppAbout<br/>
rmdir temp_zip/Classes/CppMatrix<br/>
rmdir temp_zip/Classes/CppQtAboutDialog<br/>
rmdir temp_zip/Classes/CppQtHideAndShowDialog<br/>
rmdir temp_zip/Classes/CppQtModel<br/>
rmdir temp_zip/Classes/CppTrace<br/>
rmdir temp_zip/Libraries/fparser4.4.3/extrasrc<br/>
rmdir temp_zip/Libraries/fparser4.4.3<br/>
rmdir temp_zip/Libraries/fparser4.5.1/extrasrc<br/>
rmdir temp_zip/Libraries/fparser4.5.1<br/>
rmdir temp_zip/Tools/Classes<br/>
rmdir temp_zip/Tools/ToolTestQtModels<br/>
<br/>
echo "Removing main folders"<br/>
<br/>
rmdir temp_zip/Classes<br/>
rmdir temp_zip/Libraries<br/>
rmdir temp_zip/Tools<br/>
<br/>
echo "Removing temporary folder"<br/>
<br/>
rm temp_zip/*.*<br/>
rmdir temp_zip<br/>
<br/>
echo "Done"<br/>
<br/>
# CreateQtProjectZipFile, version 1.3<br/>
# Copyright (C) 2012 Richel Bilderbeek<br/>
# Programmed on the 10th of June 2012<br/>
# by Richel Bilderbeek<br/>
# <br/>
# CreateQtProjectZipFile can be downloaded from http://www.richelbilderbeek.nl/ToolCreateQtProjectZipFile.htm<br/>
# Licenced under GPL 3.0<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
