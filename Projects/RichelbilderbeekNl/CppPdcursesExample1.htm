<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>PdcursesExample1</title>
  <meta name="description" content="C++ PdcursesExample1"/>
  <meta name="keywords" content="C++ PdcursesExample1 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppPdcursesExample1.htm">PdcursesExample1</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 10:03:01 2015
 -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicWindows.png" alt="Windows"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppPdcursesExample1.htm">PDCurses example 1: tutorial</a> is a
  <a href="CppPdcurses.htm">PDCurses</a> example that is a slight modification
  of a tutorial its code.
</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 14.10 (utopic)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppPdcursesExample1/CppPdcursesExample1.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppPdcursesExample1/CppPdcursesExample1.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) #Or use the code below<br/>
# QT += core<br/>
# QT += gui<br/>
# greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
# <a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
# <a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
# <a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
# <a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
#&nbsp;&nbsp; <a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
# }<br/>
# <a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
# unix {<br/>
#&nbsp;&nbsp; <a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
# }<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri) #Or use the code below<br/>
# win32 {<br/>
#&nbsp;&nbsp; <a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; ../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
# }<br/>
<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Pdcurses.pri) #Or use the code below<br/>
# win32 {<br/>
#&nbsp;&nbsp; <a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ../../<a href="CppLibrary.htm">Libraries</a>/pdc25_vc_w32<br/>
#<br/>
#&nbsp;&nbsp; <a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ../../<a href="CppLibrary.htm">Libraries</a>/pdc25_vc_w32/panel.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ../../<a href="CppLibrary.htm">Libraries</a>/pdc25_vc_w32/curses.h<br/>
#<br/>
#&nbsp;&nbsp; <a href="CppQmakeLibs.htm">LIBS</a> += -L../../<a href="CppLibrary.htm">Libraries</a>/pdc25_vc_w32 -lpdcurses<br/>
# }<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppPdcursesExample1/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppPdcursesExample1/main.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>Code adapted from http://invisible-island.net/ncurses/ncurses-intro.html<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCsignalH.htm">csignal</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "curses.h"<br/>
<br/>
<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> finish(<b><a href="CppInt.htm">int</a></b> sig);<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> num <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a> <a href="CppInitialize.htm">initialize</a> your non-curses data structures here <a href="CppComment.htm">*/</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppStdSignal.htm">std::signal</a>(SIGINT, finish);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a> arrange interrupts to terminate <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;initscr();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a> <a href="CppInitialize.htm">initialize</a> the curses <a href="CppLibrary.htm">library</a> <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;keypad(<a href="CppStd.htm">std</a>scr, TRUE);&nbsp;&nbsp;<a href="CppComment.htm">/*</a> enable keyboard mapping <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;c<b><a href="CppBreak.htm">break</a></b>();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">/*</a> take input <b><a href="CppChar.htm">char</a></b>s one at a <a href="CppTime.htm">time</a>, no wait <b><a href="CppFor.htm">for</a></b> \n <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;echo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">/*</a> echo input <a href="CppOperatorMinus.htm">-</a> in color <a href="CppComment.htm">*/</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (has_colors())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;start_color();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;* Simple color assignment, often all we need.&nbsp;&nbsp;Color pair 0 cannot<br/>
&nbsp;&nbsp;&nbsp;&nbsp;* be redefined.&nbsp;&nbsp;This example uses the same value <b><a href="CppFor.htm">for</a></b> the color<br/>
&nbsp;&nbsp;&nbsp;&nbsp;* pair as <b><a href="CppFor.htm">for</a></b> the foreground color, though of course that is not<br/>
&nbsp;&nbsp;&nbsp;&nbsp;* necessary:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(1, COLOR_RED,&nbsp;&nbsp;&nbsp;&nbsp; COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(2, COLOR_GREEN,&nbsp;&nbsp; COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(3, COLOR_YELLOW,&nbsp;&nbsp;COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(4, COLOR_BLUE,&nbsp;&nbsp;&nbsp;&nbsp;COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(5, COLOR_CYAN,&nbsp;&nbsp;&nbsp;&nbsp;COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(6, COLOR_MAGENTA, COLOR_BLACK);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;init_pair(7, COLOR_WHITE,&nbsp;&nbsp; COLOR_BLACK);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (;;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> c <a href="CppOperatorAssign.htm">=</a> getch();&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">/*</a> refresh, accept single keystroke of input <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;attrset(COLOR_PAIR(num <a href="CppOperatorModulus.htm">%</a> 8));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;num<a href="CppOperatorIncrement.htm">++</a>;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a> process the command keystroke <a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (c <a href="CppOperatorEqual.htm">==</a> KEY_DOWN) finish(0);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;finish(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">/*</a> we're done <a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> finish(<b><a href="CppInt.htm">int</a></b> sig)<br/>
{<br/>
&nbsp;&nbsp;endwin();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a> <b><a href="CppDo.htm">do</a></b> your non-curses wrapup here <a href="CppComment.htm">*/</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppStdExit.htm">std::exit</a>(sig);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
