<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtRoundedRectItem</title>
  <meta name="description" content="C++ QtRoundedRectItem"/>
  <meta name="keywords" content="C++ QtRoundedRectItem "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 09:57:32 2015
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppQGraphicsItem.htm">QGraphicsItem</a> <a href="CppClass.htm">class</a> that displays a rounded rectangle.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/CppQtRoundedRectItem.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/CppQtRoundedRectItem.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>_test.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/Licence.txt<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitem.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDRECTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDRECTITEM_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPen.htm">QPen</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Rounded <a href="CppRectangle.htm">rectangle</a> item<br/>
<a href="CppComment.htm">/*</a><br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp; _______<br/>
&nbsp;&nbsp;A <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ______<br/>
&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;_____&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a> _____ \<br/>
&nbsp;&nbsp;|&nbsp;&nbsp;|B&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | |B&nbsp;&nbsp;&nbsp;&nbsp;| |<br/>
&nbsp;&nbsp;|&nbsp;&nbsp;|&nbsp;&nbsp;C&nbsp;&nbsp;|&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | |&nbsp;&nbsp;C&nbsp;&nbsp;| |<br/>
&nbsp;&nbsp;|&nbsp;&nbsp;|_____|&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | |_____| |<br/>
&nbsp;&nbsp; \&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \_______/<br/>
&nbsp;&nbsp;&nbsp;&nbsp;\_______/<br/>
<br/>
A: Outer <a href="CppRectangle.htm">rectangle</a>, includes thickest pen width<br/>
B: Inner <a href="CppRectangle.htm">rectangle</a>, excluded thickest pen width<br/>
C: The position <b><a href="CppIf.htm">if</a></b> the <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a><br/>
If the <a href="CppRectangle.htm">rectangle</a> is displayed with a thinner pen, A and B remain at the same relative position<br/>
<br/>
<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect must be of the form (-0.5*width,-0.5*height,0.5*width,0.5*height)<br/>
so that (0.0,0.0) is its origin<br/>
<br/>
Comparison of <a href="CppQt.htm">Qt</a> and <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b>:<br/>
<br/>
&nbsp;&nbsp; rect():&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetOuterRect()<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorDecrement.htm">--</a>-+-<a href="CppOperatorDecrement.htm">--</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>-+---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp; |&nbsp;&nbsp; \&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp; |&nbsp;&nbsp; \<br/>
 <a href="CppOperatorDecrement.htm">--</a>+----O----+<a href="CppOperatorDecrement.htm">--</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>+----C----+<a href="CppOperatorDecrement.htm">--</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;\&nbsp;&nbsp; |&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\&nbsp;&nbsp; |&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorDecrement.htm">--</a>-+-<a href="CppOperatorDecrement.htm">--</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDecrement.htm">--</a>-+---<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br/>
<br/>
<br/>
&nbsp;&nbsp; where rect().center&nbsp;&nbsp;&nbsp;&nbsp;where GetOuterRect().center<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQPointF.htm">QPointF</a>(0.0,0.0)&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> GetPos()<br/>
<br/>
&nbsp;&nbsp; pos():<br/>
&nbsp;&nbsp;&nbsp;&nbsp; (1.2,3.4)<br/>
<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQ_OBJECT.htm">Q_OBJECT</a> <a href="CppComment.htm">//</a>Cannot <a href="CppMake.htm">make</a> <b><a href="CppThis.htm">this</a></b> a <a href="CppQObject.htm">QObject</a>???<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which the contour is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetContourPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_contour_pen; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which focus is indicated<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetFocusPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_focus_pen; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetCurrentPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetIsSelected() ? m_focus_pen : m_contour_pen; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GetIsSelected() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> isSelected() <a href="CppOperatorLogicalOr.htm">||</a> hasFocus(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a> GetCenterPos() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::pos(); }<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetCenterX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetCenterPos().x(); }<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetCenterY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> GetCenterPos().y(); }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetInnerHeight() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F GetInnerRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetInnerWidth() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetOuterHeight() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect().height(); }<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F GetOuterRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetOuterWidth() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect().width(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetRadiusX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>{ <b><a href="CppReturn.htm">return</a></b> m_radius_x; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetRadiusY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>{ <b><a href="CppReturn.htm">return</a></b> m_radius_y; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCenterPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b> { SetCenterX(x); SetCenterY(y); }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCenterPos(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp; pos) <b><a href="CppNoexcept.htm">noexcept</a></b> { SetCenterPos(pos.x(),pos.y()); }<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCenterX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCenterY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetContourPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b>; <a href="CppComment.htm">//</a>/Set the pen by which the contours are normally drawn, <b><a href="CppDefault.htm">default</a></b> value: <a href="CppQPen.htm">QPen</a>(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFocusPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b>; <a href="CppComment.htm">//</a>/Set the pen by which focus is indicated, <b><a href="CppDefault.htm">default</a></b> value: <a href="CppQPen.htm">QPen</a>(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetInnerHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetInnerWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetOuterHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetOuterWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_contour_pen_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_focus_pen_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_height_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_pos_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_radius_x_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_radius_y_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_width_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> <a href="CppEmit.htm">emitted</a> when <b><a href="CppThis.htm">this</a></b> item has moved<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_request_scene_update;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> dragEnterEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> dragLeaveEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> dragMoveEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *option, <a href="CppQWidget.htm">QWidget</a> *<a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b> <b><a href="CppOverride.htm">override</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the contour is drawn<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_contour_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which focus is indicated<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_focus_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_radius_x;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_radius_y;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use GetPos instead<br/>
&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a> pos() <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use GetRect instead<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F rect() <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use SetPos instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(qreal x, qreal y) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use SetRoundedRect instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setRect(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setRect(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os,<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDRECTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitem.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent)<br/>
 : <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>(parent),<br/>
&nbsp;&nbsp; m_signal_contour_pen_changed{},<br/>
&nbsp;&nbsp; m_signal_focus_pen_changed{},<br/>
&nbsp;&nbsp; m_signal_height_changed{},<br/>
&nbsp;&nbsp; m_signal_pos_changed{},<br/>
&nbsp;&nbsp; m_signal_radius_x_changed{},<br/>
&nbsp;&nbsp; m_signal_radius_y_changed{},<br/>
&nbsp;&nbsp; m_signal_width_changed{},<br/>
&nbsp;&nbsp; m_contour_pen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),0.0)),<br/>
&nbsp;&nbsp; m_focus_pen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),0.0,<a href="CppQt.htm">Qt</a>::DashLine)),<br/>
&nbsp;&nbsp; m_radius_x(4.0),<br/>
&nbsp;&nbsp; m_radius_y(4.0)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetContourPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),2.0));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetFocusPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),3.0,<a href="CppQt.htm">Qt</a>::DashLine));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> 32.0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> 64.0;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerWidth(width);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerHeight(height);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>OK<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::dragEnterEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::dragLeaveEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::dragMoveEvent(<a href="CppQGraphicsSceneDragDropEvent.htm">QGraphicsSceneDragDropEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetInnerHeight() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pen_width <a href="CppOperatorAssign.htm">=</a> GetCurrentPen().widthF();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetOuterHeight() <a href="CppOperatorMinus.htm">-</a> (2.0 * pen_width);<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetInnerRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetCenterX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetCenterY(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetInnerWidth(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GetInnerHeight()<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetInnerWidth() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pen_width <a href="CppOperatorAssign.htm">=</a> GetCurrentPen().widthF();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetOuterWidth() <a href="CppOperatorMinus.htm">-</a> (2.0 * pen_width);<br/>
}<br/>
<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetOuterRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F r{<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect()};<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r.translated(GetCenterX(),GetCenterY());<br/>
}<br/>
<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.9";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-13: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-19: <a href="CppVersion.htm">version</a> 1.1: added use of pen, brush and focus-indicating pen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-22: <a href="CppVersion.htm">version</a> 1.2: correctly uses the focus and regular pen, added contour pen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-14: <a href="CppVersion.htm">version</a> 1.3: removed superfluous <a href="CppSignal.htm">signal</a> m_signal_item_has_updated",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-14: <a href="CppVersion.htm">version</a> 1.4: fixed issue #219",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-16: <a href="CppVersion.htm">version</a> 1.5: disallow setRect and setPos (use SetRoundedRect and SetPos instead), cooperation with <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-22: <a href="CppVersion.htm">version</a> 1.6: allow setting the inner and outer <a href="CppRectangle.htm">rectangle</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-07: <a href="CppVersion.htm">version</a> 1.7: renamed IncludingPen <a href="CppMemberFunction.htm">member functions</a> to Outer",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-08: <a href="CppVersion.htm">version</a> 1.8: removed <b><a href="CppUsing.htm">using</a></b> with <a href="CppRectangle.htm">rectangle</a>s from <a href="CppInterface.htm">interface</a>, as it <a href="CppLed.htm">led</a> to incorrectness and confusion",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-09: <a href="CppVersion.htm">version</a> 1.9: increased use of <a href="CppTdd.htm">Tdd</a>, fixed <a href="CppBug.htm">bug</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::mouseMoveEvent(event);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;scene()-&gt;update(); <a href="CppComment.htm">//</a>HIERO<br/>
&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.htm">QWidget</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;painter-&gt;setBrush(brush());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w{GetOuterWidth() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCurrentPen().widthF()};<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> h{GetOuterHeight() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCurrentPen().widthF()};<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;isSelected() <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;hasFocus())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_focus_pen);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_contour_pen);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;painter-&gt;drawRoundedRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>0.5 * w,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>0.5 * h,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0 * w, <a href="CppComment.htm">//</a>Width<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0 * h <a href="CppComment.htm">//</a>Height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x,m_radius_y<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetCenterX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_x <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCenterX();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (current_x <a href="CppOperatorNotEqual.htm">!=</a> x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> current_pos <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCenterPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_pos.y()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Emitting <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::m_signal_pos_changed"); }<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetCenterY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_y <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCenterY();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (current_y <a href="CppOperatorNotEqual.htm">!=</a> y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> current_pos <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetCenterPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_pos.x(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetContourPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_before <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_before <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (m_contour_pen.widthF() <a href="CppOperatorNotEqual.htm">!=</a> pen.widthF())<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_contour_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_contour_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerWidth(width);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_contour_pen_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_after <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_after <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_height_before <a href="CppOperatorMinus.htm">-</a> inner_height_after) &lt; 0.001);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_width_before&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> inner_width_after ) &lt; 0.001);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(pen.widthF() <a href="CppOperatorMinus.htm">-</a> GetContourPen().widthF()) &lt; 0.01);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetFocusPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_before <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_before <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_focus_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_focus_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetInnerWidth(width);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_focus_pen_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_after <a href="CppOperatorAssign.htm">=</a> GetInnerHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_after <a href="CppOperatorAssign.htm">=</a> GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_height_before <a href="CppOperatorMinus.htm">-</a> inner_height_after) &lt; 0.001);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_width_before&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> inner_width_after ) &lt; 0.001);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(pen.widthF() <a href="CppOperatorMinus.htm">-</a> GetFocusPen().widthF()) &lt; 0.01);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetInnerHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;SetOuterHeight(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;height <a href="CppOperatorPlus.htm">+</a> (2.0 * GetCurrentPen().widthF())<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetInnerWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;SetOuterWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width <a href="CppOperatorPlus.htm">+</a> (2.0 * GetCurrentPen().widthF())<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetOuterHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (height <a href="CppOperatorNotEqual.htm">!=</a> GetOuterHeight())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> w <a href="CppOperatorAssign.htm">=</a> GetOuterWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> h <a href="CppOperatorAssign.htm">=</a> height;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a>(-0.5 * w,-0.5 * h),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a>( 0.5 * w, 0.5 * h)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_height_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetOuterWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (width <a href="CppOperatorNotEqual.htm">!=</a> GetOuterWidth())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> w <a href="CppOperatorAssign.htm">=</a> width;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> h <a href="CppOperatorAssign.htm">=</a> GetOuterHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a>(-0.5 * w,-0.5 * h),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a>( 0.5 * w, 0.5 * h)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_width_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRadiusX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_x <a href="CppOperatorNotEqual.htm">!=</a> radius_x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x <a href="CppOperatorAssign.htm">=</a> radius_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_radius_x_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_x <a href="CppOperatorEqual.htm">==</a> GetRadiusX());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRadiusY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_y <a href="CppOperatorNotEqual.htm">!=</a> radius_y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_y <a href="CppOperatorAssign.htm">=</a> radius_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_radius_y_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_y <a href="CppOperatorEqual.htm">==</a> GetRadiusY());<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lhs.GetContourPen() <a href="CppOperatorEqual.htm">==</a> rhs.GetContourPen()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetFocusPen() <a href="CppOperatorEqual.htm">==</a> lhs.GetFocusPen()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetRadiusX() <a href="CppOperatorEqual.htm">==</a> lhs.GetRadiusX()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetRadiusY() <a href="CppOperatorEqual.htm">==</a> lhs.GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetInnerWidth() <a href="CppOperatorEqual.htm">==</a> lhs.GetInnerWidth()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetInnerHeight() <a href="CppOperatorEqual.htm">==</a> lhs.GetInnerHeight()<br/>
&nbsp;&nbsp;;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> !(lhs <a href="CppOperatorEqual.htm">==</a> rhs);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitem_test.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitem_test.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQCoreApplication.htm">QCoreApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppCounter.htm">counter</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("<a href="CppConstructor.htm">Construct</a>ion"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> i;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetOuterX and GetOuterX must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_x <a href="CppOperatorAssign.htm">=</a> i.GetCenterX();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_x <a href="CppOperatorAssign.htm">=</a> old_x <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterX() <a href="CppOperatorMinus.htm">-</a> new_x) &lt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetOuterY and GetOuterY must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_y <a href="CppOperatorAssign.htm">=</a> i.GetCenterY();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_y <a href="CppOperatorAssign.htm">=</a> old_y <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterY(new_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterY() <a href="CppOperatorMinus.htm">-</a> new_y) &lt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetOuterPos and GetOuterPos must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_pos <a href="CppOperatorAssign.htm">=</a> i.GetCenterPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_pos <a href="CppOperatorAssign.htm">=</a> old_pos <a href="CppOperatorPlus.htm">+</a> <a href="CppQPointF.htm">QPointF</a>(10.0,10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterPos(new_pos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterPos().x() <a href="CppOperatorMinus.htm">-</a> new_pos.x()) &lt; 2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterPos().y() <a href="CppOperatorMinus.htm">-</a> new_pos.y()) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetOuterWidth and GetOuterWidth must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_width <a href="CppOperatorAssign.htm">=</a> i.GetOuterWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_width <a href="CppOperatorAssign.htm">=</a> old_width <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetOuterWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetOuterWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetOuterHeight and GetOuterHeight must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_height <a href="CppOperatorAssign.htm">=</a> i.GetOuterHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_height <a href="CppOperatorAssign.htm">=</a> old_height <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetOuterHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetOuterHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetInnerX and GetInnerX must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_x <a href="CppOperatorAssign.htm">=</a> i.GetCenterX();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_x <a href="CppOperatorAssign.htm">=</a> old_x <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterX() <a href="CppOperatorMinus.htm">-</a> new_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetInnerY and GetInnerY must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_y <a href="CppOperatorAssign.htm">=</a> i.GetCenterY();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_y <a href="CppOperatorAssign.htm">=</a> old_y <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterY(new_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterY() <a href="CppOperatorMinus.htm">-</a> new_y) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetInnerPos and GetInnerPos must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_pos <a href="CppOperatorAssign.htm">=</a> i.GetCenterPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_pos <a href="CppOperatorAssign.htm">=</a> old_pos <a href="CppOperatorPlus.htm">+</a> <a href="CppQPointF.htm">QPointF</a>(10.0,10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterPos(new_pos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterPos().x() <a href="CppOperatorMinus.htm">-</a> new_pos.x()) &lt; 2.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetCenterPos().y() <a href="CppOperatorMinus.htm">-</a> new_pos.y()) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetInnerHeight and GetInnerHeight must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_height <a href="CppOperatorAssign.htm">=</a> i.GetInnerHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_height <a href="CppOperatorAssign.htm">=</a> old_height <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetInnerHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetInnerHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetInnerWidth and GetInnerWidth must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_width <a href="CppOperatorAssign.htm">=</a> i.GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_width <a href="CppOperatorAssign.htm">=</a> old_width <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetInnerWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Difference has been measured to be 3.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetInnerWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &lt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetRadiusX and GetRadiusX must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_radius_x <a href="CppOperatorAssign.htm">=</a> i.GetRadiusX();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_radius_x <a href="CppOperatorAssign.htm">=</a> old_radius_x <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetRadiusX(new_radius_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetRadiusX() <a href="CppOperatorMinus.htm">-</a> new_radius_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetRadiusY and GetRadiusY must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> old_radius_y <a href="CppOperatorAssign.htm">=</a> i.GetRadiusY();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_radius_y <a href="CppOperatorAssign.htm">=</a> old_radius_y <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetRadiusY(new_radius_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(i.GetRadiusY() <a href="CppOperatorMinus.htm">-</a> new_radius_y) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Position must be in GetOuterRect"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i.GetOuterRect().contains(i.GetCenterPos()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Position must be in GetInnerRect"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i.GetInnerRect().contains(i.GetCenterPos()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("After changing the outer width and position, the Position must be in GetOuterRect"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetOuterWidth(3.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetOuterHeight(3.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterX(i.GetCenterX() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterY(i.GetCenterY() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i.GetOuterRect().contains(i.GetCenterPos()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("After changing the inner width and position, the Position must be in GetInnerRect"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetInnerWidth(3.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetInnerHeight(3.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterX(i.GetCenterX() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i.SetCenterY(i.GetCenterY() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i.GetInnerRect().contains(i.GetCenterPos()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("After a drag event, m_signal_pos_changed must be <a href="CppEmit.htm">emitted</a>"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Cannot be tested<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppCounter.htm">Counter</a> c{0}; <a href="CppComment.htm">//</a>For receiving the <a href="CppSignal.htm">signal</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>i.m_signal_pos_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppCounter.htm">Counter</a>::Inc,&amp;c) <a href="CppComment.htm">//</a>Do not forget the &amp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> * <b><a href="CppConst.htm">const</a></b> event{<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQCoreApplication.htm">QCoreApplication</a>::sendEvent(&amp;i,event);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(c.Get() &gt; 0);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitemdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDRECTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDRECTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DisableSetSize() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; GetItem() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> GetMinimumHeight() <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> 276; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Read the X value directly from GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Read the Y value directly from GUI<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the X value directly to GUI<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetUiX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the Y value directly to GUI<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetUiY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_contour_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_focus_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_height_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_height_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_radius_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_radius_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_width_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> to work on<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; m_item;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnContourPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnFocusPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnPosChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRadiusXchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRadiusYchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnWidthChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnHeightChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDRECTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "test<a href="CppTime.htm">time</a>r.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::DisableSetSize() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::DoSomethingRandom() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_x-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_y-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::GetItem() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_item;<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::GetUiX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;box_x-&gt;value();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::GetUiY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;box_y-&gt;value();<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.3";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-15: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-23: <a href="CppVersion.htm">version</a> 1.1: allow cooperation with <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-07-21: <a href="CppVersion.htm">version</a> 1.2: added CheckMe <a href="CppMemberFunction.htm">member function</a>, <b><a href="CppFor.htm">for</a></b> checking its <a href="CppInvariant.htm">invariant</a>s",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-08-04: <a href="CppVersion.htm">version</a> 1.3: removed CheckMe <a href="CppMemberFunction.htm">member function</a> in favor of <a href="CppTdd.htm">Tdd</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;setValue(qtitem-&gt;GetContourPen().widthF());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;setValue(qtitem-&gt;GetFocusPen().widthF());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetCenterPos().x();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_y <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetCenterPos().y();<br/>
&nbsp;&nbsp;ui-&gt;box_x-&gt;setValue(new_x);<br/>
&nbsp;&nbsp;ui-&gt;box_y-&gt;setValue(new_y);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;setValue(qtitem-&gt;GetRadiusX());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;setValue(qtitem-&gt;GetRadiusY());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnWidthChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetInnerWidth();<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setValue(new_width);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width_including_pen <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetOuterWidth();<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setValue(new_width_including_pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnHeightChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetInnerHeight();<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setValue(new_height);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height_including_pen <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetOuterHeight();<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setValue(new_height_including_pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_contour_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a> pen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a>(qRgb(0,0,0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;arg1<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;SetContourPen(pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_focus_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a> pen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a>(qRgb(0,0,0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;arg1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::DashLine<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;SetFocusPen(pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_height_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetInnerHeight(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_height_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetOuterHeight(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_radius_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetRadiusX(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_radius_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetRadiusY(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetInnerWidth(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_width_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetOuterWidth(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetCenterPos(arg1,m_item-&gt;GetCenterPos().y());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetCenterPos(m_item-&gt;GetCenterPos().x(),arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item <a href="CppOperatorEqual.htm">==</a> item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the GUI follow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;setValue(GetItem()-&gt;GetContourPen().widthF());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;setValue(GetItem()-&gt;GetFocusPen().widthF());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height-&gt;setValue(GetItem()-&gt;GetInnerHeight());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setValue(GetItem()-&gt;GetOuterHeight());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;setValue(GetItem()-&gt;GetRadiusX());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;setValue(GetItem()-&gt;GetRadiusY());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width-&gt;setValue(GetItem()-&gt;GetInnerWidth());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setValue(GetItem()-&gt;GetOuterWidth());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x-&gt;setValue(GetItem()-&gt;GetCenterX());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y-&gt;setValue(GetItem()-&gt;GetCenterY());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Setting item '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*item) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> contour_pen_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetContourPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> focus_pen_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetFocusPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pos_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetCenterPos();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_x_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetRadiusX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_y_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetRadiusY();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> width_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetInnerWidth();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> height_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetInnerHeight();<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> contour_pen_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> focus_pen_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> pos_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> radius_x_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> radius_y_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> width_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> height_changed{<b><a href="CppTrue.htm">true</a></b>};<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> contour_pen_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetContourPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> focus_pen_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetFocusPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pos_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetCenterPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_x_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetRadiusX();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_y_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetRadiusY();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> width_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetInnerWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> height_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetInnerHeight();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;contour_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> contour_pen_before <a href="CppOperatorNotEqual.htm">!=</a> contour_pen_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;focus_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> focus_pen_before <a href="CppOperatorNotEqual.htm">!=</a> focus_pen_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos_changed <a href="CppOperatorAssign.htm">=</a> pos_before <a href="CppOperatorNotEqual.htm">!=</a> pos_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_x_changed <a href="CppOperatorAssign.htm">=</a> radius_x_before <a href="CppOperatorNotEqual.htm">!=</a> radius_x_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_y_changed <a href="CppOperatorAssign.htm">=</a> radius_y_before <a href="CppOperatorNotEqual.htm">!=</a> radius_y_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width_changed <a href="CppOperatorAssign.htm">=</a> width_before <a href="CppOperatorNotEqual.htm">!=</a> width_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;height_changed <a href="CppOperatorAssign.htm">=</a> height_before <a href="CppOperatorNotEqual.htm">!=</a> height_after;<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (contour_pen_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Contour pen will change from "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> contour_pen_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> contour_pen_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (focus_pen_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "FocusPen will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> focus_pen_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> focus_pen_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (pos_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Pos will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> pos_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> pos_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_x_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RadiusX will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_x_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_x_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_y_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RadiusY will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_y_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_y_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (width_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Inner width will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> width_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> width_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (height_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Inner height will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> height_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> height_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disconnect m_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_width_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnWidthChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_height_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnHeightChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Replace m_item by the <b><a href="CppNew.htm">new</a></b> one<br/>
&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> item;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetContourPen() <a href="CppOperatorEqual.htm">==</a> contour_pen_after);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetFocusPen()&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> focus_pen_after&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetCenterPos()&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> pos_after&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetRadiusX()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> radius_x_after&nbsp;&nbsp; );<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetRadiusY()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> radius_y_after&nbsp;&nbsp; );<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetInnerWidth() <a href="CppOperatorEqual.htm">==</a> width_after);<br/>
<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_width_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnWidthChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_height_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnHeightChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppEmit.htm">Emit</a> everything that has changed<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (contour_pen_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (focus_pen_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (pos_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_x_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_y_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (width_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_width_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (height_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_height_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( item <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;m_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*item <a href="CppOperatorEqual.htm">==</a> *m_item);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::SetUiX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_x-&gt;setValue(x);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::SetUiY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;box_y-&gt;setValue(y);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test<a href="CppTime.htm">Time</a>r test_<a href="CppTime.htm">time</a>r(<a href="Cpp__func__.htm">__func__</a>,__<a href="CppCfile.htm">FILE</a>__,1.0);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose{<b><a href="CppFalse.htm">false</a></b>};<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog dialog;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; item{<b><a href="CppNew.htm">new</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>};<br/>
&nbsp;&nbsp;dialog.SetItem(item);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change all, sorted by UI <a href="CppComponent.htm">component</a> name<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Contour pen must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_contour_pen_width-&gt;setValue( item-&gt;GetContourPen().widthF() <a href="CppOperatorPlus.htm">+</a> 10.0 );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> new_pen <a href="CppOperatorAssign.htm">=</a> item-&gt;GetContourPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_pen.setWidthF(dialog.ui-&gt;box_contour_pen_width-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetContourPen(new_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item-&gt;GetContourPen() <a href="CppOperatorEqual.htm">==</a> new_pen);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Focus pen width must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_focus_pen_width-&gt;setValue( item-&gt;GetFocusPen().widthF() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> new_pen <a href="CppOperatorAssign.htm">=</a> item-&gt;GetFocusPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_pen.setWidthF(dialog.ui-&gt;box_focus_pen_width-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetFocusPen(new_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item-&gt;GetFocusPen() <a href="CppOperatorEqual.htm">==</a> new_pen);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get InnerHeight must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_height-&gt;setValue(item-&gt;GetInnerHeight() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_height <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_height-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetInnerHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetInnerHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get OuterHeight must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_height_including_pen-&gt;setValue(item-&gt;GetOuterHeight() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_height <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_height_including_pen-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetOuterHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetOuterHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Radius X must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_radius_x-&gt;setValue(item-&gt;GetRadiusX() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_x <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_radius_x-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetRadiusX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetRadiusX() <a href="CppOperatorMinus.htm">-</a> new_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Radius Y must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_radius_y-&gt;setValue(item-&gt;GetRadiusY() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_y <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_radius_y-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetRadiusY(new_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetRadiusY() <a href="CppOperatorMinus.htm">-</a> new_y) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get InnerWidth must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_width{item-&gt;GetInnerWidth()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width{old_width <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetInnerWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetInnerWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get OuterWidth must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_width_including_pen-&gt;setValue(item-&gt;GetOuterWidth() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_width <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_width_including_pen-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetOuterWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetOuterWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get X must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_x-&gt;setValue(item-&gt;GetCenterX() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_x <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_x-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetCenterX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetCenterX() <a href="CppOperatorMinus.htm">-</a> new_x) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Set/Get Y must be symmetric"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.ui-&gt;box_y-&gt;setValue(item-&gt;GetCenterY() <a href="CppOperatorPlus.htm">+</a> 10.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> new_y <a href="CppOperatorAssign.htm">=</a> dialog.ui-&gt;box_y-&gt;value() <a href="CppOperatorPlus.htm">+</a> 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetCenterY(new_y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetCenterY() <a href="CppOperatorMinus.htm">-</a> new_y) &lt; 2.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetItem with other item"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; new_item{<b><a href="CppNew.htm">new</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.SetItem(new_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.GetItem() <a href="CppOperatorEqual.htm">==</a> new_item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("SetItem with original item"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialog.SetItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(dialog.GetItem() <a href="CppOperatorEqual.htm">==</a> item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Changing a contour pen does not change the inner height"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!item-&gt;GetIsSelected() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Work with contour pen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_height{item-&gt;GetInnerHeight()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height{old_height <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetInnerHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen(item-&gt;GetContourPen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidthF(pen.widthF() <a href="CppOperatorPlus.htm">+</a> 5.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetContourPen(pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetInnerHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &lt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Changing a contour pen does not change the inner width"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!item-&gt;GetIsSelected() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Work with contour pen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_width{item-&gt;GetInnerWidth()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width{old_width <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetInnerWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen(item-&gt;GetContourPen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidthF(pen.widthF() <a href="CppOperatorPlus.htm">+</a> 5.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetContourPen(pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetInnerWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &lt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Changing a contour pen does change the outer height"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!item-&gt;GetIsSelected() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Work with contour pen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_height{item-&gt;GetInnerHeight()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height{old_height <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetOuterHeight(new_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen(item-&gt;GetContourPen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidthF(pen.widthF() <a href="CppOperatorPlus.htm">+</a> 5.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetContourPen(pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetOuterHeight() <a href="CppOperatorMinus.htm">-</a> new_height) &gt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Changing a contour pen does change the outer width"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!item-&gt;GetIsSelected() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Work with contour pen");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> old_width{item-&gt;GetInnerWidth()};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width{old_width <a href="CppOperatorPlus.htm">+</a> 10.0};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetOuterWidth(new_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen(item-&gt;GetContourPen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setWidthF(pen.widthF() <a href="CppOperatorPlus.htm">+</a> 5.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;SetContourPen(pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(item-&gt;GetOuterWidth() <a href="CppOperatorMinus.htm">-</a> new_width) &gt; 4.0);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose) { <a href="CppTRACE.htm">TRACE</a>("Brute-force some random items"); }<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i{0}; i<a href="CppOperatorNotEqual.htm">!=</a>10; <a href="CppOperatorIncrement.htm">++</a>i) { dialog.DoSomethingRandom(); }<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
