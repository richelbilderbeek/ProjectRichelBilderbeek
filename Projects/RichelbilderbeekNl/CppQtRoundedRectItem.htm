<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtRoundedRectItem</title>
  <meta name="description" content="C++ QtRoundedRectItem"/>
  <meta name="keywords" content="C++ QtRoundedRectItem "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.680 at Sun Jul  6 18:31:57 2014
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppQGraphicsItem.htm">QGraphicsItem</a> <a href="CppClass.htm">class</a> that displays a rounded rectangle.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/CppQtRoundedRectItem.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/CppQtRoundedRectItem.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/Licence.txt<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.ui<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitem.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDRECTITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDRECTITEM_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPen.htm">QPen</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Rounded <a href="CppRectangle.htm">rectangle</a> item<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQ_OBJECT.htm">Q_OBJECT</a> <a href="CppComment.htm">//</a>Cannot <a href="CppMake.htm">make</a> <b><a href="CppThis.htm">this</a></b> a <a href="CppQObject.htm">QObject</a>???<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which the contour is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetContourPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which focus is indicated<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetFocusPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the height of the area within the rounded <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;___<br/>
&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a> _ \&nbsp;&nbsp;GetHeight/GetWidth <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a>_<a href="CppOperatorLogicalOr.htm">||</a>&nbsp;&nbsp;GetHeightIncludingPen/GetWidthIncludingPen <a href="CppOperatorAssign.htm">=</a> 3<br/>
&nbsp;&nbsp; \___/<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetHeight() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the height of the area including the rounded <a href="CppRectangle.htm">rectangle</a> itself<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetHeightIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a> GetPos() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetRadiusX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetRadiusY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppRectangle.htm">rectangle</a> of the inner area<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F GetRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F GetRectIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the width of the area within the rounded <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;___<br/>
&nbsp;&nbsp; <a href="CppOperatorDivide.htm">/</a> _ \&nbsp;&nbsp;GetHeight/GetWidth <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a>_<a href="CppOperatorLogicalOr.htm">||</a>&nbsp;&nbsp;GetHeightIncludingPen/GetWidthIncludingPen <a href="CppOperatorAssign.htm">=</a> 3<br/>
&nbsp;&nbsp; \___/<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetWidth() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the width of the area including the rounded <a href="CppRectangle.htm">rectangle</a> itself<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetWidthIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which the contours are normally drawn<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Default value: <a href="CppQPen.htm">QPen</a>(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetContourPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which focus is indicated<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Default value: <a href="CppQPen.htm">QPen</a>(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFocusPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetHeightIncludingPen(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect of the inner area<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRoundedRect(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F rect, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRoundedRectIncludingPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F rect, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetWidthIncludingPen(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_contour_pen_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_focus_pen_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_pos_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_radius_x_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_radius_y_changed;<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_rect_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> <a href="CppEmit.htm">emitted</a> when <b><a href="CppThis.htm">this</a></b> item has changed its position<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>*)&gt; m_signal_pos_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> <a href="CppEmit.htm">emitted</a> when <b><a href="CppThis.htm">this</a></b> item has moved<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_request_scene_update;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *option, <a href="CppQWidget.htm">QWidget</a> *<a href="CppWidget.htm">widget</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the contour is drawn<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_contour_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which focus is indicated<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_focus_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_radius_x;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_radius_y;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use GetPos instead<br/>
&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a> pos() <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use GetRect instead<br/>
&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F rect() <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use SetPos instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(qreal x, qreal y) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To <a href="CppMake.htm">make</a> it <b><a href="CppPrivate.htm">private</a></b>, use SetRoundedRect instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setRect(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setRect(<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os,<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDRECTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitem.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *parent)<br/>
 : <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>(parent),<br/>
&nbsp;&nbsp; m_signal_contour_pen_changed{},<br/>
&nbsp;&nbsp; m_signal_focus_pen_changed{},<br/>
&nbsp;&nbsp; m_signal_pos_changed{},<br/>
&nbsp;&nbsp; m_signal_radius_x_changed{},<br/>
&nbsp;&nbsp; m_signal_radius_y_changed{},<br/>
&nbsp;&nbsp; m_signal_rect_changed{},<br/>
&nbsp;&nbsp; m_contour_pen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),0.0)),<br/>
&nbsp;&nbsp; m_focus_pen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),0.0,<a href="CppQt.htm">Qt</a>::DashLine)),<br/>
&nbsp;&nbsp; m_radius_x(4.0),<br/>
&nbsp;&nbsp; m_radius_y(4.0)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetContourPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),2.0));<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetFocusPen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0),3.0,<a href="CppQt.htm">Qt</a>::DashLine));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> 24.48;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> 32.64;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRoundedRect(<a href="CppQRect.htm">QRect</a>F(-width/2.0,-height/2.0,width,height),m_radius_x,m_radius_y);<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>OK<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetContourPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_contour_pen;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetFocusPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_focus_pen;<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetHeight() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetRect().height();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetHeightIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetRectIncludingPen().height();<br/>
}<br/>
<br/>
<a href="CppQPointF.htm">QPointF</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetPos() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::pos();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetRadiusX() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_radius_x;<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetRadiusY() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_radius_y;<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetRect() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pen_width<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(m_contour_pen.widthF(),m_focus_pen.widthF())<br/>
&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect() is the entire rect<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetRectIncludingPen().adjusted(<br/>
&nbsp;&nbsp;&nbsp;&nbsp; pen_width, pen_width,-pen_width,-pen_width);<br/>
}<br/>
<br/>
<a href="CppQRect.htm">QRect</a>F <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetRectIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F r <a href="CppOperatorAssign.htm">=</a> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::rect();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r;<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.6";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-13: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-19: <a href="CppVersion.htm">version</a> 1.1: added use of pen, brush and focus-indicating pen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-22: <a href="CppVersion.htm">version</a> 1.2: correctly uses the focus and regular pen, added contour pen",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-14: <a href="CppVersion.htm">version</a> 1.3: removed superfluous <a href="CppSignal.htm">signal</a> m_signal_item_has_updated",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-14: <a href="CppVersion.htm">version</a> 1.4: fixed issue #219",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-16: <a href="CppVersion.htm">version</a> 1.5: disallow setRect and setPos (use SetRoundedRect and SetPos instead), cooperation with <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-22: <a href="CppVersion.htm">version</a> 1.6: allow setting the inner and outer <a href="CppRectangle.htm">rectangle</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetWidth() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetRect().width();<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::GetWidthIncludingPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetRectIncludingPen().width();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::mouseMoveEvent(event);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::paint(<a href="CppQPainter.htm">QPainter</a> *painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.htm">QWidget</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rect_before <a href="CppOperatorAssign.htm">=</a> GetRectIncludingPen();<br/>
<br/>
&nbsp;&nbsp;painter-&gt;setBrush(brush());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The item can be selected by clicking on it, or can have focus by moving towards it<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(m_contour_pen.widthF(),m_focus_pen.widthF());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;isSelected() <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;hasFocus())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_focus_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width_diff <a href="CppOperatorAssign.htm">=</a> width <a href="CppOperatorMinus.htm">-</a> m_focus_pen.widthF();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRoundedRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetRectIncludingPen().adjusted( <a href="CppComment.htm">//</a>Adjust to stay within rect<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 1.0 * width) <a href="CppOperatorMinus.htm">-</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorPlus.htm">+</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 1.0 * width) <a href="CppOperatorMinus.htm">-</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorPlus.htm">+</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-1.0 * width) <a href="CppOperatorPlus.htm">+</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-1.0 * width) <a href="CppOperatorPlus.htm">+</a> width_diff&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_radius_y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_contour_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width_diff <a href="CppOperatorAssign.htm">=</a> width <a href="CppOperatorMinus.htm">-</a> m_contour_pen.widthF();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRoundedRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRectIncludingPen().adjusted( <a href="CppComment.htm">//</a>Adjust to stay within rect<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 1.0 * width) <a href="CppOperatorMinus.htm">-</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorPlus.htm">+</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 1.0 * width) <a href="CppOperatorMinus.htm">-</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorPlus.htm">+</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-1.0 * width) <a href="CppOperatorPlus.htm">+</a> width_diff, <a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(-1.0 * width) <a href="CppOperatorPlus.htm">+</a> width_diff&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x,m_radius_y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rect_after <a href="CppOperatorAssign.htm">=</a> GetRectIncludingPen();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rect_before <a href="CppOperatorEqual.htm">==</a> rect_after);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetContourPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_before <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_before <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (m_contour_pen.widthF() <a href="CppOperatorNotEqual.htm">!=</a> pen.widthF())<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_contour_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_contour_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetWidth(width);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_contour_pen_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_after <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_after <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_height_before <a href="CppOperatorMinus.htm">-</a> inner_height_after) &lt; 0.001);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_width_before&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> inner_width_after ) &lt; 0.001);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(pen.widthF() <a href="CppOperatorMinus.htm">-</a> GetContourPen().widthF()) &lt; 0.01);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetFocusPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_before <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_before <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_focus_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_focus_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetWidth(width);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_focus_pen_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_height_after <a href="CppOperatorAssign.htm">=</a> GetHeight();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> inner_width_after <a href="CppOperatorAssign.htm">=</a> GetWidth();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_height_before <a href="CppOperatorMinus.htm">-</a> inner_height_after) &lt; 0.001);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(inner_width_before&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> inner_width_after ) &lt; 0.001);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(pen.widthF() <a href="CppOperatorMinus.htm">-</a> GetFocusPen().widthF()) &lt; 0.01);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetHeight(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;SetHeightIncludingPen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;height <a href="CppOperatorPlus.htm">+</a> (2.0 * <a href="CppStdMax.htm">std::max</a>(m_contour_pen.widthF(),m_focus_pen.widthF()))<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(height <a href="CppOperatorMinus.htm">-</a> GetHeight()) &lt; 2.0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetHeightIncludingPen(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> current <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetRectIncludingPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_height <a href="CppOperatorAssign.htm">=</a> current.height();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (current_height <a href="CppOperatorNotEqual.htm">!=</a> height)<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;SetRoundedRectIncludingPen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.left(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.top(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.width(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_rect_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(height <a href="CppOperatorMinus.htm">-</a> GetHeightIncludingPen()) &lt; 2.0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_x <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetPos().x();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_y <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetPos().y();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (current_x <a href="CppOperatorNotEqual.htm">!=</a> x <a href="CppOperatorLogicalOr.htm">||</a> current_y <a href="CppOperatorNotEqual.htm">!=</a> y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setPos(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(<a href="CppStdAbs.htm">std::abs</a>(y <a href="CppOperatorMinus.htm">-</a> GetPos().y()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0.01)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("ERROR");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(GetPos().y());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("BREAK");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(x <a href="CppOperatorMinus.htm">-</a> GetPos().x()) &lt; 0.01);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(y <a href="CppOperatorMinus.htm">-</a> GetPos().y()) &lt; 0.01);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRadiusX(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_x <a href="CppOperatorNotEqual.htm">!=</a> radius_x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x <a href="CppOperatorAssign.htm">=</a> radius_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_radius_x_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_x <a href="CppOperatorEqual.htm">==</a> GetRadiusX());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRadiusY(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_y <a href="CppOperatorNotEqual.htm">!=</a> radius_y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_y <a href="CppOperatorAssign.htm">=</a> radius_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_radius_y_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_y <a href="CppOperatorEqual.htm">==</a> GetRadiusY());<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRoundedRect(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F new_rect,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pen_width <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMax.htm">std::max</a>(m_contour_pen.widthF(),m_focus_pen.widthF());<br/>
&nbsp;&nbsp;SetRoundedRectIncludingPen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_rect.adjusted(-pen_width,-pen_width,pen_width,pen_width),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_x,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_y<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> e <a href="CppOperatorAssign.htm">=</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppStdAbs.htm">std::abs</a>(new_rect.height() <a href="CppOperatorMinus.htm">-</a> GetRect().height()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("ERROR");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(new_rect.height());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(GetRect().height());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(m_contour_pen.widthF());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(m_focus_pen.widthF());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(pen_width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("BREAK");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.left() <a href="CppOperatorMinus.htm">-</a> GetRect().left()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.top() <a href="CppOperatorMinus.htm">-</a> GetRect().top()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.width() <a href="CppOperatorMinus.htm">-</a> GetRect().width()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.height() <a href="CppOperatorMinus.htm">-</a> GetRect().height()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_x <a href="CppOperatorEqual.htm">==</a> GetRadiusX());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_y <a href="CppOperatorEqual.htm">==</a> GetRadiusY());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetRoundedRectIncludingPen(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F new_rect,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_x,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> radius_y<br/>
) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (GetRectIncludingPen() <a href="CppOperatorNotEqual.htm">!=</a> new_rect)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::setRect(new_rect);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_pos_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_rect_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusX(radius_x);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusY(radius_y);<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> current <a href="CppOperatorAssign.htm">=</a> GetRectIncludingPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> e <a href="CppOperatorAssign.htm">=</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (<a href="CppStdAbs.htm">std::abs</a>(new_rect.width() <a href="CppOperatorMinus.htm">-</a> current.width()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (<a href="CppStdAbs.htm">std::abs</a>(new_rect.height() <a href="CppOperatorMinus.htm">-</a> current.height()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (<a href="CppStdAbs.htm">std::abs</a>(new_rect.top() <a href="CppOperatorMinus.htm">-</a> current.top()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (<a href="CppStdAbs.htm">std::abs</a>(new_rect.left() <a href="CppOperatorMinus.htm">-</a> current.left()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("ERROR");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(new_rect.left());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(current.left());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(new_rect.top());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(current.top());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(new_rect.width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(current.width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(new_rect.height());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(current.height());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("BREAK");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.width() <a href="CppOperatorMinus.htm">-</a> current.width()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.height() <a href="CppOperatorMinus.htm">-</a> current.height()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.top() <a href="CppOperatorMinus.htm">-</a> current.top()) &lt; e);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(new_rect.left() <a href="CppOperatorMinus.htm">-</a> current.left()) &lt; e);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(new_rect <a href="CppOperatorEqual.htm">==</a> GetRectIncludingPen());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_x <a href="CppOperatorEqual.htm">==</a> GetRadiusX());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(radius_y <a href="CppOperatorEqual.htm">==</a> GetRadiusY());<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetWidth(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;SetWidthIncludingPen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width <a href="CppOperatorPlus.htm">+</a> (2.0 * <a href="CppStdMax.htm">std::max</a>(m_contour_pen.widthF(),m_focus_pen.widthF()))<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(width <a href="CppOperatorMinus.htm">-</a> GetWidth()) &lt; 2.0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::SetWidthIncludingPen(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> current <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetRectIncludingPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> current_width <a href="CppOperatorAssign.htm">=</a> current.width();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (current_width <a href="CppOperatorNotEqual.htm">!=</a> width)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;SetRoundedRectIncludingPen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQRect.htm">QRect</a>F(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.left(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.top(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.height()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusX(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppSignal.htm">Signal</a>s and update at SetRoundedRectIncludingPen<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_rect_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> e <a href="CppOperatorAssign.htm">=</a> 2.0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(<a href="CppStdAbs.htm">std::abs</a>(width <a href="CppOperatorMinus.htm">-</a> GetWidthIncludingPen()) <a href="CppOperatorGreaterEqual.htm">&gt;=</a> e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("ERROR");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(width);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(GetWidthIncludingPen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("BREAK");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStdAbs.htm">std::abs</a>(width <a href="CppOperatorMinus.htm">-</a> GetWidthIncludingPen()) &lt; e);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Test");<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> i;<br/>
&nbsp;&nbsp;i.SetPos(345.67,456.78);<br/>
&nbsp;&nbsp;i.SetHeightIncludingPen(123.45);<br/>
&nbsp;&nbsp;i.SetWidthIncludingPen(234.56);<br/>
&nbsp;&nbsp;i.SetHeight(123.45);<br/>
&nbsp;&nbsp;i.SetWidth(234.56);<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lhs.GetContourPen() <a href="CppOperatorEqual.htm">==</a> rhs.GetContourPen()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetFocusPen() <a href="CppOperatorEqual.htm">==</a> lhs.GetFocusPen()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetRadiusX() <a href="CppOperatorEqual.htm">==</a> lhs.GetRadiusX()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetRadiusY() <a href="CppOperatorEqual.htm">==</a> lhs.GetRadiusY()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetRect() <a href="CppOperatorEqual.htm">==</a> lhs.GetRect()<br/>
&nbsp;&nbsp;;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorNotEqual.htm">operator!=</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&amp; rhs) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> !(lhs <a href="CppOperatorEqual.htm">==</a> rhs);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitemdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTROUNDEDRECTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTROUNDEDRECTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DisableSetSize() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoSomethingRandom() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt;&amp; GetItem() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> GetMinimumHeight() <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> 276; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_contour_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_focus_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_height_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_height_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_radius_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_radius_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_width_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> to work on<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt; m_item;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnContourPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnFocusPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnPosChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRadiusXchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRadiusYchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRectChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDRECTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtRoundedRectItem/qtroundedrectitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtRoundedRectItem/qtroundedrectitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>, rectangular-<a href="CppShape.htm">shape</a>d <a href="CppQGraphicsItem.htm">QGraphicsItem</a><br/>
Copyright (C) 2012-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppMake_shared.htm">make_shared</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGeometry.htm">geometry</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>dialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::~<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::DisableSetSize() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::DoSomethingRandom() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_x-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_x-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_y-&gt;setValue(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_y-&gt;value()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(<a href="CppStdRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> 3) <a href="CppOperatorMinus.htm">-</a> 1.0<br/>
&nbsp;&nbsp;);<br/>
<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.1";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-15: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-06-23: <a href="CppVersion.htm">version</a> 1.1: allow cooperation with <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>Dialog"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_contour_pen_width-&gt;setValue(qtitem-&gt;GetContourPen().widthF());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_focus_pen_width-&gt;setValue(qtitem-&gt;GetFocusPen().widthF());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_x <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetPos().x();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_y <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetPos().y();<br/>
&nbsp;&nbsp;ui-&gt;box_x-&gt;setValue(new_x);<br/>
&nbsp;&nbsp;ui-&gt;box_y-&gt;setValue(new_y);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_radius_x-&gt;setValue(qtitem-&gt;GetRadiusX());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;box_radius_y-&gt;setValue(qtitem-&gt;GetRadiusY());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRectChanged(<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> * <b><a href="CppConst.htm">const</a></b> qtitem) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetRect().width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetRect().height();<br/>
&nbsp;&nbsp;ui-&gt;box_width-&gt;setValue(new_width);<br/>
&nbsp;&nbsp;ui-&gt;box_height-&gt;setValue(new_height);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_width_including_pen <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetRectIncludingPen().width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> new_height_including_pen <a href="CppOperatorAssign.htm">=</a> qtitem-&gt;GetRectIncludingPen().height();<br/>
&nbsp;&nbsp;ui-&gt;box_width_including_pen-&gt;setValue(new_width_including_pen);<br/>
&nbsp;&nbsp;ui-&gt;box_height_including_pen-&gt;setValue(new_height_including_pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_contour_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a> pen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a>(qRgb(0,0,0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;arg1<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;SetContourPen(pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_focus_pen_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a> pen(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a>(qRgb(0,0,0)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;arg1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::DashLine<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;SetFocusPen(pen);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_height_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetHeight(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_height_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetHeightIncludingPen(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_radius_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetRadiusX(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_radius_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetRadiusY(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_width_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetWidth(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_width_including_pen_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetWidthIncludingPen(arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_x_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetPos(arg1,m_item-&gt;GetPos().y());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::on_box_y_valueChanged(<b><a href="CppDouble.htm">double</a></b> arg1)<br/>
{<br/>
&nbsp;&nbsp;m_item-&gt;SetPos(m_item-&gt;GetPos().x(),arg1);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::SetItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>&gt;&amp; item) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> verbose <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item <a href="CppOperatorEqual.htm">==</a> item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Setting item '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> (*item) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> contour_pen_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetContourPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> focus_pen_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetFocusPen();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pos_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetPos();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_x_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetRadiusX();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_y_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetRadiusY();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rect_after <a href="CppOperatorAssign.htm">=</a> item-&gt;GetRect();<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> contour_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> focus_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> pos_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> radius_x_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> radius_y_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> rect_changed <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> contour_pen_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetContourPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> focus_pen_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetFocusPen();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> pos_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetPos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_x_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetRadiusX();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> radius_y_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetRadiusY();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> rect_before <a href="CppOperatorAssign.htm">=</a> m_item-&gt;GetRect();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;contour_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> contour_pen_before <a href="CppOperatorNotEqual.htm">!=</a> contour_pen_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;focus_pen_changed&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> focus_pen_before <a href="CppOperatorNotEqual.htm">!=</a> focus_pen_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos_changed <a href="CppOperatorAssign.htm">=</a> pos_before <a href="CppOperatorNotEqual.htm">!=</a> pos_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_x_changed <a href="CppOperatorAssign.htm">=</a> radius_x_before <a href="CppOperatorNotEqual.htm">!=</a> radius_x_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;radius_y_changed <a href="CppOperatorAssign.htm">=</a> radius_y_before <a href="CppOperatorNotEqual.htm">!=</a> radius_y_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;rect_changed <a href="CppOperatorAssign.htm">=</a> rect_before <a href="CppOperatorNotEqual.htm">!=</a> rect_after;<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (verbose)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (contour_pen_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Contour pen will change from "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> contour_pen_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> contour_pen_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (focus_pen_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "FocusPen will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> focus_pen_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> focus_pen_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (pos_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Pos will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> pos_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> pos_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_x_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RadiusX will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_x_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_x_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_y_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RadiusY will change from " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_y_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> " to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> radius_y_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Rect will change from '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> rect_before<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "' to '" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> rect_after <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "'\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s.str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disconnect m_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_rect_changed.disconnect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRectChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Replace m_item by the <b><a href="CppNew.htm">new</a></b> one<br/>
&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> item;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetContourPen() <a href="CppOperatorEqual.htm">==</a> contour_pen_after);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetFocusPen()&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> focus_pen_after&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetPos()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> pos_after&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetRadiusX()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> radius_x_after&nbsp;&nbsp; );<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetRadiusY()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> radius_y_after&nbsp;&nbsp; );<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item-&gt;GetRect()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> rect_after&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );<br/>
<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnContourPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnFocusPenChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnPosChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusXchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRadiusYchanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;m_item-&gt;m_signal_rect_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::OnRectChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1)<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppEmit.htm">Emit</a> everything that has changed<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (contour_pen_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_contour_pen_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (focus_pen_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_focus_pen_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (pos_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_pos_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_x_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_x_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (radius_y_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_radius_y_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (rect_changed)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;m_signal_rect_changed(m_item.get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( item <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;m_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*item <a href="CppOperatorEqual.htm">==</a> *m_item);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Test");<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>Dialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
