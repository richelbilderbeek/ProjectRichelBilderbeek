<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Assert</title>
  <meta name="description" content="C++ Assert"/>
  <meta name="keywords" content="C++ Assert code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAssert.htm">Assert</a></h1>
<p>&nbsp;</p>
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicWindows.png" alt="Windows"/></p>
<p>&nbsp;</p>
<p>
  <a href="CppAssert.htm">assert</a> is a <a href="CppMacro.htm">macro</a> to do <a href="CppRunTime.htm">run time</a> <a href="CppDebug.htm">debugging</a> checks. 
  After <a href="CppDebug.htm">debugging</a>, <a href="CppDefine.htm">#define</a> <a href="CppNDEBUG.htm">NDEBUG</a> 
  to let the <a href="CppPreprocessor.htm">preprocessor</a> remove all <a href="CppAssert.htm">assert</a>s from your code.
</p> 
<p>&nbsp;</p>
<p>
  <a href="CppAssert.htm">assert</a> is <a href="CppDefine.htm">#define</a>d in <a href="CppCassertH.htm">cassert.h</a>
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Examples</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppAssertExample1.htm">assert example 1: basics</a></li>
  <li><a href="CppAssertExample2.htm">assert example 2: basics with informative output</a></li>
  <li><a href="CppAssertExample3.htm">assert example 3: a user defined assert</a></li>
  <li><a href="CppBuilderAssert.htm">Assert in a C++ Builder console Application</a></li>
  <li><a href="CppQtAssert.htm">Assert in a Qt Creator console Application</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Use <a href="CppAssert.htm">assert</a> extensively [1-5,7]
  </li>
  <li>
    The use of <a href="CppAssert.htm">assert</a> statements can help to <a href="CppDocumentation.htm">document</a> the assumptions you make when implementing your code [6]
  </li>
  <li>
    Do not assume that <a href="CppAssert.htm">assert</a> is always evaluated [8]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. ISBN: 0-32-111358-6. Chapter 68: 'Assert liberally to document internal assumptions and invariants'</li>
  <li><!--  2 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). 1997. ISBN: 0-201-88954-4. Advice 24.5.18: 'Explicitly express preconditions, postconditions, and other assertions as assertions'</li>
  <li><!--  3 -->Steve McConnell. Code Complete (2nd edition). 2004. ISBN: -735619670. Chapter 8.2 'Assertions', paragraph 'Guidelines for using asserts': 'Use assertions to document and verify preconditions and postconditions'</li>
  <li><!--  4 -->Steve McConnell. Code Complete (2nd edition). 2004. ISBN: -735619670. Chapter 8.2 'Assertions', paragraph 'Guidelines for using asserts': 'Use assertions for conditions that should never occur'.</li>
  <li><!--  5 --><a href="CppJesseLiberty.htm">Jesse Liberty</a>. Sams teach yourself C++ in 24 hours. ISBN: 0-672-32224-2. Hour 24, chapter 'assert()': 'Use assert freely'</li>
  <li><!--  6 --><a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Chapter 2.6: 'The use of assert statements can help to document the assumptions you make when implementing your code</li>
  <li><!--  7 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 884: '[13] Use static_assert() and assert() extensively'</li>
  <li><!--  8 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 30.5. Advice. page 884: '[14] Do not assume that assert() is always evaluated'</li>
</ol>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
