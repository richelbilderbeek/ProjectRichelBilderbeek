<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtSafeTimer</title>
  <meta name="description" content="C++ WtSafeTimer"/>
  <meta name="keywords" content="C++ WtSafeTimer "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtSafeTimer.htm">WtSafeTimer</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.694 at Fri Jan  2 09:58:27 2015
 -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtSafeTimer.htm">WtSafeTimer</a> is a <a href="CppForwardDeclaration.htm">forward-declaration</a>-safe 
<a href="CppWTimer.htm">Wt::WTimer</a>.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtSafeTimer/wtsafetimer.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtSafeTimer/wtsafetimer.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtSafeTimer.htm">WtSafeTimer</a>, forward-<a href="CppDeclaration.htm">declaration</a>-safe <a href="CppWTimer.htm">Wt::WTimer</a><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtSafeTimer.htm">CppWtSafeTimer</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> WTSAFETIMER_H<br/>
<a href="CppDefine.htm">#define</a> WTSAFETIMER_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/checked_delete.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppNoncopyable.htm">noncopyable</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppScoped_ptr.htm">scoped_ptr</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppWt.htm">Wt</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStruct.htm">struct</a></b> <a href="CppWTimer.htm">WTimer</a>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWObject.htm">WObject</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWEvent.htm">WEvent</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">///</a><a href="CppWtSafeTimer.htm">WtSafeTimer</a> is hopefully an even safer <a href="CppTime.htm">time</a>r than <a href="CppWTimer.htm">Wt::WTimer</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWtSafeTimer.htm">WtSafeTimer</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppBoostNoncopyable.htm">boost::noncopyable</a>, <a href="CppWObject.htm">Wt::WObject</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConstructor.htm">Construct</a> a <a href="CppWtSafeTimer.htm">WtSafeTimer</a> from its firing <a href="CppTime.htm">time</a><br/>
&nbsp;&nbsp;<a href="CppWtSafeTimer.htm">WtSafeTimer</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppTime.htm">time</a>_msec);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppWtSafeTimer.htm">WtSafeTimer</a>'s current <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppWtSafeTimer.htm">WtSafeTimer</a>'s <a href="CppVersion.htm">version</a> history<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppSignal.htm">signal</a> <a href="CppEmit.htm">emitted</a> every tick<br/>
&nbsp;&nbsp;<a href="CppEventSignal.htm">Wt::EventSignal</a>&lt;<a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&gt;&amp; <a href="CppTime.htm">time</a>out();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\brief<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Only allow a <a href="CppBoost.htm">Boost</a> <a href="CppSmartPointer.htm">smart pointer</a> to <b><a href="CppDelete.htm">delete</a></b> <a href="CppWtSafeTimer.htm">WtSafeTimer</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/This prevents the following trouble,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/cited from http://www.<a href="CppBoost.htm">boost</a>.org/libs/utility/checked_delete.html:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The C<a href="CppOperatorIncrement.htm">++</a> Standard allows, in 5.3.5/5, <a href="CppPointer.htm">pointer</a>s to in<b><a href="CppCompl.htm">compl</a></b>ete<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppClass.htm">class</a></b> types to be deleted with a <b><a href="CppDelete.htm">delete</a></b>-expression.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/When the <b><a href="CppClass.htm">class</a></b> has a non-trivial <a href="CppDestructor.htm">destructor</a>, or a <b><a href="CppClass.htm">class</a></b>-specific <b><a href="CppOperator.htm">operator</a></b><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppDelete.htm">delete</a></b>, the behavior is undefined. Some <a href="CppCompiler.htm">compilers</a> issue a warning when an<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/in<b><a href="CppCompl.htm">compl</a></b>ete type is deleted, but unfortunately, not all <b><a href="CppDo.htm">do</a></b>, and programmers<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/some<a href="CppTime.htm">time</a>s ignore or disable warnings.<br/>
&nbsp;&nbsp;~<a href="CppWtSafeTimer.htm">WtSafeTimer</a>();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Only allow a <a href="CppBoost.htm">Boost</a> <a href="CppSmartPointer.htm">smart pointer</a> to <b><a href="CppDelete.htm">delete</a></b> <a href="CppWtSafeTimer.htm">WtSafeTimer</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Template syntax from <a href="CppHerbSutter.htm">Herb Sutter</a>. <a href="CppException.htm">Exception</a>al C<a href="CppOperatorIncrement.htm">++</a> style. 2005. ISBN: 0-201-76042-8. Item 8: '<a href="CppFriend.htm">Befriending</a> <a href="CppTemplate.htm">templates</a>'.<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppBoostChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(<a href="CppWtSafeTimer.htm">WtSafeTimer</a>*);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Internal ticking <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>r();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The fortified <a href="CppWTimer.htm">Wt::WTimer</a><br/>
&nbsp;&nbsp;<a href="CppBoostScoped_ptr.htm">boost::scoped_ptr</a>&lt;<a href="CppWTimer.htm">Wt::WTimer</a>&gt; m_<a href="CppTime.htm">time</a>r;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> WTSAFETIMER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppWtSafeTimer/wtsafetimer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppWtSafeTimer/wtsafetimer.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtSafeTimer.htm">WtSafeTimer</a>, forward-<a href="CppDeclaration.htm">declaration</a>-safe <a href="CppWTimer.htm">Wt::WTimer</a><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtSafeTimer.htm">CppWtSafeTimer</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTimer.htm">WTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWEvent.htm">WEvent</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppWtSafeTimer.htm">wtsafetimer</a>.h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppWtSafeTimer.htm">WtSafeTimer</a>::<a href="CppWtSafeTimer.htm">WtSafeTimer</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppTime.htm">time</a>_msec)<br/>
&nbsp;&nbsp;: m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppWTimer.htm">Wt::WTimer</a>)<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(<a href="CppTime.htm">time</a>_msec);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppWtSafeTimer.htm">WtSafeTimer</a>::~<a href="CppWtSafeTimer.htm">WtSafeTimer</a>()<br/>
{<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> <a href="CppWtSafeTimer.htm">WtSafeTimer</a>::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppWtSafeTimer.htm">WtSafeTimer</a>::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("YYYY-MM-DD: <a href="CppVersion.htm">version</a> X.Y: [description]");<br/>
&nbsp;&nbsp;v.push_back("2011-06-22: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppWtSafeTimer.htm">WtSafeTimer</a>::On<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="Cpp__func__.htm">__func__</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<a href="CppTime.htm">time</a>out().<b><a href="CppEmit.htm">emit</a></b>(<a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>());<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEventSignal.htm">Wt::EventSignal</a>&lt;<a href="CppWMouseEvent.htm">Wt::WMouseEvent</a>&gt;&amp; <a href="CppWtSafeTimer.htm">WtSafeTimer</a>::<a href="CppTime.htm">time</a>out()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppTime.htm">time</a>r);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppTime.htm">time</a>r-&gt;<a href="CppTime.htm">time</a>out();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
