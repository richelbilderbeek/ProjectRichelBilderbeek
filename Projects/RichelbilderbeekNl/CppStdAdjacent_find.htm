<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::adjacent_find</title>
  <meta name="description" content="C++ std::adjacent_find"/>
  <meta name="keywords" content="C++ std::adjacent_find std adjacent_find adjacent find STL code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAdjacent_find.htm">std::adjacent_find</a></h1>
<p>&nbsp;</p>
<p><a href="CppAdjacent_find.htm">std::adjacent_find</a> is an <a href="CppStl.htm">STL</a> <a href="CppAlgorithm.htm">algorithm</a> to search a <a href="CppContainer.htm">container</a> for two adjacent identical values.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Project and source code</h2>
<p>&nbsp;</p>
<p>Operating system: <a href="http://www.ubuntu.com">Ubuntu</a> 10.04 LTS Lucid Lynx</p>
<p><a href="CppIde.htm">IDE</a>: <a href="CppQt.htm">Qt Creator</a> 2.0.0</p>
<p><a href="CppQtProjectType.htm">Project type</a>: Qt4 <a href="CppGui.htm">GUI</a> Application</p>
<p><a href="CppCompiler.htm">Compiler</a>: <a href="CppGpp.htm">G++</a> 4.4.1</p>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
<!--  <li><a href="CppBoost.htm">Boost</a>: version 1.40</li>  -->
<!--  <li><a href="CppQt.htm">Qt</a>: version 4.7.0 (32 bit)</li> -->
  <li><a href="CppStl.htm">STL</a>: from <a href="CppGcc.htm">GCC</a>, shipped with <a href="CppQt.htm">Qt Creator</a> 2.0.0</li>
</ul>
<p>&nbsp;</p>
<ul>
  <li><a href="CppAdjacent_find.zip">Download the Qt Creator project 'CppAdjacent_find' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3>main.cpp</h3>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v;<br/>
&nbsp;&nbsp;v.push_back(0);<br/>
&nbsp;&nbsp;v.push_back(1);<br/>
&nbsp;&nbsp;v.push_back(2);<br/>
&nbsp;&nbsp;v.push_back(2);<br/>
&nbsp;&nbsp;v.push_back(3);<br/>
&nbsp;&nbsp;v.push_back(4);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppAdjacent_find.htm">std::adjacent_find</a>(v.begin(),v.end())<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*<a href="CppAdjacent_find.htm">std::adjacent_find</a>(v.begin(),v.end())<a href="CppOperatorEqual.htm">==</a>2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove duplicate<br/>
&nbsp;&nbsp;v[2]=5;<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppAdjacent_find.htm">std::adjacent_find</a>(v.begin(),v.end())<a href="CppOperatorEqual.htm">==</a>v.end());<br/>
}<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
