<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>const is not deep</title>
  <meta name="description" content="C++ const is not deep"/>
  <meta name="keywords" content="C++ const is not deep code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppConstIsNotDeep.htm">const is not deep</a></h1>
<p>&nbsp;</p>
<p>The meaning of '<a href="CppConstIsNotDeep.htm">const is not deep</a>' can be viewed in the example below:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWidget.htm">Widget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x) : mX(x) {}<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> mX;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWidget.htm">Widget</a>Manager<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWidget.htm">Widget</a>Manager()<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;mV.push_back(<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt;(<b><a href="CppNew.htm">new</a></b> <a href="CppWidget.htm">Widget</a>(69)));<br/>
&nbsp;&nbsp;}<br/>
 <br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>A getter?<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt; &gt; Get<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> mV; }<br/>
 <br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a> &lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt; &gt; mV;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>Manager m; <a href="CppComment.htm">//</a>Cannot modify <a href="CppWidget.htm">Widget</a>Manager<br/>
&nbsp;&nbsp;m.Get<a href="CppWidget.htm">Widget</a>s()[0]-&gt;mX <a href="CppOperatorAssign.htm">=</a> 0; <a href="CppComment.htm">//</a>CAN modify a <a href="CppWidget.htm">Widget</a> of a <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>Manager!<br/>
} <br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>The desired and proper getter of WidgetManager should be the following, in which the Widgets themselves are also <a href="CppConst.htm">const</a>:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWidget.htm">Widget</a>Manager<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>&gt; &gt;&amp; Get<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> mV; }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>...<br/>
};<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>The <a href="CppCompiler.htm">compiler</a>, however, states that is cannot add const to the Widget:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
[<a href="Cpp.htm">C++</a> Error] Unit1.cpp(51): E2034 Cannot <a href="CppConvert.htm">convert</a> '<b><a href="CppConst.htm">const</a></b> _<a href="CppStl.htm">STL</a>::vector&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt;,_<a href="CppStl.htm">STL</a>::allocator&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt; &gt; &gt;' to '_<a href="CppStl.htm">STL</a>::vector&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>&gt;,_<a href="CppStl.htm">STL</a>::allocator&lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>&gt; &gt; &gt;'<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>The solution is to write a function to add const yourself:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a> &lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt; <a href="CppAdd.htm">Add</a>Const(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a> &lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;T&gt; &gt; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppVector.htm">std::vector</a> &lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt;(v.begin(),v.end());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>The function needs to be called in the getter <a href="CppMemberFunction.htm">member function</a> as shown below. Note that the
getter cannot return a reference to the original Widgets anymore.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppWidget.htm">Widget</a>Manager<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a> &lt;<a href="CppShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>&gt; &gt; Get<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> <a href="CppAdd.htm">Add</a>Const(mV); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>...<br/>
};<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
