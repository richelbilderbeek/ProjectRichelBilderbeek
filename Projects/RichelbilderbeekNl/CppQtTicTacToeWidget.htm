<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtTicTacToeWidget</title>
  <meta name="description" content="C++ QtTicTacToeWidget"/>
  <meta name="keywords" content="C++ QtTicTacToeWidget "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.1.637 at Thu May  1 21:03:23 2014
 -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppClass.htm">class</a> to display the <a href="CppTicTacToe.htm">TicTacToe</a> <a href="CppClass.htm">class</a>.</p>
<p>&nbsp;</p>
<p><a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a> is used by:</p>
<ul>
  <li><a href="GameTicTacToe.htm">(Game) TicTacToe</a></li>
  <li><a href="ToolTestTicTacToe.htm">(Tool) TestTicTacToe</a></li>
</ul>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtTicTacToeWidget/CppQtTicTacToeWidget.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtTicTacToeWidget/CppQtTicTacToeWidget.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a>/<a href="CppQtTicTacToeWidget.htm">qttictactoewidget</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a>/<a href="CppQtTicTacToeWidget.htm">qttictactoewidget</a>.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtTicTacToeWidget/qttictactoewidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtTicTacToeWidget/qttictactoewidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>, <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppTicTacToe.htm">TicTacToe</a> <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> QTTICTACTOEWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTTICTACTOEWIDGET_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a>fwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppTicTacToe.htm">tictactoe</a> {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQWidget.htm">QWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt;&amp; player1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt;&amp; player2,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">Widget</a>&gt; Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called every second, <a href="CppMake.htm">make</a>s the AI <b><a href="CppDo.htm">do</a></b> a move<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>r() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Restart() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/mousePressEvent must be <b><a href="CppPublic.htm">public</a></b> <b><a href="CppFor.htm">for</a></b> <a href="CppTicTacToe.htm">TicTacToe</a>Test's<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppVirtual.htm">virtual</a></b> mouse clicks<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>*)&gt; m_signal_changed;<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>*)&gt; m_signal_has_winner;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt; m_player1;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt; m_player2;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnChanged();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppTicTacToe.htm">tictactoe</a><br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTTICTACTOEWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppQtTicTacToeWidget/qttictactoewidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppQtTicTacToeWidget/qttictactoewidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>, <a href="CppWidget.htm">widget</a> <b><a href="CppFor.htm">for</a></b> <a href="CppTicTacToe.htm">TicTacToe</a> <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2010-2014 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppQtTicTacToeWidget.htm">CppQtTicTacToeWidget</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-typedefs"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtTicTacToeWidget.htm">qttictactoewidget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMouseEvent.htm">QMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a>ai.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a>ais.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a>board.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a>game.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTicTacToe.htm">tictactoe</a><a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt;&amp; player1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Ai&gt;&amp; player2,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQWidget.htm">QWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_has_winner{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_player1{player1},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_player2{player2},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppWidget.htm">Widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMinimumHeight(64);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMinimumWidth(64);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppTime.htm">time</a>r <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<a href="CppTime.htm">time</a>r,&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::On<a href="CppTime.htm">Time</a>r);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;setInterval(1000);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;start();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostBind.htm">boost::bind</a>(&amp;<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::OnChanged,<b><a href="CppThis.htm">this</a></b>)<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
}<br/>
<br/>
<a href="CppStdString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.3";<br/>
}<br/>
<br/>
<a href="CppStdVector.htm">std::vector</a>&lt;<a href="CppStdString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"20xx-xx-xx: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-02-03: <a href="CppVersion.htm">version</a> 1.1: improved <a href="CppInterface.htm">interface</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-03-17: <a href="CppVersion.htm">version</a> 1.2: use <a href="CppWidget.htm">Widget</a> as a member variable"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2014-03-21: <a href="CppVersion.htm">version</a> 1.3: added computer AI"<br/>
&nbsp;&nbsp;};<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::mousePressEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> * e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> Winner::no_winner) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 3 * e-&gt;x() <a href="CppOperatorDivide.htm">/</a> <b><a href="CppThis.htm">this</a></b>-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x &lt; 0 <a href="CppOperatorLogicalOr.htm">||</a> x &gt; 2) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 3 * e-&gt;y() <a href="CppOperatorDivide.htm">/</a> <b><a href="CppThis.htm">this</a></b>-&gt;height();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y &lt; 0 <a href="CppOperatorLogicalOr.htm">||</a> y &gt; 2) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;CanSelect(x,y))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Select(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;DoMove();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> Winner::no_winner)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_has_winner(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::OnChanged()<br/>
{<br/>
&nbsp;&nbsp;repaint();<br/>
&nbsp;&nbsp;m_signal_changed(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::On<a href="CppTime.htm">Time</a>r() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>-&gt;GetWinner() <a href="CppOperatorNotEqual.htm">!=</a> Winner::no_winner) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Ai&gt; ai(m_<a href="CppWidget.htm">widget</a>-&gt;GetCurrentPlayer() <a href="CppOperatorEqual.htm">==</a> Player::player1 ? m_player1: m_player2);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!ai) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> move(ai-&gt;SuggestMove(*m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Select(move.first,move.second);<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;DoMove();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::paintEvent(<a href="CppQPaintEvent.htm">QPaintEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> width&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;height();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppTicTacToe.htm">TicTacToe</a><a href="CppWidget.htm">Widget</a>::paintEvent\n";<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set black pen<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen <a href="CppOperatorAssign.htm">=</a> painter.pen();<br/>
&nbsp;&nbsp;pen.setCapStyle(<a href="CppQt.htm">Qt</a>::RoundCap);<br/>
&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>::fromRgb(255,255,255));<br/>
&nbsp;&nbsp;painter.setPen(pen);<br/>
&nbsp;&nbsp;painter.setBrush(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>::fromRgb(255,255,255)));<br/>
&nbsp;&nbsp;painter.drawRect(<b><a href="CppThis.htm">this</a></b>-&gt;rect());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set thick white pen<br/>
&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>::fromRgb(0,0,0));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> line_width <a href="CppOperatorAssign.htm">=</a> <a href="CppStdMin.htm">std::min</a>(width,height) <a href="CppOperatorDivide.htm">/</a> 15;<br/>
&nbsp;&nbsp;pen.setWidth(line_width);<br/>
&nbsp;&nbsp;painter.setPen(pen);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Vertical lines<br/>
&nbsp;&nbsp;painter.drawLine(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;((1*width)/3)+4,&nbsp;&nbsp;&nbsp;&nbsp; 0+(line_width/2),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;((1*width)/3)-4,height-(line_width/2));<br/>
&nbsp;&nbsp;painter.drawLine(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;((2*width)/3)-4,&nbsp;&nbsp;&nbsp;&nbsp; 0+(line_width/2),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;((2*width)/3)+8,height-(line_width/2));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Horizontal lines<br/>
&nbsp;&nbsp;painter.drawLine(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0+(line_width/2),((1*height)/3)+4,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width-(line_width/2),((1*height)/3)-4);<br/>
&nbsp;&nbsp;painter.drawLine(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0+(line_width/2),((2*height)/3)-4,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;width-(line_width/2),((2*height)/3)+8);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> row=0; row<a href="CppOperatorNotEqual.htm">!=</a>3; <a href="CppOperatorIncrement.htm">++</a>row)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1 <a href="CppOperatorAssign.htm">=</a> ((row <a href="CppOperatorPlus.htm">+</a> 0) * (width <a href="CppOperatorDivide.htm">/</a> 3)) <a href="CppOperatorPlus.htm">+</a> (line_width/1) <a href="CppOperatorPlus.htm">+</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2 <a href="CppOperatorAssign.htm">=</a> ((row <a href="CppOperatorPlus.htm">+</a> 1) * (width <a href="CppOperatorDivide.htm">/</a> 3)) <a href="CppOperatorMinus.htm">-</a> (line_width/1) <a href="CppOperatorMinus.htm">-</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> col=0; col<a href="CppOperatorNotEqual.htm">!=</a>3; <a href="CppOperatorIncrement.htm">++</a>col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1 <a href="CppOperatorAssign.htm">=</a> ((col <a href="CppOperatorPlus.htm">+</a> 0) * (height <a href="CppOperatorDivide.htm">/</a> 3)) <a href="CppOperatorPlus.htm">+</a> (line_width/1) <a href="CppOperatorPlus.htm">+</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y2 <a href="CppOperatorAssign.htm">=</a> ((col <a href="CppOperatorPlus.htm">+</a> 1) * (height <a href="CppOperatorDivide.htm">/</a> 3)) <a href="CppOperatorMinus.htm">-</a> (line_width/1) <a href="CppOperatorMinus.htm">-</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> state(m_<a href="CppWidget.htm">widget</a>-&gt;GetGame()-&gt;GetBoard()-&gt;GetSquare(row,col));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (state <a href="CppOperatorEqual.htm">==</a> Square::player1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>player1 <a href="CppOperatorAssign.htm">=</a> cross<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawLine(x1,y1,x2,y2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawLine(x1,y2,x2,y1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (state <a href="CppOperatorEqual.htm">==</a> Square::player2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>player1 <a href="CppOperatorAssign.htm">=</a> circle<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;painter.drawEllipse(x1,y1,x2-x1,y2-y1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;repaint();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Restart() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;Restart();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Test");<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppAuto.htm">auto</a></b> ai: Ais().GetAll())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a> w(ai,<b><a href="CppNullptr.htm">nullptr</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">Widget</a> w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!w.Get<a href="CppVersion.htm">Version</a>().empty());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::<a href="CppTicTacToe.htm">tictactoe</a>::<a href="CppQtTicTacToeWidget.htm">QtTicTacToeWidget</a>::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
